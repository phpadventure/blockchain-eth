{
	"id": "856b5d1d471e1444f8ae6152cb23bf55",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"VolunteerCollectionNFT_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Arrays.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/ERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: VolunteerCollectionNFT.sol\n\n\npragma solidity ^0.8.20;\n\n\n\ncontract VolunteerCollectionNFT is ERC1155, Ownable {\n    constructor(address initialOwner) ERC1155(\"\") Ownable(initialOwner) {}\n\n    function mint(address account, uint256 id, uint256 amount, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mint(account, id, amount, data);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"VolunteerCollectionNFT_flattened.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VolunteerCollectionNFT_flattened.sol\":30160:34686  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"VolunteerCollectionNFT_flattened.sol\":30160:34686  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cb7d07963de421462de14ef6894215e74ad55c6aa09777485f6fb981119add9264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cb7d07963de421462de14ef6894215e74ad55c6aa09777485f6fb981119add9264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH30 0x7963DE421462DE14EF6894215E74AD55C6AA09777485F6FB981119ADD92 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "30160:4526:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cb7d07963de421462de14ef6894215e74ad55c6aa09777485f6fb981119add9264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH30 0x7963DE421462DE14EF6894215E74AD55C6AA09777485F6FB981119ADD92 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "30160:4526:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30160,
									"end": 34686,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb7d07963de421462de14ef6894215e74ad55c6aa09777485f6fb981119add9264736f6c634300081a0033",
									".code": [
										{
											"begin": 30160,
											"end": 34686,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 34686,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 34686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 34686,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30160,
											"end": 34686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30160,
											"end": 34686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 34686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30160,
											"end": 34686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 34686,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"VolunteerCollectionNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"ERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1735,
								"contract": "VolunteerCollectionNFT_flattened.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1741,
								"contract": "VolunteerCollectionNFT_flattened.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1743,
								"contract": "VolunteerCollectionNFT_flattened.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VolunteerCollectionNFT_flattened.sol\":15032:29946  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"VolunteerCollectionNFT_flattened.sol\":15032:29946  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205317e988314128f99faa64a542b03562cb65faf4584a278f03834b9172cc296664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205317e988314128f99faa64a542b03562cb65faf4584a278f03834b9172cc296664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 OR 0xE9 DUP9 BALANCE COINBASE 0x28 0xF9 SWAP16 0xAA PUSH5 0xA542B03562 0xCB PUSH6 0xFAF4584A278F SUB DUP4 0x4B SWAP2 PUSH19 0xCC296664736F6C634300081A00330000000000 ",
							"sourceMap": "15032:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205317e988314128f99faa64a542b03562cb65faf4584a278f03834b9172cc296664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 OR 0xE9 DUP9 BALANCE COINBASE 0x28 0xF9 SWAP16 0xAA PUSH5 0xA542B03562 0xCB PUSH6 0xFAF4584A278F SUB DUP4 0x4B SWAP2 PUSH19 0xCC296664736F6C634300081A00330000000000 ",
							"sourceMap": "15032:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15032,
									"end": 29946,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205317e988314128f99faa64a542b03562cb65faf4584a278f03834b9172cc296664736f6c634300081a0033",
									".code": [
										{
											"begin": 15032,
											"end": 29946,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 15032,
											"end": 29946,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15032,
											"end": 29946,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15032,
											"end": 29946,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15032,
											"end": 29946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15032,
											"end": 29946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15032,
											"end": 29946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15032,
											"end": 29946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15032,
											"end": 29946,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"VolunteerCollectionNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2750,
								"contract": "VolunteerCollectionNFT_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VolunteerCollectionNFT_flattened.sol\":12119:14804  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"VolunteerCollectionNFT_flattened.sol\":12119:14804  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d2c67f63399a7d01201ad3bf44ac881a99ba334dd01495f311bd1b26e050d8664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203d2c67f63399a7d01201ad3bf44ac881a99ba334dd01495f311bd1b26e050d8664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0x2C PUSH8 0xF63399A7D01201AD EXTCODESIZE DELEGATECALL BLOBBASEFEE 0xC8 DUP2 0xA9 SWAP12 LOG3 CALLVALUE 0xDD ADD BLOBHASH PUSH0 BALANCE SHL 0xD1 0xB2 PUSH15 0x50D8664736F6C634300081A003300 ",
							"sourceMap": "12119:2685:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203d2c67f63399a7d01201ad3bf44ac881a99ba334dd01495f311bd1b26e050d8664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0x2C PUSH8 0xF63399A7D01201AD EXTCODESIZE DELEGATECALL BLOBBASEFEE 0xC8 DUP2 0xA9 SWAP12 LOG3 CALLVALUE 0xDD ADD BLOBHASH PUSH0 BALANCE SHL 0xD1 0xB2 PUSH15 0x50D8664736F6C634300081A003300 ",
							"sourceMap": "12119:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12119,
									"end": 14804,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d2c67f63399a7d01201ad3bf44ac881a99ba334dd01495f311bd1b26e050d8664736f6c634300081a0033",
									".code": [
										{
											"begin": 12119,
											"end": 14804,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 14804,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 14804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 14804,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12119,
											"end": 14804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12119,
											"end": 14804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 14804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12119,
											"end": 14804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 14804,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"VolunteerCollectionNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VolunteerCollectionNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VolunteerCollectionNFT_flattened.sol\":60961:61261  contract VolunteerCollectionNFT is ERC1155, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"VolunteerCollectionNFT_flattened.sol\":61019:61089  constructor(address initialOwner) ERC1155(\"\") Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"VolunteerCollectionNFT_flattened.sol\":61073:61085  initialOwner */\n  dup1\n    /* \"VolunteerCollectionNFT_flattened.sol\":42134:42196  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"VolunteerCollectionNFT_flattened.sol\":42176:42189  _setURI(uri_) */\n  tag_8\n    /* \"VolunteerCollectionNFT_flattened.sol\":42184:42188  uri_ */\n  dup2\n    /* \"VolunteerCollectionNFT_flattened.sol\":42176:42183  _setURI */\n  shl(0x20, tag_9)\n    /* \"VolunteerCollectionNFT_flattened.sol\":42176:42189  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"VolunteerCollectionNFT_flattened.sol\":42134:42196  constructor(string memory uri_) {... */\n  pop\n    /* \"VolunteerCollectionNFT_flattened.sol\":59089:59090  0 */\n  0x00\n    /* \"VolunteerCollectionNFT_flattened.sol\":59065:59091  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"VolunteerCollectionNFT_flattened.sol\":59065:59077  initialOwner */\n  dup2\n    /* \"VolunteerCollectionNFT_flattened.sol\":59065:59091  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"VolunteerCollectionNFT_flattened.sol\":59061:59156  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"VolunteerCollectionNFT_flattened.sol\":59142:59143  0 */\n  0x00\n    /* \"VolunteerCollectionNFT_flattened.sol\":59114:59145  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"VolunteerCollectionNFT_flattened.sol\":59061:59156  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"VolunteerCollectionNFT_flattened.sol\":59165:59197  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"VolunteerCollectionNFT_flattened.sol\":59184:59196  initialOwner */\n  dup2\n    /* \"VolunteerCollectionNFT_flattened.sol\":59165:59183  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"VolunteerCollectionNFT_flattened.sol\":59165:59197  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"VolunteerCollectionNFT_flattened.sol\":59017:59204  constructor(address initialOwner) {... */\n  pop\n    /* \"VolunteerCollectionNFT_flattened.sol\":61019:61089  constructor(address initialOwner) ERC1155(\"\") Ownable(initialOwner) {} */\n  pop\n    /* \"VolunteerCollectionNFT_flattened.sol\":60961:61261  contract VolunteerCollectionNFT is ERC1155, Ownable {... */\n  jump(tag_17)\n    /* \"VolunteerCollectionNFT_flattened.sol\":51165:51251  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"VolunteerCollectionNFT_flattened.sol\":51238:51244  newuri */\n  dup1\n    /* \"VolunteerCollectionNFT_flattened.sol\":51231:51235  _uri */\n  0x02\n    /* \"VolunteerCollectionNFT_flattened.sol\":51231:51244  _uri = newuri */\n  swap1\n  dup2\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"VolunteerCollectionNFT_flattened.sol\":51165:51251  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"VolunteerCollectionNFT_flattened.sol\":60704:60891  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"VolunteerCollectionNFT_flattened.sol\":60777:60793  address oldOwner */\n  0x00\n    /* \"VolunteerCollectionNFT_flattened.sol\":60796:60802  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"VolunteerCollectionNFT_flattened.sol\":60777:60802  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"VolunteerCollectionNFT_flattened.sol\":60821:60829  newOwner */\n  dup2\n    /* \"VolunteerCollectionNFT_flattened.sol\":60812:60818  _owner */\n  0x03\n  0x00\n    /* \"VolunteerCollectionNFT_flattened.sol\":60812:60829  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"VolunteerCollectionNFT_flattened.sol\":60875:60883  newOwner */\n  dup2\n    /* \"VolunteerCollectionNFT_flattened.sol\":60844:60884  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"VolunteerCollectionNFT_flattened.sol\":60865:60873  oldOwner */\n  dup2\n    /* \"VolunteerCollectionNFT_flattened.sol\":60844:60884  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"VolunteerCollectionNFT_flattened.sol\":60767:60891  {... */\n  pop\n    /* \"VolunteerCollectionNFT_flattened.sol\":60704:60891  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":932:1051   */\ntag_63:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_65\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_29:\n    /* \"#utility.yul\":1289:1313   */\n  tag_67\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_26\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_13:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_69\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_29\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1653   */\ntag_30:\n    /* \"#utility.yul\":1606:1612   */\n  0x00\n    /* \"#utility.yul\":1640:1645   */\n  dup2\n    /* \"#utility.yul\":1634:1646   */\n  mload\n    /* \"#utility.yul\":1624:1646   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1653   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1659:1839   */\ntag_31:\n    /* \"#utility.yul\":1707:1784   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1704:1705   */\n  0x00\n    /* \"#utility.yul\":1697:1785   */\n  mstore\n    /* \"#utility.yul\":1804:1808   */\n  0x41\n    /* \"#utility.yul\":1801:1802   */\n  0x04\n    /* \"#utility.yul\":1794:1809   */\n  mstore\n    /* \"#utility.yul\":1828:1832   */\n  0x24\n    /* \"#utility.yul\":1825:1826   */\n  0x00\n    /* \"#utility.yul\":1818:1833   */\n  revert\n    /* \"#utility.yul\":1845:2025   */\ntag_32:\n    /* \"#utility.yul\":1893:1970   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1890:1891   */\n  0x00\n    /* \"#utility.yul\":1883:1971   */\n  mstore\n    /* \"#utility.yul\":1990:1994   */\n  0x22\n    /* \"#utility.yul\":1987:1988   */\n  0x04\n    /* \"#utility.yul\":1980:1995   */\n  mstore\n    /* \"#utility.yul\":2014:2018   */\n  0x24\n    /* \"#utility.yul\":2011:2012   */\n  0x00\n    /* \"#utility.yul\":2004:2019   */\n  revert\n    /* \"#utility.yul\":2031:2351   */\ntag_33:\n    /* \"#utility.yul\":2075:2081   */\n  0x00\n    /* \"#utility.yul\":2112:2113   */\n  0x02\n    /* \"#utility.yul\":2106:2110   */\n  dup3\n    /* \"#utility.yul\":2102:2114   */\n  div\n    /* \"#utility.yul\":2092:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2160   */\n  0x01\n    /* \"#utility.yul\":2153:2157   */\n  dup3\n    /* \"#utility.yul\":2149:2161   */\n  and\n    /* \"#utility.yul\":2180:2198   */\n  dup1\n    /* \"#utility.yul\":2170:2251   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2236:2240   */\n  0x7f\n    /* \"#utility.yul\":2228:2234   */\n  dup3\n    /* \"#utility.yul\":2224:2241   */\n  and\n    /* \"#utility.yul\":2214:2241   */\n  swap2\n  pop\n    /* \"#utility.yul\":2170:2251   */\ntag_74:\n    /* \"#utility.yul\":2298:2300   */\n  0x20\n    /* \"#utility.yul\":2290:2296   */\n  dup3\n    /* \"#utility.yul\":2287:2301   */\n  lt\n    /* \"#utility.yul\":2267:2285   */\n  dup2\n    /* \"#utility.yul\":2264:2302   */\n  sub\n    /* \"#utility.yul\":2261:2345   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2317:2335   */\n  tag_76\n  tag_32\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2261:2345   */\ntag_75:\n    /* \"#utility.yul\":2082:2351   */\n  pop\n    /* \"#utility.yul\":2031:2351   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2357:2498   */\ntag_34:\n    /* \"#utility.yul\":2406:2410   */\n  0x00\n    /* \"#utility.yul\":2429:2432   */\n  dup2\n    /* \"#utility.yul\":2421:2432   */\n  swap1\n  pop\n    /* \"#utility.yul\":2452:2455   */\n  dup2\n    /* \"#utility.yul\":2449:2450   */\n  0x00\n    /* \"#utility.yul\":2442:2456   */\n  mstore\n    /* \"#utility.yul\":2486:2490   */\n  0x20\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2473:2491   */\n  keccak256\n    /* \"#utility.yul\":2465:2491   */\n  swap1\n  pop\n    /* \"#utility.yul\":2357:2498   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2504:2597   */\ntag_35:\n    /* \"#utility.yul\":2541:2547   */\n  0x00\n    /* \"#utility.yul\":2588:2590   */\n  0x20\n    /* \"#utility.yul\":2583:2585   */\n  0x1f\n    /* \"#utility.yul\":2576:2581   */\n  dup4\n    /* \"#utility.yul\":2572:2586   */\n  add\n    /* \"#utility.yul\":2568:2591   */\n  div\n    /* \"#utility.yul\":2558:2591   */\n  swap1\n  pop\n    /* \"#utility.yul\":2504:2597   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2603:2710   */\ntag_36:\n    /* \"#utility.yul\":2647:2655   */\n  0x00\n    /* \"#utility.yul\":2697:2702   */\n  dup3\n    /* \"#utility.yul\":2691:2695   */\n  dup3\n    /* \"#utility.yul\":2687:2703   */\n  shl\n    /* \"#utility.yul\":2666:2703   */\n  swap1\n  pop\n    /* \"#utility.yul\":2603:2710   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2716:3109   */\ntag_37:\n    /* \"#utility.yul\":2785:2791   */\n  0x00\n    /* \"#utility.yul\":2835:2836   */\n  0x08\n    /* \"#utility.yul\":2823:2833   */\n  dup4\n    /* \"#utility.yul\":2819:2837   */\n  mul\n    /* \"#utility.yul\":2858:2955   */\n  tag_81\n    /* \"#utility.yul\":2888:2954   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2877:2886   */\n  dup3\n    /* \"#utility.yul\":2858:2955   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2976:3015   */\n  tag_82\n    /* \"#utility.yul\":3006:3014   */\n  dup7\n    /* \"#utility.yul\":2995:3004   */\n  dup4\n    /* \"#utility.yul\":2976:3015   */\n  tag_36\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2964:3015   */\n  swap6\n  pop\n    /* \"#utility.yul\":3048:3052   */\n  dup1\n    /* \"#utility.yul\":3044:3053   */\n  not\n    /* \"#utility.yul\":3037:3042   */\n  dup5\n    /* \"#utility.yul\":3033:3054   */\n  and\n    /* \"#utility.yul\":3024:3054   */\n  swap4\n  pop\n    /* \"#utility.yul\":3097:3101   */\n  dup1\n    /* \"#utility.yul\":3087:3095   */\n  dup7\n    /* \"#utility.yul\":3083:3102   */\n  and\n    /* \"#utility.yul\":3076:3081   */\n  dup5\n    /* \"#utility.yul\":3073:3103   */\n  or\n    /* \"#utility.yul\":3063:3103   */\n  swap3\n  pop\n    /* \"#utility.yul\":2792:3109   */\n  pop\n  pop\n    /* \"#utility.yul\":2716:3109   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3115:3192   */\ntag_38:\n    /* \"#utility.yul\":3152:3159   */\n  0x00\n    /* \"#utility.yul\":3181:3186   */\n  dup2\n    /* \"#utility.yul\":3170:3186   */\n  swap1\n  pop\n    /* \"#utility.yul\":3115:3192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3198:3258   */\ntag_39:\n    /* \"#utility.yul\":3226:3229   */\n  0x00\n    /* \"#utility.yul\":3247:3252   */\n  dup2\n    /* \"#utility.yul\":3240:3252   */\n  swap1\n  pop\n    /* \"#utility.yul\":3198:3258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3264:3406   */\ntag_40:\n    /* \"#utility.yul\":3314:3323   */\n  0x00\n    /* \"#utility.yul\":3347:3400   */\n  tag_86\n    /* \"#utility.yul\":3365:3399   */\n  tag_87\n    /* \"#utility.yul\":3374:3398   */\n  tag_88\n    /* \"#utility.yul\":3392:3397   */\n  dup5\n    /* \"#utility.yul\":3374:3398   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3365:3399   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3347:3400   */\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3334:3400   */\n  swap1\n  pop\n    /* \"#utility.yul\":3264:3406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3412:3487   */\ntag_41:\n    /* \"#utility.yul\":3455:3458   */\n  0x00\n    /* \"#utility.yul\":3476:3481   */\n  dup2\n    /* \"#utility.yul\":3469:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3412:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3762   */\ntag_42:\n    /* \"#utility.yul\":3603:3642   */\n  tag_91\n    /* \"#utility.yul\":3634:3641   */\n  dup4\n    /* \"#utility.yul\":3603:3642   */\n  tag_40\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3664:3755   */\n  tag_92\n    /* \"#utility.yul\":3713:3754   */\n  tag_93\n    /* \"#utility.yul\":3737:3753   */\n  dup3\n    /* \"#utility.yul\":3713:3754   */\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3698:3702   */\n  dup5\n    /* \"#utility.yul\":3692:3703   */\n  sload\n    /* \"#utility.yul\":3664:3755   */\n  tag_37\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3658:3662   */\n  dup3\n    /* \"#utility.yul\":3651:3756   */\n  sstore\n    /* \"#utility.yul\":3569:3762   */\n  pop\n    /* \"#utility.yul\":3493:3762   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3768:3841   */\ntag_43:\n    /* \"#utility.yul\":3813:3816   */\n  0x00\n    /* \"#utility.yul\":3768:3841   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3847:4036   */\ntag_44:\n    /* \"#utility.yul\":3924:3956   */\n  tag_96\n  tag_43\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3965:4030   */\n  tag_97\n    /* \"#utility.yul\":4023:4029   */\n  dup2\n    /* \"#utility.yul\":4015:4021   */\n  dup5\n    /* \"#utility.yul\":4009:4013   */\n  dup5\n    /* \"#utility.yul\":3965:4030   */\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3900:4036   */\n  pop\n    /* \"#utility.yul\":3847:4036   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4042:4228   */\ntag_45:\n    /* \"#utility.yul\":4102:4222   */\ntag_99:\n    /* \"#utility.yul\":4119:4122   */\n  dup2\n    /* \"#utility.yul\":4112:4117   */\n  dup2\n    /* \"#utility.yul\":4109:4123   */\n  lt\n    /* \"#utility.yul\":4102:4222   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4173:4212   */\n  tag_102\n    /* \"#utility.yul\":4210:4211   */\n  0x00\n    /* \"#utility.yul\":4203:4208   */\n  dup3\n    /* \"#utility.yul\":4173:4212   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4146:4147   */\n  0x01\n    /* \"#utility.yul\":4139:4144   */\n  dup2\n    /* \"#utility.yul\":4135:4148   */\n  add\n    /* \"#utility.yul\":4126:4148   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4222   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":4042:4228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4234:4777   */\ntag_46:\n    /* \"#utility.yul\":4335:4337   */\n  0x1f\n    /* \"#utility.yul\":4330:4333   */\n  dup3\n    /* \"#utility.yul\":4327:4338   */\n  gt\n    /* \"#utility.yul\":4324:4770   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4369:4407   */\n  tag_105\n    /* \"#utility.yul\":4401:4406   */\n  dup2\n    /* \"#utility.yul\":4369:4407   */\n  tag_34\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4453:4482   */\n  tag_106\n    /* \"#utility.yul\":4471:4481   */\n  dup5\n    /* \"#utility.yul\":4453:4482   */\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4443:4451   */\n  dup2\n    /* \"#utility.yul\":4439:4483   */\n  add\n    /* \"#utility.yul\":4636:4638   */\n  0x20\n    /* \"#utility.yul\":4624:4634   */\n  dup6\n    /* \"#utility.yul\":4621:4639   */\n  lt\n    /* \"#utility.yul\":4618:4667   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4657:4665   */\n  dup2\n    /* \"#utility.yul\":4642:4665   */\n  swap1\n  pop\n    /* \"#utility.yul\":4618:4667   */\ntag_107:\n    /* \"#utility.yul\":4680:4760   */\n  tag_108\n    /* \"#utility.yul\":4736:4758   */\n  tag_109\n    /* \"#utility.yul\":4754:4757   */\n  dup6\n    /* \"#utility.yul\":4736:4758   */\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4726:4734   */\n  dup4\n    /* \"#utility.yul\":4722:4759   */\n  add\n    /* \"#utility.yul\":4709:4720   */\n  dup3\n    /* \"#utility.yul\":4680:4760   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4339:4770   */\n  pop\n  pop\n    /* \"#utility.yul\":4324:4770   */\ntag_104:\n    /* \"#utility.yul\":4234:4777   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4783:4900   */\ntag_47:\n    /* \"#utility.yul\":4837:4845   */\n  0x00\n    /* \"#utility.yul\":4887:4892   */\n  dup3\n    /* \"#utility.yul\":4881:4885   */\n  dup3\n    /* \"#utility.yul\":4877:4893   */\n  shr\n    /* \"#utility.yul\":4856:4893   */\n  swap1\n  pop\n    /* \"#utility.yul\":4783:4900   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4906:5075   */\ntag_48:\n    /* \"#utility.yul\":4950:4956   */\n  0x00\n    /* \"#utility.yul\":4983:5034   */\n  tag_112\n    /* \"#utility.yul\":5031:5032   */\n  0x00\n    /* \"#utility.yul\":5027:5033   */\n  not\n    /* \"#utility.yul\":5019:5024   */\n  dup5\n    /* \"#utility.yul\":5016:5017   */\n  0x08\n    /* \"#utility.yul\":5012:5025   */\n  mul\n    /* \"#utility.yul\":4983:5034   */\n  tag_47\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4979:5035   */\n  not\n    /* \"#utility.yul\":5064:5068   */\n  dup1\n    /* \"#utility.yul\":5058:5062   */\n  dup4\n    /* \"#utility.yul\":5054:5069   */\n  and\n    /* \"#utility.yul\":5044:5069   */\n  swap2\n  pop\n    /* \"#utility.yul\":4957:5075   */\n  pop\n    /* \"#utility.yul\":4906:5075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5080:5375   */\ntag_49:\n    /* \"#utility.yul\":5156:5160   */\n  0x00\n    /* \"#utility.yul\":5302:5331   */\n  tag_114\n    /* \"#utility.yul\":5327:5330   */\n  dup4\n    /* \"#utility.yul\":5321:5325   */\n  dup4\n    /* \"#utility.yul\":5302:5331   */\n  tag_48\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5294:5331   */\n  swap2\n  pop\n    /* \"#utility.yul\":5364:5367   */\n  dup3\n    /* \"#utility.yul\":5361:5362   */\n  0x02\n    /* \"#utility.yul\":5357:5368   */\n  mul\n    /* \"#utility.yul\":5351:5355   */\n  dup3\n    /* \"#utility.yul\":5348:5369   */\n  or\n    /* \"#utility.yul\":5340:5369   */\n  swap1\n  pop\n    /* \"#utility.yul\":5080:5375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5380:6775   */\ntag_20:\n    /* \"#utility.yul\":5497:5534   */\n  tag_116\n    /* \"#utility.yul\":5530:5533   */\n  dup3\n    /* \"#utility.yul\":5497:5534   */\n  tag_30\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5599:5617   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5591:5597   */\n  dup2\n    /* \"#utility.yul\":5588:5618   */\n  gt\n    /* \"#utility.yul\":5585:5641   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5621:5639   */\n  tag_118\n  tag_31\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5585:5641   */\ntag_117:\n    /* \"#utility.yul\":5665:5703   */\n  tag_119\n    /* \"#utility.yul\":5697:5701   */\n  dup3\n    /* \"#utility.yul\":5691:5702   */\n  sload\n    /* \"#utility.yul\":5665:5703   */\n  tag_33\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5750:5817   */\n  tag_120\n    /* \"#utility.yul\":5810:5816   */\n  dup3\n    /* \"#utility.yul\":5802:5808   */\n  dup3\n    /* \"#utility.yul\":5796:5800   */\n  dup6\n    /* \"#utility.yul\":5750:5817   */\n  tag_46\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5844:5845   */\n  0x00\n    /* \"#utility.yul\":5868:5872   */\n  0x20\n    /* \"#utility.yul\":5855:5872   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:5902   */\n  0x1f\n    /* \"#utility.yul\":5892:5898   */\n  dup4\n    /* \"#utility.yul\":5889:5903   */\n  gt\n    /* \"#utility.yul\":5917:5918   */\n  0x01\n    /* \"#utility.yul\":5912:6530   */\n  dup2\n  eq\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6574:6575   */\n  0x00\n    /* \"#utility.yul\":6591:6597   */\n  dup5\n    /* \"#utility.yul\":6588:6665   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6640:6649   */\n  dup3\n    /* \"#utility.yul\":6635:6638   */\n  dup8\n    /* \"#utility.yul\":6631:6650   */\n  add\n    /* \"#utility.yul\":6625:6651   */\n  mload\n    /* \"#utility.yul\":6616:6651   */\n  swap1\n  pop\n    /* \"#utility.yul\":6588:6665   */\ntag_123:\n    /* \"#utility.yul\":6691:6758   */\n  tag_124\n    /* \"#utility.yul\":6751:6757   */\n  dup6\n    /* \"#utility.yul\":6744:6749   */\n  dup3\n    /* \"#utility.yul\":6691:6758   */\n  tag_49\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6685:6689   */\n  dup7\n    /* \"#utility.yul\":6678:6759   */\n  sstore\n    /* \"#utility.yul\":6547:6769   */\n  pop\n    /* \"#utility.yul\":5882:6769   */\n  jump(tag_121)\n    /* \"#utility.yul\":5912:6530   */\ntag_122:\n    /* \"#utility.yul\":5964:5968   */\n  0x1f\n    /* \"#utility.yul\":5960:5969   */\n  not\n    /* \"#utility.yul\":5952:5958   */\n  dup5\n    /* \"#utility.yul\":5948:5970   */\n  and\n    /* \"#utility.yul\":5998:6035   */\n  tag_125\n    /* \"#utility.yul\":6030:6034   */\n  dup7\n    /* \"#utility.yul\":5998:6035   */\n  tag_34\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6057:6058   */\n  0x00\n    /* \"#utility.yul\":6071:6279   */\ntag_126:\n    /* \"#utility.yul\":6085:6092   */\n  dup3\n    /* \"#utility.yul\":6082:6083   */\n  dup2\n    /* \"#utility.yul\":6079:6093   */\n  lt\n    /* \"#utility.yul\":6071:6279   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6164:6173   */\n  dup5\n    /* \"#utility.yul\":6159:6162   */\n  dup10\n    /* \"#utility.yul\":6155:6174   */\n  add\n    /* \"#utility.yul\":6149:6175   */\n  mload\n    /* \"#utility.yul\":6141:6147   */\n  dup3\n    /* \"#utility.yul\":6134:6176   */\n  sstore\n    /* \"#utility.yul\":6215:6216   */\n  0x01\n    /* \"#utility.yul\":6207:6213   */\n  dup3\n    /* \"#utility.yul\":6203:6217   */\n  add\n    /* \"#utility.yul\":6193:6217   */\n  swap2\n  pop\n    /* \"#utility.yul\":6262:6264   */\n  0x20\n    /* \"#utility.yul\":6251:6260   */\n  dup6\n    /* \"#utility.yul\":6247:6265   */\n  add\n    /* \"#utility.yul\":6234:6265   */\n  swap5\n  pop\n    /* \"#utility.yul\":6108:6112   */\n  0x20\n    /* \"#utility.yul\":6105:6106   */\n  dup2\n    /* \"#utility.yul\":6101:6113   */\n  add\n    /* \"#utility.yul\":6096:6113   */\n  swap1\n  pop\n    /* \"#utility.yul\":6071:6279   */\n  jump(tag_126)\ntag_128:\n    /* \"#utility.yul\":6307:6313   */\n  dup7\n    /* \"#utility.yul\":6298:6305   */\n  dup4\n    /* \"#utility.yul\":6295:6314   */\n  lt\n    /* \"#utility.yul\":6292:6471   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6365:6374   */\n  dup5\n    /* \"#utility.yul\":6360:6363   */\n  dup10\n    /* \"#utility.yul\":6356:6375   */\n  add\n    /* \"#utility.yul\":6350:6376   */\n  mload\n    /* \"#utility.yul\":6408:6456   */\n  tag_130\n    /* \"#utility.yul\":6450:6454   */\n  0x1f\n    /* \"#utility.yul\":6442:6448   */\n  dup10\n    /* \"#utility.yul\":6438:6455   */\n  and\n    /* \"#utility.yul\":6427:6436   */\n  dup3\n    /* \"#utility.yul\":6408:6456   */\n  tag_48\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6400:6406   */\n  dup4\n    /* \"#utility.yul\":6393:6457   */\n  sstore\n    /* \"#utility.yul\":6315:6471   */\n  pop\n    /* \"#utility.yul\":6292:6471   */\ntag_129:\n    /* \"#utility.yul\":6517:6518   */\n  0x01\n    /* \"#utility.yul\":6513:6514   */\n  0x02\n    /* \"#utility.yul\":6505:6511   */\n  dup9\n    /* \"#utility.yul\":6501:6515   */\n  mul\n    /* \"#utility.yul\":6497:6519   */\n  add\n    /* \"#utility.yul\":6491:6495   */\n  dup9\n    /* \"#utility.yul\":6484:6520   */\n  sstore\n    /* \"#utility.yul\":5919:6530   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5882:6769   */\ntag_121:\n  pop\n    /* \"#utility.yul\":5472:6775   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5380:6775   */\n  pop\n  pop\n  jump\t// out\n    /* \"VolunteerCollectionNFT_flattened.sol\":60961:61261  contract VolunteerCollectionNFT is ERC1155, Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"VolunteerCollectionNFT_flattened.sol\":60961:61261  contract VolunteerCollectionNFT is ERC1155, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x731133e9\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":43130:43262  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerCollectionNFT_flattened.sol\":42263:42568  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerCollectionNFT_flattened.sol\":42967:43070  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerCollectionNFT_flattened.sol\":44897:45326  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"VolunteerCollectionNFT_flattened.sol\":43419:43971  function balanceOfBatch(... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerCollectionNFT_flattened.sol\":60085:60186  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"VolunteerCollectionNFT_flattened.sol\":61095:61259  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"VolunteerCollectionNFT_flattened.sol\":59430:59515  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerCollectionNFT_flattened.sol\":44039:44183  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"VolunteerCollectionNFT_flattened.sol\":44250:44407  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerCollectionNFT_flattened.sol\":44474:44825  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"VolunteerCollectionNFT_flattened.sol\":60335:60550  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"VolunteerCollectionNFT_flattened.sol\":43130:43262  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_19:\n        /* \"VolunteerCollectionNFT_flattened.sol\":43207:43214  uint256 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":43233:43242  _balances */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":43233:43246  _balances[id] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":43243:43245  id */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":43233:43246  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VolunteerCollectionNFT_flattened.sol\":43233:43255  _balances[id][account] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":43247:43254  account */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":43233:43255  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"VolunteerCollectionNFT_flattened.sol\":43226:43255  return _balances[id][account] */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":43130:43262  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":42263:42568  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_25:\n        /* \"VolunteerCollectionNFT_flattened.sol\":42365:42369  bool */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":42415:42441  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"VolunteerCollectionNFT_flattened.sol\":42400:42441  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":42400:42411  interfaceId */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":42400:42441  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":42400:42509  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_73\n      jumpi\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":42472:42509  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"VolunteerCollectionNFT_flattened.sol\":42457:42509  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":42457:42468  interfaceId */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":42457:42509  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":42400:42509  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_73:\n        /* \"VolunteerCollectionNFT_flattened.sol\":42400:42561  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_74\n      jumpi\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":42525:42561  super.supportsInterface(interfaceId) */\n      tag_75\n        /* \"VolunteerCollectionNFT_flattened.sol\":42549:42560  interfaceId */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":42525:42548  super.supportsInterface */\n      tag_76\n        /* \"VolunteerCollectionNFT_flattened.sol\":42525:42561  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_75:\n        /* \"VolunteerCollectionNFT_flattened.sol\":42400:42561  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_74:\n        /* \"VolunteerCollectionNFT_flattened.sol\":42381:42561  return... */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":42263:42568  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":42967:43070  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"VolunteerCollectionNFT_flattened.sol\":43027:43040  string memory */\n      0x60\n        /* \"VolunteerCollectionNFT_flattened.sol\":43059:43063  _uri */\n      0x02\n        /* \"VolunteerCollectionNFT_flattened.sol\":43052:43063  return _uri */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_79\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":42967:43070  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":44897:45326  function safeBatchTransferFrom(... */\n    tag_37:\n        /* \"VolunteerCollectionNFT_flattened.sol\":45091:45105  address sender */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":45108:45120  _msgSender() */\n      tag_85\n        /* \"VolunteerCollectionNFT_flattened.sol\":45108:45118  _msgSender */\n      tag_86\n        /* \"VolunteerCollectionNFT_flattened.sol\":45108:45120  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"VolunteerCollectionNFT_flattened.sol\":45091:45120  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":45142:45148  sender */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":45134:45148  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":45134:45138  from */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":45134:45148  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"VolunteerCollectionNFT_flattened.sol\":45134:45183  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_87\n      jumpi\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":45153:45183  isApprovedForAll(from, sender) */\n      tag_88\n        /* \"VolunteerCollectionNFT_flattened.sol\":45170:45174  from */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":45176:45182  sender */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":45153:45169  isApprovedForAll */\n      tag_61\n        /* \"VolunteerCollectionNFT_flattened.sol\":45153:45183  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_88:\n        /* \"VolunteerCollectionNFT_flattened.sol\":45152:45183  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"VolunteerCollectionNFT_flattened.sol\":45134:45183  from != sender && !isApprovedForAll(from, sender) */\n    tag_87:\n        /* \"VolunteerCollectionNFT_flattened.sol\":45130:45259  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":45235:45241  sender */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":45243:45247  from */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":45206:45248  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":45130:45259  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_89:\n        /* \"VolunteerCollectionNFT_flattened.sol\":45268:45319  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_92\n        /* \"VolunteerCollectionNFT_flattened.sol\":45291:45295  from */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":45297:45299  to */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":45301:45304  ids */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":45306:45312  values */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":45314:45318  data */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":45268:45290  _safeBatchTransferFrom */\n      tag_93\n        /* \"VolunteerCollectionNFT_flattened.sol\":45268:45319  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_92:\n        /* \"VolunteerCollectionNFT_flattened.sol\":45081:45326  {... */\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":44897:45326  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":43419:43971  function balanceOfBatch(... */\n    tag_41:\n        /* \"VolunteerCollectionNFT_flattened.sol\":43543:43559  uint256[] memory */\n      0x60\n        /* \"VolunteerCollectionNFT_flattened.sol\":43594:43597  ids */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":43594:43604  ids.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":43575:43583  accounts */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":43575:43590  accounts.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":43575:43604  accounts.length != ids.length */\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":43571:43692  if (accounts.length != ids.length) {... */\n      tag_95\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":43653:43656  ids */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":43653:43663  ids.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":43665:43673  accounts */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":43665:43680  accounts.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":43627:43681  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":43571:43692  if (accounts.length != ids.length) {... */\n    tag_95:\n        /* \"VolunteerCollectionNFT_flattened.sol\":43702:43732  uint256[] memory batchBalances */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":43749:43757  accounts */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":43749:43764  accounts.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":43735:43765  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_98\n      jumpi\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n    tag_98:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_101:\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":43702:43765  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":43781:43790  uint256 i */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":43776:43934  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_102:\n        /* \"VolunteerCollectionNFT_flattened.sol\":43800:43808  accounts */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":43800:43815  accounts.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":43796:43797  i */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":43796:43815  i < accounts.length */\n      lt\n        /* \"VolunteerCollectionNFT_flattened.sol\":43776:43934  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":43855:43923  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_105\n        /* \"VolunteerCollectionNFT_flattened.sol\":43865:43895  accounts.unsafeMemoryAccess(i) */\n      tag_106\n        /* \"VolunteerCollectionNFT_flattened.sol\":43893:43894  i */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":43865:43873  accounts */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":43865:43892  accounts.unsafeMemoryAccess */\n      tag_107\n      swap1\n        /* \"VolunteerCollectionNFT_flattened.sol\":43865:43895  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"VolunteerCollectionNFT_flattened.sol\":43897:43922  ids.unsafeMemoryAccess(i) */\n      tag_108\n        /* \"VolunteerCollectionNFT_flattened.sol\":43920:43921  i */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":43897:43900  ids */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":43897:43919  ids.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"VolunteerCollectionNFT_flattened.sol\":43897:43922  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"VolunteerCollectionNFT_flattened.sol\":43855:43864  balanceOf */\n      tag_19\n        /* \"VolunteerCollectionNFT_flattened.sol\":43855:43923  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_105:\n        /* \"VolunteerCollectionNFT_flattened.sol\":43836:43849  batchBalances */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":43850:43851  i */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":43836:43852  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_110\n      jumpi\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n    tag_110:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":43836:43923  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":43817:43820  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":43776:43934  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_102)\n    tag_103:\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":43951:43964  batchBalances */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":43944:43964  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":43419:43971  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":60085:60186  function renounceOwnership() public virtual onlyOwner {... */\n    tag_45:\n        /* \"VolunteerCollectionNFT_flattened.sol\":59323:59336  _checkOwner() */\n      tag_114\n        /* \"VolunteerCollectionNFT_flattened.sol\":59323:59334  _checkOwner */\n      tag_115\n        /* \"VolunteerCollectionNFT_flattened.sol\":59323:59336  _checkOwner() */\n      jump\t// in\n    tag_114:\n        /* \"VolunteerCollectionNFT_flattened.sol\":60149:60179  _transferOwnership(address(0)) */\n      tag_117\n        /* \"VolunteerCollectionNFT_flattened.sol\":60176:60177  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":60149:60167  _transferOwnership */\n      tag_118\n        /* \"VolunteerCollectionNFT_flattened.sol\":60149:60179  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_117:\n        /* \"VolunteerCollectionNFT_flattened.sol\":60085:60186  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":61095:61259  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_49:\n        /* \"VolunteerCollectionNFT_flattened.sol\":59323:59336  _checkOwner() */\n      tag_120\n        /* \"VolunteerCollectionNFT_flattened.sol\":59323:59334  _checkOwner */\n      tag_115\n        /* \"VolunteerCollectionNFT_flattened.sol\":59323:59336  _checkOwner() */\n      jump\t// in\n    tag_120:\n        /* \"VolunteerCollectionNFT_flattened.sol\":61220:61252  _mint(account, id, amount, data) */\n      tag_122\n        /* \"VolunteerCollectionNFT_flattened.sol\":61226:61233  account */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":61235:61237  id */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":61239:61245  amount */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":61247:61251  data */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":61220:61225  _mint */\n      tag_123\n        /* \"VolunteerCollectionNFT_flattened.sol\":61220:61252  _mint(account, id, amount, data) */\n      jump\t// in\n    tag_122:\n        /* \"VolunteerCollectionNFT_flattened.sol\":61095:61259  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":59430:59515  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"VolunteerCollectionNFT_flattened.sol\":59476:59483  address */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":59502:59508  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":59495:59508  return _owner */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":59430:59515  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":44039:44183  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_57:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44124:44176  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_126\n        /* \"VolunteerCollectionNFT_flattened.sol\":44143:44155  _msgSender() */\n      tag_127\n        /* \"VolunteerCollectionNFT_flattened.sol\":44143:44153  _msgSender */\n      tag_86\n        /* \"VolunteerCollectionNFT_flattened.sol\":44143:44155  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44157:44165  operator */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":44167:44175  approved */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":44124:44142  _setApprovalForAll */\n      tag_128\n        /* \"VolunteerCollectionNFT_flattened.sol\":44124:44176  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_126:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44039:44183  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":44250:44407  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_61:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44340:44344  bool */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":44363:44381  _operatorApprovals */\n      0x01\n        /* \"VolunteerCollectionNFT_flattened.sol\":44363:44390  _operatorApprovals[account] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":44382:44389  account */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":44363:44390  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VolunteerCollectionNFT_flattened.sol\":44363:44400  _operatorApprovals[account][operator] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":44391:44399  operator */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":44363:44400  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":44356:44400  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":44250:44407  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":44474:44825  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_66:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44597:44611  address sender */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":44614:44626  _msgSender() */\n      tag_131\n        /* \"VolunteerCollectionNFT_flattened.sol\":44614:44624  _msgSender */\n      tag_86\n        /* \"VolunteerCollectionNFT_flattened.sol\":44614:44626  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44597:44626  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":44648:44654  sender */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":44640:44654  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":44640:44644  from */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":44640:44654  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"VolunteerCollectionNFT_flattened.sol\":44640:44689  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_132\n      jumpi\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":44659:44689  isApprovedForAll(from, sender) */\n      tag_133\n        /* \"VolunteerCollectionNFT_flattened.sol\":44676:44680  from */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":44682:44688  sender */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":44659:44675  isApprovedForAll */\n      tag_61\n        /* \"VolunteerCollectionNFT_flattened.sol\":44659:44689  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_133:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44658:44689  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"VolunteerCollectionNFT_flattened.sol\":44640:44689  from != sender && !isApprovedForAll(from, sender) */\n    tag_132:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44636:44765  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":44741:44747  sender */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":44749:44753  from */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":44712:44754  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":44636:44765  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_134:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44774:44818  _safeTransferFrom(from, to, id, value, data) */\n      tag_136\n        /* \"VolunteerCollectionNFT_flattened.sol\":44792:44796  from */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":44798:44800  to */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":44802:44804  id */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":44806:44811  value */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":44813:44817  data */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":44774:44791  _safeTransferFrom */\n      tag_137\n        /* \"VolunteerCollectionNFT_flattened.sol\":44774:44818  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_136:\n        /* \"VolunteerCollectionNFT_flattened.sol\":44587:44825  {... */\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":44474:44825  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":60335:60550  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_70:\n        /* \"VolunteerCollectionNFT_flattened.sol\":59323:59336  _checkOwner() */\n      tag_139\n        /* \"VolunteerCollectionNFT_flattened.sol\":59323:59334  _checkOwner */\n      tag_115\n        /* \"VolunteerCollectionNFT_flattened.sol\":59323:59336  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"VolunteerCollectionNFT_flattened.sol\":60439:60440  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":60419:60441  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":60419:60427  newOwner */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":60419:60441  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":60415:60506  if (newOwner == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":60492:60493  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":60464:60495  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":60415:60506  if (newOwner == address(0)) {... */\n    tag_141:\n        /* \"VolunteerCollectionNFT_flattened.sol\":60515:60543  _transferOwnership(newOwner) */\n      tag_143\n        /* \"VolunteerCollectionNFT_flattened.sol\":60534:60542  newOwner */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":60515:60533  _transferOwnership */\n      tag_118\n        /* \"VolunteerCollectionNFT_flattened.sol\":60515:60543  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_143:\n        /* \"VolunteerCollectionNFT_flattened.sol\":60335:60550  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":10699:10845  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_76:\n        /* \"VolunteerCollectionNFT_flattened.sol\":10775:10779  bool */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":10813:10838  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"VolunteerCollectionNFT_flattened.sol\":10798:10838  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":10798:10809  interfaceId */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":10798:10838  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":10791:10838  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":10699:10845  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":9634:9730  function _msgSender() internal view virtual returns (address) {... */\n    tag_86:\n        /* \"VolunteerCollectionNFT_flattened.sol\":9687:9694  address */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":9713:9723  msg.sender */\n      caller\n        /* \"VolunteerCollectionNFT_flattened.sol\":9706:9723  return msg.sender */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":9634:9730  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":49898:50343  function _safeBatchTransferFrom(... */\n    tag_93:\n        /* \"VolunteerCollectionNFT_flattened.sol\":50105:50106  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":50091:50107  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":50091:50093  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":50091:50107  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":50087:50175  if (to == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":50161:50162  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":50130:50164  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":50087:50175  if (to == address(0)) {... */\n    tag_147:\n        /* \"VolunteerCollectionNFT_flattened.sol\":50204:50205  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":50188:50206  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":50188:50192  from */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":50188:50206  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":50184:50272  if (from == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":50258:50259  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":50229:50261  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":50184:50272  if (from == address(0)) {... */\n    tag_149:\n        /* \"VolunteerCollectionNFT_flattened.sol\":50281:50336  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_151\n        /* \"VolunteerCollectionNFT_flattened.sol\":50308:50312  from */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":50314:50316  to */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":50318:50321  ids */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":50323:50329  values */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":50331:50335  data */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":50281:50307  _updateWithAcceptanceCheck */\n      tag_152\n        /* \"VolunteerCollectionNFT_flattened.sol\":50281:50336  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_151:\n        /* \"VolunteerCollectionNFT_flattened.sol\":49898:50343  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":34487:34684  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_107:\n        /* \"VolunteerCollectionNFT_flattened.sol\":34573:34584  address res */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":34661:34665  0x20 */\n      0x20\n        /* \"VolunteerCollectionNFT_flattened.sol\":34656:34659  pos */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":34652:34666  mul(pos, 0x20) */\n      mul\n        /* \"VolunteerCollectionNFT_flattened.sol\":34645:34649  0x20 */\n      0x20\n        /* \"VolunteerCollectionNFT_flattened.sol\":34640:34643  arr */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":34636:34650  add(arr, 0x20) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":34632:34667  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":34626:34668  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":34619:34668  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":34487:34684  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":34088:34285  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_109:\n        /* \"VolunteerCollectionNFT_flattened.sol\":34174:34185  uint256 res */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":34262:34266  0x20 */\n      0x20\n        /* \"VolunteerCollectionNFT_flattened.sol\":34257:34260  pos */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":34253:34267  mul(pos, 0x20) */\n      mul\n        /* \"VolunteerCollectionNFT_flattened.sol\":34246:34250  0x20 */\n      0x20\n        /* \"VolunteerCollectionNFT_flattened.sol\":34241:34244  arr */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":34237:34251  add(arr, 0x20) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":34233:34268  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":34227:34269  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":34220:34269  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":34088:34285  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":59588:59750  function _checkOwner() internal view virtual {... */\n    tag_115:\n        /* \"VolunteerCollectionNFT_flattened.sol\":59658:59670  _msgSender() */\n      tag_156\n        /* \"VolunteerCollectionNFT_flattened.sol\":59658:59668  _msgSender */\n      tag_86\n        /* \"VolunteerCollectionNFT_flattened.sol\":59658:59670  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"VolunteerCollectionNFT_flattened.sol\":59647:59670  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":59647:59654  owner() */\n      tag_157\n        /* \"VolunteerCollectionNFT_flattened.sol\":59647:59652  owner */\n      tag_51\n        /* \"VolunteerCollectionNFT_flattened.sol\":59647:59654  owner() */\n      jump\t// in\n    tag_157:\n        /* \"VolunteerCollectionNFT_flattened.sol\":59647:59670  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":59643:59744  if (owner() != _msgSender()) {... */\n      tag_158\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":59720:59732  _msgSender() */\n      tag_159\n        /* \"VolunteerCollectionNFT_flattened.sol\":59720:59730  _msgSender */\n      tag_86\n        /* \"VolunteerCollectionNFT_flattened.sol\":59720:59732  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"VolunteerCollectionNFT_flattened.sol\":59693:59733  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":59643:59744  if (owner() != _msgSender()) {... */\n    tag_158:\n        /* \"VolunteerCollectionNFT_flattened.sol\":59588:59750  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":60704:60891  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_118:\n        /* \"VolunteerCollectionNFT_flattened.sol\":60777:60793  address oldOwner */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":60796:60802  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":60777:60802  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":60821:60829  newOwner */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":60812:60818  _owner */\n      0x03\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":60812:60829  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":60875:60883  newOwner */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":60844:60884  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":60865:60873  oldOwner */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":60844:60884  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"VolunteerCollectionNFT_flattened.sol\":60767:60891  {... */\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":60704:60891  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":51629:51975  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_123:\n        /* \"VolunteerCollectionNFT_flattened.sol\":51739:51740  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":51725:51741  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":51725:51727  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":51725:51741  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":51721:51809  if (to == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":51795:51796  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":51764:51798  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":51721:51809  if (to == address(0)) {... */\n    tag_163:\n        /* \"VolunteerCollectionNFT_flattened.sol\":51819:51839  uint256[] memory ids */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":51841:51864  uint256[] memory values */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":51868:51897  _asSingletonArrays(id, value) */\n      tag_165\n        /* \"VolunteerCollectionNFT_flattened.sol\":51887:51889  id */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":51891:51896  value */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":51868:51886  _asSingletonArrays */\n      tag_166\n        /* \"VolunteerCollectionNFT_flattened.sol\":51868:51897  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_165:\n        /* \"VolunteerCollectionNFT_flattened.sol\":51818:51897  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":51907:51968  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_167\n        /* \"VolunteerCollectionNFT_flattened.sol\":51942:51943  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":51946:51948  to */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":51950:51953  ids */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":51955:51961  values */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":51963:51967  data */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":51907:51933  _updateWithAcceptanceCheck */\n      tag_152\n        /* \"VolunteerCollectionNFT_flattened.sol\":51907:51968  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_167:\n        /* \"VolunteerCollectionNFT_flattened.sol\":51711:51975  {... */\n      pop\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":51629:51975  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":54151:54466  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_128:\n        /* \"VolunteerCollectionNFT_flattened.sol\":54278:54279  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":54258:54280  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":54258:54266  operator */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":54258:54280  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":54254:54348  if (operator == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":54334:54335  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":54303:54337  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":54254:54348  if (operator == address(0)) {... */\n    tag_169:\n        /* \"VolunteerCollectionNFT_flattened.sol\":54395:54403  approved */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":54357:54375  _operatorApprovals */\n      0x01\n        /* \"VolunteerCollectionNFT_flattened.sol\":54357:54382  _operatorApprovals[owner] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":54376:54381  owner */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":54357:54382  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VolunteerCollectionNFT_flattened.sol\":54357:54392  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":54383:54391  operator */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":54357:54392  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":54357:54403  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":54440:54448  operator */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":54418:54459  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":54433:54438  owner */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":54418:54459  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"VolunteerCollectionNFT_flattened.sol\":54450:54458  approved */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":54418:54459  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"VolunteerCollectionNFT_flattened.sol\":54151:54466  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":49034:49497  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_137:\n        /* \"VolunteerCollectionNFT_flattened.sol\":49170:49171  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":49156:49172  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":49156:49158  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":49156:49172  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":49152:49240  if (to == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":49226:49227  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":49195:49229  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":49152:49240  if (to == address(0)) {... */\n    tag_173:\n        /* \"VolunteerCollectionNFT_flattened.sol\":49269:49270  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":49253:49271  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":49253:49257  from */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":49253:49271  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":49249:49337  if (from == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":49323:49324  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":49294:49326  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":49249:49337  if (from == address(0)) {... */\n    tag_175:\n        /* \"VolunteerCollectionNFT_flattened.sol\":49347:49367  uint256[] memory ids */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":49369:49392  uint256[] memory values */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":49396:49425  _asSingletonArrays(id, value) */\n      tag_177\n        /* \"VolunteerCollectionNFT_flattened.sol\":49415:49417  id */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":49419:49424  value */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":49396:49414  _asSingletonArrays */\n      tag_166\n        /* \"VolunteerCollectionNFT_flattened.sol\":49396:49425  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_177:\n        /* \"VolunteerCollectionNFT_flattened.sol\":49346:49425  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":49435:49490  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_178\n        /* \"VolunteerCollectionNFT_flattened.sol\":49462:49466  from */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":49468:49470  to */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":49472:49475  ids */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":49477:49483  values */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":49485:49489  data */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":49435:49461  _updateWithAcceptanceCheck */\n      tag_152\n        /* \"VolunteerCollectionNFT_flattened.sol\":49435:49490  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_178:\n        /* \"VolunteerCollectionNFT_flattened.sol\":49142:49497  {... */\n      pop\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":49034:49497  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":47887:48577  function _updateWithAcceptanceCheck(... */\n    tag_152:\n        /* \"VolunteerCollectionNFT_flattened.sol\":48088:48118  _update(from, to, ids, values) */\n      tag_180\n        /* \"VolunteerCollectionNFT_flattened.sol\":48096:48100  from */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":48102:48104  to */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":48106:48109  ids */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":48111:48117  values */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":48088:48095  _update */\n      tag_181\n        /* \"VolunteerCollectionNFT_flattened.sol\":48088:48118  _update(from, to, ids, values) */\n      jump\t// in\n    tag_180:\n        /* \"VolunteerCollectionNFT_flattened.sol\":48146:48147  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":48132:48148  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":48132:48134  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":48132:48148  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":48128:48571  if (to != address(0)) {... */\n      tag_182\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":48164:48180  address operator */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":48183:48195  _msgSender() */\n      tag_183\n        /* \"VolunteerCollectionNFT_flattened.sol\":48183:48193  _msgSender */\n      tag_86\n        /* \"VolunteerCollectionNFT_flattened.sol\":48183:48195  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"VolunteerCollectionNFT_flattened.sol\":48164:48195  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":48227:48228  1 */\n      0x01\n        /* \"VolunteerCollectionNFT_flattened.sol\":48213:48216  ids */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":48213:48223  ids.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":48213:48228  ids.length == 1 */\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":48209:48561  if (ids.length == 1) {... */\n      tag_184\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":48248:48258  uint256 id */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":48261:48286  ids.unsafeMemoryAccess(0) */\n      tag_185\n        /* \"VolunteerCollectionNFT_flattened.sol\":48284:48285  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":48261:48264  ids */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":48261:48283  ids.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"VolunteerCollectionNFT_flattened.sol\":48261:48286  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"VolunteerCollectionNFT_flattened.sol\":48248:48286  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":48304:48317  uint256 value */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":48320:48348  values.unsafeMemoryAccess(0) */\n      tag_186\n        /* \"VolunteerCollectionNFT_flattened.sol\":48346:48347  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":48320:48326  values */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":48320:48345  values.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"VolunteerCollectionNFT_flattened.sol\":48320:48348  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"VolunteerCollectionNFT_flattened.sol\":48304:48348  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":48366:48433  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_187\n        /* \"VolunteerCollectionNFT_flattened.sol\":48397:48405  operator */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":48407:48411  from */\n      dup10\n        /* \"VolunteerCollectionNFT_flattened.sol\":48413:48415  to */\n      dup10\n        /* \"VolunteerCollectionNFT_flattened.sol\":48417:48419  id */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":48421:48426  value */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":48428:48432  data */\n      dup10\n        /* \"VolunteerCollectionNFT_flattened.sol\":48366:48396  _doSafeTransferAcceptanceCheck */\n      tag_188\n        /* \"VolunteerCollectionNFT_flattened.sol\":48366:48433  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_187:\n        /* \"VolunteerCollectionNFT_flattened.sol\":48230:48448  {... */\n      pop\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":48209:48561  if (ids.length == 1) {... */\n      jump(tag_189)\n    tag_184:\n        /* \"VolunteerCollectionNFT_flattened.sol\":48472:48546  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_190\n        /* \"VolunteerCollectionNFT_flattened.sol\":48508:48516  operator */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":48518:48522  from */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":48524:48526  to */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":48528:48531  ids */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":48533:48539  values */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":48541:48545  data */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":48472:48507  _doSafeBatchTransferAcceptanceCheck */\n      tag_191\n        /* \"VolunteerCollectionNFT_flattened.sol\":48472:48546  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_190:\n        /* \"VolunteerCollectionNFT_flattened.sol\":48209:48561  if (ids.length == 1) {... */\n    tag_189:\n        /* \"VolunteerCollectionNFT_flattened.sol\":48150:48571  {... */\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":48128:48571  if (to != address(0)) {... */\n    tag_182:\n        /* \"VolunteerCollectionNFT_flattened.sol\":47887:48577  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":56963:57812  function _asSingletonArrays(... */\n    tag_166:\n        /* \"VolunteerCollectionNFT_flattened.sol\":57071:57094  uint256[] memory array1 */\n      0x60\n        /* \"VolunteerCollectionNFT_flattened.sol\":57096:57119  uint256[] memory array2 */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":57257:57261  0x40 */\n      0x40\n        /* \"VolunteerCollectionNFT_flattened.sol\":57251:57262  mload(0x40) */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":57241:57262  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":57327:57328  1 */\n      0x01\n        /* \"VolunteerCollectionNFT_flattened.sol\":57319:57325  array1 */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":57312:57329  mstore(array1, 1) */\n      mstore\n        /* \"VolunteerCollectionNFT_flattened.sol\":57465:57473  element1 */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":57458:57462  0x20 */\n      0x20\n        /* \"VolunteerCollectionNFT_flattened.sol\":57450:57456  array1 */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":57446:57463  add(array1, 0x20) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":57439:57474  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"VolunteerCollectionNFT_flattened.sol\":57587:57591  0x40 */\n      0x40\n        /* \"VolunteerCollectionNFT_flattened.sol\":57579:57585  array1 */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":57575:57592  add(array1, 0x40) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":57565:57592  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":57620:57621  1 */\n      0x01\n        /* \"VolunteerCollectionNFT_flattened.sol\":57612:57618  array2 */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":57605:57622  mstore(array2, 1) */\n      mstore\n        /* \"VolunteerCollectionNFT_flattened.sol\":57661:57669  element2 */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":57654:57658  0x20 */\n      0x20\n        /* \"VolunteerCollectionNFT_flattened.sol\":57646:57652  array2 */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":57642:57659  add(array2, 0x20) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":57635:57670  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"VolunteerCollectionNFT_flattened.sol\":57790:57794  0x40 */\n      0x40\n        /* \"VolunteerCollectionNFT_flattened.sol\":57782:57788  array2 */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":57778:57795  add(array2, 0x40) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":57772:57776  0x40 */\n      0x40\n        /* \"VolunteerCollectionNFT_flattened.sol\":57765:57796  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"VolunteerCollectionNFT_flattened.sol\":56963:57812  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":46027:47308  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_181:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46162:46168  values */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":46162:46175  values.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":46148:46151  ids */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":46148:46158  ids.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":46148:46175  ids.length != values.length */\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":46144:46261  if (ids.length != values.length) {... */\n      tag_194\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":46224:46227  ids */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":46224:46234  ids.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":46236:46242  values */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":46236:46249  values.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":46198:46250  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":46144:46261  if (ids.length != values.length) {... */\n    tag_194:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46271:46287  address operator */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46290:46302  _msgSender() */\n      tag_196\n        /* \"VolunteerCollectionNFT_flattened.sol\":46290:46300  _msgSender */\n      tag_86\n        /* \"VolunteerCollectionNFT_flattened.sol\":46290:46302  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46271:46302  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46318:46327  uint256 i */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46313:47004  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_197:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46337:46340  ids */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":46337:46347  ids.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":46333:46334  i */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":46333:46347  i < ids.length */\n      lt\n        /* \"VolunteerCollectionNFT_flattened.sol\":46313:47004  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":46368:46378  uint256 id */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46381:46406  ids.unsafeMemoryAccess(i) */\n      tag_200\n        /* \"VolunteerCollectionNFT_flattened.sol\":46404:46405  i */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":46381:46384  ids */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":46381:46403  ids.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"VolunteerCollectionNFT_flattened.sol\":46381:46406  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46368:46406  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46420:46433  uint256 value */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46436:46464  values.unsafeMemoryAccess(i) */\n      tag_201\n        /* \"VolunteerCollectionNFT_flattened.sol\":46462:46463  i */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":46436:46442  values */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":46436:46461  values.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"VolunteerCollectionNFT_flattened.sol\":46436:46464  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46420:46464  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46499:46500  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46483:46501  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":46483:46487  from */\n      dup9\n        /* \"VolunteerCollectionNFT_flattened.sol\":46483:46501  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":46479:46899  if (from != address(0)) {... */\n      tag_202\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":46521:46540  uint256 fromBalance */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46543:46552  _balances */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":46543:46556  _balances[id] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46553:46555  id */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":46543:46556  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VolunteerCollectionNFT_flattened.sol\":46543:46562  _balances[id][from] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46557:46561  from */\n      dup11\n        /* \"VolunteerCollectionNFT_flattened.sol\":46543:46562  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"VolunteerCollectionNFT_flattened.sol\":46521:46562  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46598:46603  value */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":46584:46595  fromBalance */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":46584:46603  fromBalance < value */\n      lt\n        /* \"VolunteerCollectionNFT_flattened.sol\":46580:46709  if (fromBalance < value) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":46661:46665  from */\n      dup9\n        /* \"VolunteerCollectionNFT_flattened.sol\":46667:46678  fromBalance */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":46680:46685  value */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":46687:46689  id */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":46634:46690  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":46580:46709  if (fromBalance < value) {... */\n    tag_203:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46861:46866  value */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":46847:46858  fromBalance */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":46847:46866  fromBalance - value */\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":46825:46834  _balances */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46825:46838  _balances[id] */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":46835:46837  id */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":46825:46838  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VolunteerCollectionNFT_flattened.sol\":46825:46844  _balances[id][from] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46839:46843  from */\n      dup12\n        /* \"VolunteerCollectionNFT_flattened.sol\":46825:46844  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VolunteerCollectionNFT_flattened.sol\":46825:46866  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46503:46899  {... */\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46479:46899  if (from != address(0)) {... */\n    tag_202:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46931:46932  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46917:46933  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":46917:46919  to */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":46917:46933  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":46913:46994  if (to != address(0)) {... */\n      tag_206\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":46974:46979  value */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":46953:46962  _balances */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46953:46966  _balances[id] */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":46963:46965  id */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":46953:46966  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VolunteerCollectionNFT_flattened.sol\":46953:46970  _balances[id][to] */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46967:46969  to */\n      dup10\n        /* \"VolunteerCollectionNFT_flattened.sol\":46953:46970  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":46953:46979  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46913:46994  if (to != address(0)) {... */\n    tag_206:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46354:47004  {... */\n      pop\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46349:46352  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46313:47004  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_197)\n    tag_198:\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":47032:47033  1 */\n      0x01\n        /* \"VolunteerCollectionNFT_flattened.sol\":47018:47021  ids */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":47018:47028  ids.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":47018:47033  ids.length == 1 */\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":47014:47302  if (ids.length == 1) {... */\n      tag_209\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":47049:47059  uint256 id */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":47062:47087  ids.unsafeMemoryAccess(0) */\n      tag_210\n        /* \"VolunteerCollectionNFT_flattened.sol\":47085:47086  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":47062:47065  ids */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":47062:47084  ids.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"VolunteerCollectionNFT_flattened.sol\":47062:47087  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"VolunteerCollectionNFT_flattened.sol\":47049:47087  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":47101:47114  uint256 value */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":47117:47145  values.unsafeMemoryAccess(0) */\n      tag_211\n        /* \"VolunteerCollectionNFT_flattened.sol\":47143:47144  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":47117:47123  values */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":47117:47142  values.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"VolunteerCollectionNFT_flattened.sol\":47117:47145  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"VolunteerCollectionNFT_flattened.sol\":47101:47145  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":47195:47197  to */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":47164:47209  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":47189:47193  from */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":47164:47209  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":47179:47187  operator */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":47164:47209  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"VolunteerCollectionNFT_flattened.sol\":47199:47201  id */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":47203:47208  value */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":47164:47209  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_212\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"VolunteerCollectionNFT_flattened.sol\":47035:47220  {... */\n      pop\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":47014:47302  if (ids.length == 1) {... */\n      jump(tag_213)\n    tag_209:\n        /* \"VolunteerCollectionNFT_flattened.sol\":47275:47277  to */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":47245:47291  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":47269:47273  from */\n      dup6\n        /* \"VolunteerCollectionNFT_flattened.sol\":47245:47291  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":47259:47267  operator */\n      dup3\n        /* \"VolunteerCollectionNFT_flattened.sol\":47245:47291  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"VolunteerCollectionNFT_flattened.sol\":47279:47282  ids */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":47284:47290  values */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":47245:47291  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_214\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"VolunteerCollectionNFT_flattened.sol\":47014:47302  if (ids.length == 1) {... */\n    tag_213:\n        /* \"VolunteerCollectionNFT_flattened.sol\":46134:47308  {... */\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":46027:47308  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":54644:55618  function _doSafeTransferAcceptanceCheck(... */\n    tag_188:\n        /* \"VolunteerCollectionNFT_flattened.sol\":54867:54868  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":54850:54852  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":54850:54864  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"VolunteerCollectionNFT_flattened.sol\":54850:54868  to.code.length > 0 */\n      gt\n        /* \"VolunteerCollectionNFT_flattened.sol\":54846:55612  if (to.code.length > 0) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":54905:54907  to */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":54888:54926  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"VolunteerCollectionNFT_flattened.sol\":54927:54935  operator */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":54937:54941  from */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":54943:54945  id */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":54947:54952  value */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":54954:54958  data */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":54888:54959  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      0x01\n    tag_220:\n        /* \"VolunteerCollectionNFT_flattened.sol\":54884:55602  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_223\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_228\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_227)\n    tag_228:\n      0x60\n      swap2\n      pop\n    tag_227:\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":55260:55261  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":55243:55249  reason */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":55243:55256  reason.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":55243:55261  reason.length == 0 */\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":55239:55588  if (reason.length == 0) {... */\n      tag_229\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":55370:55372  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":55347:55373  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":55239:55588  if (reason.length == 0) {... */\n    tag_229:\n        /* \"VolunteerCollectionNFT_flattened.sol\":55540:55546  reason */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":55534:55547  mload(reason) */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":55525:55531  reason */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":55521:55523  32 */\n      0x20\n        /* \"VolunteerCollectionNFT_flattened.sol\":55517:55532  add(32, reason) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":55510:55548  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":54884:55602  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_223:\n        /* \"VolunteerCollectionNFT_flattened.sol\":55020:55063  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"VolunteerCollectionNFT_flattened.sol\":55008:55063  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":55008:55016  response */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":55008:55063  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":55004:55178  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_233\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":55156:55158  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":55133:55159  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":55004:55178  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_233:\n        /* \"VolunteerCollectionNFT_flattened.sol\":54960:55192  returns (bytes4 response) {... */\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":54846:55612  if (to.code.length > 0) {... */\n    tag_217:\n        /* \"VolunteerCollectionNFT_flattened.sol\":54644:55618  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerCollectionNFT_flattened.sol\":55806:56847  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_191:\n        /* \"VolunteerCollectionNFT_flattened.sol\":56054:56055  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":56037:56039  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":56037:56051  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"VolunteerCollectionNFT_flattened.sol\":56037:56055  to.code.length > 0 */\n      gt\n        /* \"VolunteerCollectionNFT_flattened.sol\":56033:56841  if (to.code.length > 0) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":56092:56094  to */\n      dup4\n        /* \"VolunteerCollectionNFT_flattened.sol\":56075:56118  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"VolunteerCollectionNFT_flattened.sol\":56119:56127  operator */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":56129:56133  from */\n      dup8\n        /* \"VolunteerCollectionNFT_flattened.sol\":56135:56138  ids */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":56140:56146  values */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":56148:56152  data */\n      dup7\n        /* \"VolunteerCollectionNFT_flattened.sol\":56075:56153  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_240:\n      0x01\n    tag_239:\n        /* \"VolunteerCollectionNFT_flattened.sol\":56071:56831  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_241\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_246\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_245)\n    tag_246:\n      0x60\n      swap2\n      pop\n    tag_245:\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":56489:56490  0 */\n      0x00\n        /* \"VolunteerCollectionNFT_flattened.sol\":56472:56478  reason */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":56472:56485  reason.length */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":56472:56490  reason.length == 0 */\n      sub\n        /* \"VolunteerCollectionNFT_flattened.sol\":56468:56817  if (reason.length == 0) {... */\n      tag_247\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":56599:56601  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":56576:56602  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":56468:56817  if (reason.length == 0) {... */\n    tag_247:\n        /* \"VolunteerCollectionNFT_flattened.sol\":56769:56775  reason */\n      dup1\n        /* \"VolunteerCollectionNFT_flattened.sol\":56763:56776  mload(reason) */\n      mload\n        /* \"VolunteerCollectionNFT_flattened.sol\":56754:56760  reason */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":56750:56752  32 */\n      0x20\n        /* \"VolunteerCollectionNFT_flattened.sol\":56746:56761  add(32, reason) */\n      add\n        /* \"VolunteerCollectionNFT_flattened.sol\":56739:56777  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":56071:56831  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_241:\n        /* \"VolunteerCollectionNFT_flattened.sol\":56244:56292  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"VolunteerCollectionNFT_flattened.sol\":56232:56292  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"VolunteerCollectionNFT_flattened.sol\":56232:56240  response */\n      dup2\n        /* \"VolunteerCollectionNFT_flattened.sol\":56232:56292  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"VolunteerCollectionNFT_flattened.sol\":56228:56407  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_251\n      jumpi\n        /* \"VolunteerCollectionNFT_flattened.sol\":56385:56387  to */\n      dup5\n        /* \"VolunteerCollectionNFT_flattened.sol\":56362:56388  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerCollectionNFT_flattened.sol\":56228:56407  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_251:\n        /* \"VolunteerCollectionNFT_flattened.sol\":56154:56421  returns (... */\n      pop\n        /* \"VolunteerCollectionNFT_flattened.sol\":56033:56841  if (to.code.length > 0) {... */\n    tag_236:\n        /* \"VolunteerCollectionNFT_flattened.sol\":55806:56847  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_253:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_254:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_255:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_256:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_257:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_311\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_256\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_258:\n        /* \"#utility.yul\":641:665   */\n      tag_313\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_257\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_314:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_259:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_316\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_258\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_260:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_261:\n        /* \"#utility.yul\":997:1021   */\n      tag_319\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_260\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_320:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_262:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_322\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_261\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_18:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_325\n      tag_254\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1290:1409   */\n    tag_324:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_326\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_259\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_327\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_262\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_263:\n        /* \"#utility.yul\":1764:1788   */\n      tag_329\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_260\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_21:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_331\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_263\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_264:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_265:\n        /* \"#utility.yul\":2256:2279   */\n      tag_334\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_264\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_335:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_266:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_337\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_265\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_24:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_340\n      tag_254\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2528:2647   */\n    tag_339:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_341\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_266\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_267:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_268:\n        /* \"#utility.yul\":2963:2984   */\n      tag_344\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_267\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_27:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_346\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_268\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_30:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_349\n      tag_254\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3289:3408   */\n    tag_348:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_350\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_262\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_269:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_270:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:3967   */\n    tag_271:\n        /* \"#utility.yul\":3917:3923   */\n      dup3\n        /* \"#utility.yul\":3912:3915   */\n      dup2\n        /* \"#utility.yul\":3907:3910   */\n      dup4\n        /* \"#utility.yul\":3901:3924   */\n      mcopy\n        /* \"#utility.yul\":3958:3959   */\n      0x00\n        /* \"#utility.yul\":3949:3955   */\n      dup4\n        /* \"#utility.yul\":3944:3947   */\n      dup4\n        /* \"#utility.yul\":3940:3956   */\n      add\n        /* \"#utility.yul\":3933:3960   */\n      mstore\n        /* \"#utility.yul\":3828:3967   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3973:4075   */\n    tag_272:\n        /* \"#utility.yul\":4014:4020   */\n      0x00\n        /* \"#utility.yul\":4065:4067   */\n      0x1f\n        /* \"#utility.yul\":4061:4068   */\n      not\n        /* \"#utility.yul\":4056:4058   */\n      0x1f\n        /* \"#utility.yul\":4049:4054   */\n      dup4\n        /* \"#utility.yul\":4045:4059   */\n      add\n        /* \"#utility.yul\":4041:4069   */\n      and\n        /* \"#utility.yul\":4031:4069   */\n      swap1\n      pop\n        /* \"#utility.yul\":3973:4075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4081:4458   */\n    tag_273:\n        /* \"#utility.yul\":4169:4172   */\n      0x00\n        /* \"#utility.yul\":4197:4236   */\n      tag_356\n        /* \"#utility.yul\":4230:4235   */\n      dup3\n        /* \"#utility.yul\":4197:4236   */\n      tag_269\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4252:4323   */\n      tag_357\n        /* \"#utility.yul\":4316:4322   */\n      dup2\n        /* \"#utility.yul\":4311:4314   */\n      dup6\n        /* \"#utility.yul\":4252:4323   */\n      tag_270\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4245:4323   */\n      swap4\n      pop\n        /* \"#utility.yul\":4332:4397   */\n      tag_358\n        /* \"#utility.yul\":4390:4396   */\n      dup2\n        /* \"#utility.yul\":4385:4388   */\n      dup6\n        /* \"#utility.yul\":4378:4382   */\n      0x20\n        /* \"#utility.yul\":4371:4376   */\n      dup7\n        /* \"#utility.yul\":4367:4383   */\n      add\n        /* \"#utility.yul\":4332:4397   */\n      tag_271\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4422:4451   */\n      tag_359\n        /* \"#utility.yul\":4444:4450   */\n      dup2\n        /* \"#utility.yul\":4422:4451   */\n      tag_272\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4417:4420   */\n      dup5\n        /* \"#utility.yul\":4413:4452   */\n      add\n        /* \"#utility.yul\":4406:4452   */\n      swap2\n      pop\n        /* \"#utility.yul\":4173:4458   */\n      pop\n        /* \"#utility.yul\":4081:4458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4464:4777   */\n    tag_33:\n        /* \"#utility.yul\":4577:4581   */\n      0x00\n        /* \"#utility.yul\":4615:4617   */\n      0x20\n        /* \"#utility.yul\":4604:4613   */\n      dup3\n        /* \"#utility.yul\":4600:4618   */\n      add\n        /* \"#utility.yul\":4592:4618   */\n      swap1\n      pop\n        /* \"#utility.yul\":4664:4673   */\n      dup2\n        /* \"#utility.yul\":4658:4662   */\n      dup2\n        /* \"#utility.yul\":4654:4674   */\n      sub\n        /* \"#utility.yul\":4650:4651   */\n      0x00\n        /* \"#utility.yul\":4639:4648   */\n      dup4\n        /* \"#utility.yul\":4635:4652   */\n      add\n        /* \"#utility.yul\":4628:4675   */\n      mstore\n        /* \"#utility.yul\":4692:4770   */\n      tag_361\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4756:4762   */\n      dup5\n        /* \"#utility.yul\":4692:4770   */\n      tag_273\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4684:4770   */\n      swap1\n      pop\n        /* \"#utility.yul\":4464:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:4900   */\n    tag_274:\n        /* \"#utility.yul\":4892:4893   */\n      0x00\n        /* \"#utility.yul\":4889:4890   */\n      dup1\n        /* \"#utility.yul\":4882:4894   */\n      revert\n        /* \"#utility.yul\":4906:5086   */\n    tag_100:\n        /* \"#utility.yul\":4954:5031   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4951:4952   */\n      0x00\n        /* \"#utility.yul\":4944:5032   */\n      mstore\n        /* \"#utility.yul\":5051:5055   */\n      0x41\n        /* \"#utility.yul\":5048:5049   */\n      0x04\n        /* \"#utility.yul\":5041:5056   */\n      mstore\n        /* \"#utility.yul\":5075:5079   */\n      0x24\n        /* \"#utility.yul\":5072:5073   */\n      0x00\n        /* \"#utility.yul\":5065:5080   */\n      revert\n        /* \"#utility.yul\":5092:5373   */\n    tag_275:\n        /* \"#utility.yul\":5175:5202   */\n      tag_365\n        /* \"#utility.yul\":5197:5201   */\n      dup3\n        /* \"#utility.yul\":5175:5202   */\n      tag_272\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5167:5173   */\n      dup2\n        /* \"#utility.yul\":5163:5203   */\n      add\n        /* \"#utility.yul\":5305:5311   */\n      dup2\n        /* \"#utility.yul\":5293:5303   */\n      dup2\n        /* \"#utility.yul\":5290:5312   */\n      lt\n        /* \"#utility.yul\":5269:5287   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5257:5267   */\n      dup3\n        /* \"#utility.yul\":5254:5288   */\n      gt\n        /* \"#utility.yul\":5251:5313   */\n      or\n        /* \"#utility.yul\":5248:5336   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":5316:5334   */\n      tag_367\n      tag_100\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5248:5336   */\n    tag_366:\n        /* \"#utility.yul\":5356:5366   */\n      dup1\n        /* \"#utility.yul\":5352:5354   */\n      0x40\n        /* \"#utility.yul\":5345:5367   */\n      mstore\n        /* \"#utility.yul\":5135:5373   */\n      pop\n        /* \"#utility.yul\":5092:5373   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5379:5508   */\n    tag_276:\n        /* \"#utility.yul\":5413:5419   */\n      0x00\n        /* \"#utility.yul\":5440:5460   */\n      tag_369\n      tag_253\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5430:5460   */\n      swap1\n      pop\n        /* \"#utility.yul\":5469:5502   */\n      tag_370\n        /* \"#utility.yul\":5497:5501   */\n      dup3\n        /* \"#utility.yul\":5489:5495   */\n      dup3\n        /* \"#utility.yul\":5469:5502   */\n      tag_275\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5379:5508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5514:5825   */\n    tag_277:\n        /* \"#utility.yul\":5591:5595   */\n      0x00\n        /* \"#utility.yul\":5681:5699   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5673:5679   */\n      dup3\n        /* \"#utility.yul\":5670:5700   */\n      gt\n        /* \"#utility.yul\":5667:5723   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":5703:5721   */\n      tag_373\n      tag_100\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":5667:5723   */\n    tag_372:\n        /* \"#utility.yul\":5753:5757   */\n      0x20\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5741:5758   */\n      mul\n        /* \"#utility.yul\":5733:5758   */\n      swap1\n      pop\n        /* \"#utility.yul\":5813:5817   */\n      0x20\n        /* \"#utility.yul\":5807:5811   */\n      dup2\n        /* \"#utility.yul\":5803:5818   */\n      add\n        /* \"#utility.yul\":5795:5818   */\n      swap1\n      pop\n        /* \"#utility.yul\":5514:5825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5831:5948   */\n    tag_278:\n        /* \"#utility.yul\":5940:5941   */\n      0x00\n        /* \"#utility.yul\":5937:5938   */\n      dup1\n        /* \"#utility.yul\":5930:5942   */\n      revert\n        /* \"#utility.yul\":5971:6681   */\n    tag_279:\n        /* \"#utility.yul\":6067:6072   */\n      0x00\n        /* \"#utility.yul\":6092:6173   */\n      tag_376\n        /* \"#utility.yul\":6108:6172   */\n      tag_377\n        /* \"#utility.yul\":6165:6171   */\n      dup5\n        /* \"#utility.yul\":6108:6172   */\n      tag_277\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6092:6173   */\n      tag_276\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6083:6173   */\n      swap1\n      pop\n        /* \"#utility.yul\":6193:6198   */\n      dup1\n        /* \"#utility.yul\":6222:6228   */\n      dup4\n        /* \"#utility.yul\":6215:6220   */\n      dup3\n        /* \"#utility.yul\":6208:6229   */\n      mstore\n        /* \"#utility.yul\":6256:6260   */\n      0x20\n        /* \"#utility.yul\":6249:6254   */\n      dup3\n        /* \"#utility.yul\":6245:6261   */\n      add\n        /* \"#utility.yul\":6238:6261   */\n      swap1\n      pop\n        /* \"#utility.yul\":6309:6313   */\n      0x20\n        /* \"#utility.yul\":6301:6307   */\n      dup5\n        /* \"#utility.yul\":6297:6314   */\n      mul\n        /* \"#utility.yul\":6289:6295   */\n      dup4\n        /* \"#utility.yul\":6285:6315   */\n      add\n        /* \"#utility.yul\":6338:6341   */\n      dup6\n        /* \"#utility.yul\":6330:6336   */\n      dup2\n        /* \"#utility.yul\":6327:6342   */\n      gt\n        /* \"#utility.yul\":6324:6446   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":6357:6436   */\n      tag_379\n      tag_278\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6324:6446   */\n    tag_378:\n        /* \"#utility.yul\":6472:6478   */\n      dup4\n        /* \"#utility.yul\":6455:6675   */\n    tag_380:\n        /* \"#utility.yul\":6489:6495   */\n      dup2\n        /* \"#utility.yul\":6484:6487   */\n      dup2\n        /* \"#utility.yul\":6481:6496   */\n      lt\n        /* \"#utility.yul\":6455:6675   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":6564:6567   */\n      dup1\n        /* \"#utility.yul\":6593:6630   */\n      tag_383\n        /* \"#utility.yul\":6626:6629   */\n      dup9\n        /* \"#utility.yul\":6614:6624   */\n      dup3\n        /* \"#utility.yul\":6593:6630   */\n      tag_262\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":6588:6591   */\n      dup5\n        /* \"#utility.yul\":6581:6631   */\n      mstore\n        /* \"#utility.yul\":6660:6664   */\n      0x20\n        /* \"#utility.yul\":6655:6658   */\n      dup5\n        /* \"#utility.yul\":6651:6665   */\n      add\n        /* \"#utility.yul\":6644:6665   */\n      swap4\n      pop\n        /* \"#utility.yul\":6531:6675   */\n      pop\n        /* \"#utility.yul\":6515:6519   */\n      0x20\n        /* \"#utility.yul\":6510:6513   */\n      dup2\n        /* \"#utility.yul\":6506:6520   */\n      add\n        /* \"#utility.yul\":6499:6520   */\n      swap1\n      pop\n        /* \"#utility.yul\":6455:6675   */\n      jump(tag_380)\n    tag_382:\n        /* \"#utility.yul\":6459:6480   */\n      pop\n        /* \"#utility.yul\":6073:6681   */\n      pop\n      pop\n        /* \"#utility.yul\":5971:6681   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6704:7074   */\n    tag_280:\n        /* \"#utility.yul\":6775:6780   */\n      0x00\n        /* \"#utility.yul\":6824:6827   */\n      dup3\n        /* \"#utility.yul\":6817:6821   */\n      0x1f\n        /* \"#utility.yul\":6809:6815   */\n      dup4\n        /* \"#utility.yul\":6805:6822   */\n      add\n        /* \"#utility.yul\":6801:6828   */\n      slt\n        /* \"#utility.yul\":6791:6913   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":6832:6911   */\n      tag_386\n      tag_274\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6791:6913   */\n    tag_385:\n        /* \"#utility.yul\":6949:6955   */\n      dup2\n        /* \"#utility.yul\":6936:6956   */\n      calldataload\n        /* \"#utility.yul\":6974:7068   */\n      tag_387\n        /* \"#utility.yul\":7064:7067   */\n      dup5\n        /* \"#utility.yul\":7056:7062   */\n      dup3\n        /* \"#utility.yul\":7049:7053   */\n      0x20\n        /* \"#utility.yul\":7041:7047   */\n      dup7\n        /* \"#utility.yul\":7037:7054   */\n      add\n        /* \"#utility.yul\":6974:7068   */\n      tag_279\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":6965:7068   */\n      swap2\n      pop\n        /* \"#utility.yul\":6781:7074   */\n      pop\n        /* \"#utility.yul\":6704:7074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7080:7197   */\n    tag_281:\n        /* \"#utility.yul\":7189:7190   */\n      0x00\n        /* \"#utility.yul\":7186:7187   */\n      dup1\n        /* \"#utility.yul\":7179:7191   */\n      revert\n        /* \"#utility.yul\":7203:7510   */\n    tag_282:\n        /* \"#utility.yul\":7264:7268   */\n      0x00\n        /* \"#utility.yul\":7354:7372   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7346:7352   */\n      dup3\n        /* \"#utility.yul\":7343:7373   */\n      gt\n        /* \"#utility.yul\":7340:7396   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":7376:7394   */\n      tag_391\n      tag_100\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7340:7396   */\n    tag_390:\n        /* \"#utility.yul\":7414:7443   */\n      tag_392\n        /* \"#utility.yul\":7436:7442   */\n      dup3\n        /* \"#utility.yul\":7414:7443   */\n      tag_272\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7406:7443   */\n      swap1\n      pop\n        /* \"#utility.yul\":7498:7502   */\n      0x20\n        /* \"#utility.yul\":7492:7496   */\n      dup2\n        /* \"#utility.yul\":7488:7503   */\n      add\n        /* \"#utility.yul\":7480:7503   */\n      swap1\n      pop\n        /* \"#utility.yul\":7203:7510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7516:7664   */\n    tag_283:\n        /* \"#utility.yul\":7614:7620   */\n      dup3\n        /* \"#utility.yul\":7609:7612   */\n      dup2\n        /* \"#utility.yul\":7604:7607   */\n      dup4\n        /* \"#utility.yul\":7591:7621   */\n      calldatacopy\n        /* \"#utility.yul\":7655:7656   */\n      0x00\n        /* \"#utility.yul\":7646:7652   */\n      dup4\n        /* \"#utility.yul\":7641:7644   */\n      dup4\n        /* \"#utility.yul\":7637:7653   */\n      add\n        /* \"#utility.yul\":7630:7657   */\n      mstore\n        /* \"#utility.yul\":7516:7664   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7670:8093   */\n    tag_284:\n        /* \"#utility.yul\":7747:7752   */\n      0x00\n        /* \"#utility.yul\":7772:7837   */\n      tag_395\n        /* \"#utility.yul\":7788:7836   */\n      tag_396\n        /* \"#utility.yul\":7829:7835   */\n      dup5\n        /* \"#utility.yul\":7788:7836   */\n      tag_282\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7772:7837   */\n      tag_276\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7763:7837   */\n      swap1\n      pop\n        /* \"#utility.yul\":7860:7866   */\n      dup3\n        /* \"#utility.yul\":7853:7858   */\n      dup2\n        /* \"#utility.yul\":7846:7867   */\n      mstore\n        /* \"#utility.yul\":7898:7902   */\n      0x20\n        /* \"#utility.yul\":7891:7896   */\n      dup2\n        /* \"#utility.yul\":7887:7903   */\n      add\n        /* \"#utility.yul\":7936:7939   */\n      dup5\n        /* \"#utility.yul\":7927:7933   */\n      dup5\n        /* \"#utility.yul\":7922:7925   */\n      dup5\n        /* \"#utility.yul\":7918:7934   */\n      add\n        /* \"#utility.yul\":7915:7940   */\n      gt\n        /* \"#utility.yul\":7912:8024   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":7943:8022   */\n      tag_398\n      tag_281\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":7912:8024   */\n    tag_397:\n        /* \"#utility.yul\":8033:8087   */\n      tag_399\n        /* \"#utility.yul\":8080:8086   */\n      dup5\n        /* \"#utility.yul\":8075:8078   */\n      dup3\n        /* \"#utility.yul\":8070:8073   */\n      dup6\n        /* \"#utility.yul\":8033:8087   */\n      tag_283\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7753:8093   */\n      pop\n        /* \"#utility.yul\":7670:8093   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8112:8450   */\n    tag_285:\n        /* \"#utility.yul\":8167:8172   */\n      0x00\n        /* \"#utility.yul\":8216:8219   */\n      dup3\n        /* \"#utility.yul\":8209:8213   */\n      0x1f\n        /* \"#utility.yul\":8201:8207   */\n      dup4\n        /* \"#utility.yul\":8197:8214   */\n      add\n        /* \"#utility.yul\":8193:8220   */\n      slt\n        /* \"#utility.yul\":8183:8305   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":8224:8303   */\n      tag_402\n      tag_274\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8183:8305   */\n    tag_401:\n        /* \"#utility.yul\":8341:8347   */\n      dup2\n        /* \"#utility.yul\":8328:8348   */\n      calldataload\n        /* \"#utility.yul\":8366:8444   */\n      tag_403\n        /* \"#utility.yul\":8440:8443   */\n      dup5\n        /* \"#utility.yul\":8432:8438   */\n      dup3\n        /* \"#utility.yul\":8425:8429   */\n      0x20\n        /* \"#utility.yul\":8417:8423   */\n      dup7\n        /* \"#utility.yul\":8413:8430   */\n      add\n        /* \"#utility.yul\":8366:8444   */\n      tag_284\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8357:8444   */\n      swap2\n      pop\n        /* \"#utility.yul\":8173:8450   */\n      pop\n        /* \"#utility.yul\":8112:8450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8456:9965   */\n    tag_36:\n        /* \"#utility.yul\":8610:8616   */\n      0x00\n        /* \"#utility.yul\":8618:8624   */\n      dup1\n        /* \"#utility.yul\":8626:8632   */\n      0x00\n        /* \"#utility.yul\":8634:8640   */\n      dup1\n        /* \"#utility.yul\":8642:8648   */\n      0x00\n        /* \"#utility.yul\":8691:8694   */\n      0xa0\n        /* \"#utility.yul\":8679:8688   */\n      dup7\n        /* \"#utility.yul\":8670:8677   */\n      dup9\n        /* \"#utility.yul\":8666:8689   */\n      sub\n        /* \"#utility.yul\":8662:8695   */\n      slt\n        /* \"#utility.yul\":8659:8779   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":8698:8777   */\n      tag_406\n      tag_254\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":8659:8779   */\n    tag_405:\n        /* \"#utility.yul\":8818:8819   */\n      0x00\n        /* \"#utility.yul\":8843:8896   */\n      tag_407\n        /* \"#utility.yul\":8888:8895   */\n      dup9\n        /* \"#utility.yul\":8879:8885   */\n      dup3\n        /* \"#utility.yul\":8868:8877   */\n      dup10\n        /* \"#utility.yul\":8864:8886   */\n      add\n        /* \"#utility.yul\":8843:8896   */\n      tag_259\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8833:8896   */\n      swap6\n      pop\n        /* \"#utility.yul\":8789:8906   */\n      pop\n        /* \"#utility.yul\":8945:8947   */\n      0x20\n        /* \"#utility.yul\":8971:9024   */\n      tag_408\n        /* \"#utility.yul\":9016:9023   */\n      dup9\n        /* \"#utility.yul\":9007:9013   */\n      dup3\n        /* \"#utility.yul\":8996:9005   */\n      dup10\n        /* \"#utility.yul\":8992:9014   */\n      add\n        /* \"#utility.yul\":8971:9024   */\n      tag_259\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8961:9024   */\n      swap5\n      pop\n        /* \"#utility.yul\":8916:9034   */\n      pop\n        /* \"#utility.yul\":9101:9103   */\n      0x40\n        /* \"#utility.yul\":9090:9099   */\n      dup7\n        /* \"#utility.yul\":9086:9104   */\n      add\n        /* \"#utility.yul\":9073:9105   */\n      calldataload\n        /* \"#utility.yul\":9132:9150   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9124:9130   */\n      dup2\n        /* \"#utility.yul\":9121:9151   */\n      gt\n        /* \"#utility.yul\":9118:9235   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":9154:9233   */\n      tag_410\n      tag_255\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9118:9235   */\n    tag_409:\n        /* \"#utility.yul\":9259:9337   */\n      tag_411\n        /* \"#utility.yul\":9329:9336   */\n      dup9\n        /* \"#utility.yul\":9320:9326   */\n      dup3\n        /* \"#utility.yul\":9309:9318   */\n      dup10\n        /* \"#utility.yul\":9305:9327   */\n      add\n        /* \"#utility.yul\":9259:9337   */\n      tag_280\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9249:9337   */\n      swap4\n      pop\n        /* \"#utility.yul\":9044:9347   */\n      pop\n        /* \"#utility.yul\":9414:9416   */\n      0x60\n        /* \"#utility.yul\":9403:9412   */\n      dup7\n        /* \"#utility.yul\":9399:9417   */\n      add\n        /* \"#utility.yul\":9386:9418   */\n      calldataload\n        /* \"#utility.yul\":9445:9463   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9437:9443   */\n      dup2\n        /* \"#utility.yul\":9434:9464   */\n      gt\n        /* \"#utility.yul\":9431:9548   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":9467:9546   */\n      tag_413\n      tag_255\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9431:9548   */\n    tag_412:\n        /* \"#utility.yul\":9572:9650   */\n      tag_414\n        /* \"#utility.yul\":9642:9649   */\n      dup9\n        /* \"#utility.yul\":9633:9639   */\n      dup3\n        /* \"#utility.yul\":9622:9631   */\n      dup10\n        /* \"#utility.yul\":9618:9640   */\n      add\n        /* \"#utility.yul\":9572:9650   */\n      tag_280\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9562:9650   */\n      swap3\n      pop\n        /* \"#utility.yul\":9357:9660   */\n      pop\n        /* \"#utility.yul\":9727:9730   */\n      0x80\n        /* \"#utility.yul\":9716:9725   */\n      dup7\n        /* \"#utility.yul\":9712:9731   */\n      add\n        /* \"#utility.yul\":9699:9732   */\n      calldataload\n        /* \"#utility.yul\":9759:9777   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9751:9757   */\n      dup2\n        /* \"#utility.yul\":9748:9778   */\n      gt\n        /* \"#utility.yul\":9745:9862   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":9781:9860   */\n      tag_416\n      tag_255\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9745:9862   */\n    tag_415:\n        /* \"#utility.yul\":9886:9948   */\n      tag_417\n        /* \"#utility.yul\":9940:9947   */\n      dup9\n        /* \"#utility.yul\":9931:9937   */\n      dup3\n        /* \"#utility.yul\":9920:9929   */\n      dup10\n        /* \"#utility.yul\":9916:9938   */\n      add\n        /* \"#utility.yul\":9886:9948   */\n      tag_285\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9876:9948   */\n      swap2\n      pop\n        /* \"#utility.yul\":9670:9958   */\n      pop\n        /* \"#utility.yul\":8456:9965   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9971:10282   */\n    tag_286:\n        /* \"#utility.yul\":10048:10052   */\n      0x00\n        /* \"#utility.yul\":10138:10156   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10130:10136   */\n      dup3\n        /* \"#utility.yul\":10127:10157   */\n      gt\n        /* \"#utility.yul\":10124:10180   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":10160:10178   */\n      tag_420\n      tag_100\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10124:10180   */\n    tag_419:\n        /* \"#utility.yul\":10210:10214   */\n      0x20\n        /* \"#utility.yul\":10202:10208   */\n      dup3\n        /* \"#utility.yul\":10198:10215   */\n      mul\n        /* \"#utility.yul\":10190:10215   */\n      swap1\n      pop\n        /* \"#utility.yul\":10270:10274   */\n      0x20\n        /* \"#utility.yul\":10264:10268   */\n      dup2\n        /* \"#utility.yul\":10260:10275   */\n      add\n        /* \"#utility.yul\":10252:10275   */\n      swap1\n      pop\n        /* \"#utility.yul\":9971:10282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:11015   */\n    tag_287:\n        /* \"#utility.yul\":10401:10406   */\n      0x00\n        /* \"#utility.yul\":10426:10507   */\n      tag_422\n        /* \"#utility.yul\":10442:10506   */\n      tag_423\n        /* \"#utility.yul\":10499:10505   */\n      dup5\n        /* \"#utility.yul\":10442:10506   */\n      tag_286\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10426:10507   */\n      tag_276\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10417:10507   */\n      swap1\n      pop\n        /* \"#utility.yul\":10527:10532   */\n      dup1\n        /* \"#utility.yul\":10556:10562   */\n      dup4\n        /* \"#utility.yul\":10549:10554   */\n      dup3\n        /* \"#utility.yul\":10542:10563   */\n      mstore\n        /* \"#utility.yul\":10590:10594   */\n      0x20\n        /* \"#utility.yul\":10583:10588   */\n      dup3\n        /* \"#utility.yul\":10579:10595   */\n      add\n        /* \"#utility.yul\":10572:10595   */\n      swap1\n      pop\n        /* \"#utility.yul\":10643:10647   */\n      0x20\n        /* \"#utility.yul\":10635:10641   */\n      dup5\n        /* \"#utility.yul\":10631:10648   */\n      mul\n        /* \"#utility.yul\":10623:10629   */\n      dup4\n        /* \"#utility.yul\":10619:10649   */\n      add\n        /* \"#utility.yul\":10672:10675   */\n      dup6\n        /* \"#utility.yul\":10664:10670   */\n      dup2\n        /* \"#utility.yul\":10661:10676   */\n      gt\n        /* \"#utility.yul\":10658:10780   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":10691:10770   */\n      tag_425\n      tag_278\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":10658:10780   */\n    tag_424:\n        /* \"#utility.yul\":10806:10812   */\n      dup4\n        /* \"#utility.yul\":10789:11009   */\n    tag_426:\n        /* \"#utility.yul\":10823:10829   */\n      dup2\n        /* \"#utility.yul\":10818:10821   */\n      dup2\n        /* \"#utility.yul\":10815:10830   */\n      lt\n        /* \"#utility.yul\":10789:11009   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":10898:10901   */\n      dup1\n        /* \"#utility.yul\":10927:10964   */\n      tag_429\n        /* \"#utility.yul\":10960:10963   */\n      dup9\n        /* \"#utility.yul\":10948:10958   */\n      dup3\n        /* \"#utility.yul\":10927:10964   */\n      tag_259\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10922:10925   */\n      dup5\n        /* \"#utility.yul\":10915:10965   */\n      mstore\n        /* \"#utility.yul\":10994:10998   */\n      0x20\n        /* \"#utility.yul\":10989:10992   */\n      dup5\n        /* \"#utility.yul\":10985:10999   */\n      add\n        /* \"#utility.yul\":10978:10999   */\n      swap4\n      pop\n        /* \"#utility.yul\":10865:11009   */\n      pop\n        /* \"#utility.yul\":10849:10853   */\n      0x20\n        /* \"#utility.yul\":10844:10847   */\n      dup2\n        /* \"#utility.yul\":10840:10854   */\n      add\n        /* \"#utility.yul\":10833:10854   */\n      swap1\n      pop\n        /* \"#utility.yul\":10789:11009   */\n      jump(tag_426)\n    tag_428:\n        /* \"#utility.yul\":10793:10814   */\n      pop\n        /* \"#utility.yul\":10407:11015   */\n      pop\n      pop\n        /* \"#utility.yul\":10305:11015   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11038:11408   */\n    tag_288:\n        /* \"#utility.yul\":11109:11114   */\n      0x00\n        /* \"#utility.yul\":11158:11161   */\n      dup3\n        /* \"#utility.yul\":11151:11155   */\n      0x1f\n        /* \"#utility.yul\":11143:11149   */\n      dup4\n        /* \"#utility.yul\":11139:11156   */\n      add\n        /* \"#utility.yul\":11135:11162   */\n      slt\n        /* \"#utility.yul\":11125:11247   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":11166:11245   */\n      tag_432\n      tag_274\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":11125:11247   */\n    tag_431:\n        /* \"#utility.yul\":11283:11289   */\n      dup2\n        /* \"#utility.yul\":11270:11290   */\n      calldataload\n        /* \"#utility.yul\":11308:11402   */\n      tag_433\n        /* \"#utility.yul\":11398:11401   */\n      dup5\n        /* \"#utility.yul\":11390:11396   */\n      dup3\n        /* \"#utility.yul\":11383:11387   */\n      0x20\n        /* \"#utility.yul\":11375:11381   */\n      dup7\n        /* \"#utility.yul\":11371:11388   */\n      add\n        /* \"#utility.yul\":11308:11402   */\n      tag_287\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11299:11402   */\n      swap2\n      pop\n        /* \"#utility.yul\":11115:11408   */\n      pop\n        /* \"#utility.yul\":11038:11408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11414:12308   */\n    tag_40:\n        /* \"#utility.yul\":11532:11538   */\n      0x00\n        /* \"#utility.yul\":11540:11546   */\n      dup1\n        /* \"#utility.yul\":11589:11591   */\n      0x40\n        /* \"#utility.yul\":11577:11586   */\n      dup4\n        /* \"#utility.yul\":11568:11575   */\n      dup6\n        /* \"#utility.yul\":11564:11587   */\n      sub\n        /* \"#utility.yul\":11560:11592   */\n      slt\n        /* \"#utility.yul\":11557:11676   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":11595:11674   */\n      tag_436\n      tag_254\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":11557:11676   */\n    tag_435:\n        /* \"#utility.yul\":11743:11744   */\n      0x00\n        /* \"#utility.yul\":11732:11741   */\n      dup4\n        /* \"#utility.yul\":11728:11745   */\n      add\n        /* \"#utility.yul\":11715:11746   */\n      calldataload\n        /* \"#utility.yul\":11773:11791   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11765:11771   */\n      dup2\n        /* \"#utility.yul\":11762:11792   */\n      gt\n        /* \"#utility.yul\":11759:11876   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":11795:11874   */\n      tag_438\n      tag_255\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11759:11876   */\n    tag_437:\n        /* \"#utility.yul\":11900:11978   */\n      tag_439\n        /* \"#utility.yul\":11970:11977   */\n      dup6\n        /* \"#utility.yul\":11961:11967   */\n      dup3\n        /* \"#utility.yul\":11950:11959   */\n      dup7\n        /* \"#utility.yul\":11946:11968   */\n      add\n        /* \"#utility.yul\":11900:11978   */\n      tag_288\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":11890:11978   */\n      swap3\n      pop\n        /* \"#utility.yul\":11686:11988   */\n      pop\n        /* \"#utility.yul\":12055:12057   */\n      0x20\n        /* \"#utility.yul\":12044:12053   */\n      dup4\n        /* \"#utility.yul\":12040:12058   */\n      add\n        /* \"#utility.yul\":12027:12059   */\n      calldataload\n        /* \"#utility.yul\":12086:12104   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12078:12084   */\n      dup2\n        /* \"#utility.yul\":12075:12105   */\n      gt\n        /* \"#utility.yul\":12072:12189   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":12108:12187   */\n      tag_441\n      tag_255\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":12072:12189   */\n    tag_440:\n        /* \"#utility.yul\":12213:12291   */\n      tag_442\n        /* \"#utility.yul\":12283:12290   */\n      dup6\n        /* \"#utility.yul\":12274:12280   */\n      dup3\n        /* \"#utility.yul\":12263:12272   */\n      dup7\n        /* \"#utility.yul\":12259:12281   */\n      add\n        /* \"#utility.yul\":12213:12291   */\n      tag_280\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":12203:12291   */\n      swap2\n      pop\n        /* \"#utility.yul\":11998:12301   */\n      pop\n        /* \"#utility.yul\":11414:12308   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12314:12428   */\n    tag_289:\n        /* \"#utility.yul\":12381:12387   */\n      0x00\n        /* \"#utility.yul\":12415:12420   */\n      dup2\n        /* \"#utility.yul\":12409:12421   */\n      mload\n        /* \"#utility.yul\":12399:12421   */\n      swap1\n      pop\n        /* \"#utility.yul\":12314:12428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12434:12618   */\n    tag_290:\n        /* \"#utility.yul\":12533:12544   */\n      0x00\n        /* \"#utility.yul\":12567:12573   */\n      dup3\n        /* \"#utility.yul\":12562:12565   */\n      dup3\n        /* \"#utility.yul\":12555:12574   */\n      mstore\n        /* \"#utility.yul\":12607:12611   */\n      0x20\n        /* \"#utility.yul\":12602:12605   */\n      dup3\n        /* \"#utility.yul\":12598:12612   */\n      add\n        /* \"#utility.yul\":12583:12612   */\n      swap1\n      pop\n        /* \"#utility.yul\":12434:12618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12624:12756   */\n    tag_291:\n        /* \"#utility.yul\":12691:12695   */\n      0x00\n        /* \"#utility.yul\":12714:12717   */\n      dup2\n        /* \"#utility.yul\":12706:12717   */\n      swap1\n      pop\n        /* \"#utility.yul\":12744:12748   */\n      0x20\n        /* \"#utility.yul\":12739:12742   */\n      dup3\n        /* \"#utility.yul\":12735:12749   */\n      add\n        /* \"#utility.yul\":12727:12749   */\n      swap1\n      pop\n        /* \"#utility.yul\":12624:12756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12762:12870   */\n    tag_292:\n        /* \"#utility.yul\":12839:12863   */\n      tag_447\n        /* \"#utility.yul\":12857:12862   */\n      dup2\n        /* \"#utility.yul\":12839:12863   */\n      tag_260\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12834:12837   */\n      dup3\n        /* \"#utility.yul\":12827:12864   */\n      mstore\n        /* \"#utility.yul\":12762:12870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12876:13055   */\n    tag_293:\n        /* \"#utility.yul\":12945:12955   */\n      0x00\n        /* \"#utility.yul\":12966:13012   */\n      tag_449\n        /* \"#utility.yul\":13008:13011   */\n      dup4\n        /* \"#utility.yul\":13000:13006   */\n      dup4\n        /* \"#utility.yul\":12966:13012   */\n      tag_292\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13044:13048   */\n      0x20\n        /* \"#utility.yul\":13039:13042   */\n      dup4\n        /* \"#utility.yul\":13035:13049   */\n      add\n        /* \"#utility.yul\":13021:13049   */\n      swap1\n      pop\n        /* \"#utility.yul\":12876:13055   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13061:13174   */\n    tag_294:\n        /* \"#utility.yul\":13131:13135   */\n      0x00\n        /* \"#utility.yul\":13163:13167   */\n      0x20\n        /* \"#utility.yul\":13158:13161   */\n      dup3\n        /* \"#utility.yul\":13154:13168   */\n      add\n        /* \"#utility.yul\":13146:13168   */\n      swap1\n      pop\n        /* \"#utility.yul\":13061:13174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13210:13942   */\n    tag_295:\n        /* \"#utility.yul\":13329:13332   */\n      0x00\n        /* \"#utility.yul\":13358:13412   */\n      tag_452\n        /* \"#utility.yul\":13406:13411   */\n      dup3\n        /* \"#utility.yul\":13358:13412   */\n      tag_289\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":13428:13514   */\n      tag_453\n        /* \"#utility.yul\":13507:13513   */\n      dup2\n        /* \"#utility.yul\":13502:13505   */\n      dup6\n        /* \"#utility.yul\":13428:13514   */\n      tag_290\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":13421:13514   */\n      swap4\n      pop\n        /* \"#utility.yul\":13538:13594   */\n      tag_454\n        /* \"#utility.yul\":13588:13593   */\n      dup4\n        /* \"#utility.yul\":13538:13594   */\n      tag_291\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":13617:13624   */\n      dup1\n        /* \"#utility.yul\":13648:13649   */\n      0x00\n        /* \"#utility.yul\":13633:13917   */\n    tag_455:\n        /* \"#utility.yul\":13658:13664   */\n      dup4\n        /* \"#utility.yul\":13655:13656   */\n      dup2\n        /* \"#utility.yul\":13652:13665   */\n      lt\n        /* \"#utility.yul\":13633:13917   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":13734:13740   */\n      dup2\n        /* \"#utility.yul\":13728:13741   */\n      mload\n        /* \"#utility.yul\":13761:13824   */\n      tag_458\n        /* \"#utility.yul\":13820:13823   */\n      dup9\n        /* \"#utility.yul\":13805:13818   */\n      dup3\n        /* \"#utility.yul\":13761:13824   */\n      tag_293\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13754:13824   */\n      swap8\n      pop\n        /* \"#utility.yul\":13847:13907   */\n      tag_459\n        /* \"#utility.yul\":13900:13906   */\n      dup4\n        /* \"#utility.yul\":13847:13907   */\n      tag_294\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13837:13907   */\n      swap3\n      pop\n        /* \"#utility.yul\":13693:13917   */\n      pop\n        /* \"#utility.yul\":13680:13681   */\n      0x01\n        /* \"#utility.yul\":13677:13678   */\n      dup2\n        /* \"#utility.yul\":13673:13682   */\n      add\n        /* \"#utility.yul\":13668:13682   */\n      swap1\n      pop\n        /* \"#utility.yul\":13633:13917   */\n      jump(tag_455)\n    tag_457:\n        /* \"#utility.yul\":13637:13651   */\n      pop\n        /* \"#utility.yul\":13933:13936   */\n      dup6\n        /* \"#utility.yul\":13926:13936   */\n      swap4\n      pop\n        /* \"#utility.yul\":13334:13942   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13210:13942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13948:14321   */\n    tag_43:\n        /* \"#utility.yul\":14091:14095   */\n      0x00\n        /* \"#utility.yul\":14129:14131   */\n      0x20\n        /* \"#utility.yul\":14118:14127   */\n      dup3\n        /* \"#utility.yul\":14114:14132   */\n      add\n        /* \"#utility.yul\":14106:14132   */\n      swap1\n      pop\n        /* \"#utility.yul\":14178:14187   */\n      dup2\n        /* \"#utility.yul\":14172:14176   */\n      dup2\n        /* \"#utility.yul\":14168:14188   */\n      sub\n        /* \"#utility.yul\":14164:14165   */\n      0x00\n        /* \"#utility.yul\":14153:14162   */\n      dup4\n        /* \"#utility.yul\":14149:14166   */\n      add\n        /* \"#utility.yul\":14142:14189   */\n      mstore\n        /* \"#utility.yul\":14206:14314   */\n      tag_461\n        /* \"#utility.yul\":14309:14313   */\n      dup2\n        /* \"#utility.yul\":14300:14306   */\n      dup5\n        /* \"#utility.yul\":14206:14314   */\n      tag_295\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":14198:14314   */\n      swap1\n      pop\n        /* \"#utility.yul\":13948:14321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14327:15270   */\n    tag_48:\n        /* \"#utility.yul\":14422:14428   */\n      0x00\n        /* \"#utility.yul\":14430:14436   */\n      dup1\n        /* \"#utility.yul\":14438:14444   */\n      0x00\n        /* \"#utility.yul\":14446:14452   */\n      dup1\n        /* \"#utility.yul\":14495:14498   */\n      0x80\n        /* \"#utility.yul\":14483:14492   */\n      dup6\n        /* \"#utility.yul\":14474:14481   */\n      dup8\n        /* \"#utility.yul\":14470:14493   */\n      sub\n        /* \"#utility.yul\":14466:14499   */\n      slt\n        /* \"#utility.yul\":14463:14583   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":14502:14581   */\n      tag_464\n      tag_254\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14463:14583   */\n    tag_463:\n        /* \"#utility.yul\":14622:14623   */\n      0x00\n        /* \"#utility.yul\":14647:14700   */\n      tag_465\n        /* \"#utility.yul\":14692:14699   */\n      dup8\n        /* \"#utility.yul\":14683:14689   */\n      dup3\n        /* \"#utility.yul\":14672:14681   */\n      dup9\n        /* \"#utility.yul\":14668:14690   */\n      add\n        /* \"#utility.yul\":14647:14700   */\n      tag_259\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14637:14700   */\n      swap5\n      pop\n        /* \"#utility.yul\":14593:14710   */\n      pop\n        /* \"#utility.yul\":14749:14751   */\n      0x20\n        /* \"#utility.yul\":14775:14828   */\n      tag_466\n        /* \"#utility.yul\":14820:14827   */\n      dup8\n        /* \"#utility.yul\":14811:14817   */\n      dup3\n        /* \"#utility.yul\":14800:14809   */\n      dup9\n        /* \"#utility.yul\":14796:14818   */\n      add\n        /* \"#utility.yul\":14775:14828   */\n      tag_262\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14765:14828   */\n      swap4\n      pop\n        /* \"#utility.yul\":14720:14838   */\n      pop\n        /* \"#utility.yul\":14877:14879   */\n      0x40\n        /* \"#utility.yul\":14903:14956   */\n      tag_467\n        /* \"#utility.yul\":14948:14955   */\n      dup8\n        /* \"#utility.yul\":14939:14945   */\n      dup3\n        /* \"#utility.yul\":14928:14937   */\n      dup9\n        /* \"#utility.yul\":14924:14946   */\n      add\n        /* \"#utility.yul\":14903:14956   */\n      tag_262\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":14893:14956   */\n      swap3\n      pop\n        /* \"#utility.yul\":14848:14966   */\n      pop\n        /* \"#utility.yul\":15033:15035   */\n      0x60\n        /* \"#utility.yul\":15022:15031   */\n      dup6\n        /* \"#utility.yul\":15018:15036   */\n      add\n        /* \"#utility.yul\":15005:15037   */\n      calldataload\n        /* \"#utility.yul\":15064:15082   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15056:15062   */\n      dup2\n        /* \"#utility.yul\":15053:15083   */\n      gt\n        /* \"#utility.yul\":15050:15167   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":15086:15165   */\n      tag_469\n      tag_255\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15050:15167   */\n    tag_468:\n        /* \"#utility.yul\":15191:15253   */\n      tag_470\n        /* \"#utility.yul\":15245:15252   */\n      dup8\n        /* \"#utility.yul\":15236:15242   */\n      dup3\n        /* \"#utility.yul\":15225:15234   */\n      dup9\n        /* \"#utility.yul\":15221:15243   */\n      add\n        /* \"#utility.yul\":15191:15253   */\n      tag_285\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15181:15253   */\n      swap2\n      pop\n        /* \"#utility.yul\":14976:15263   */\n      pop\n        /* \"#utility.yul\":14327:15270   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15276:15394   */\n    tag_296:\n        /* \"#utility.yul\":15363:15387   */\n      tag_472\n        /* \"#utility.yul\":15381:15386   */\n      dup2\n        /* \"#utility.yul\":15363:15387   */\n      tag_257\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":15358:15361   */\n      dup3\n        /* \"#utility.yul\":15351:15388   */\n      mstore\n        /* \"#utility.yul\":15276:15394   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15400:15622   */\n    tag_53:\n        /* \"#utility.yul\":15493:15497   */\n      0x00\n        /* \"#utility.yul\":15531:15533   */\n      0x20\n        /* \"#utility.yul\":15520:15529   */\n      dup3\n        /* \"#utility.yul\":15516:15534   */\n      add\n        /* \"#utility.yul\":15508:15534   */\n      swap1\n      pop\n        /* \"#utility.yul\":15544:15615   */\n      tag_474\n        /* \"#utility.yul\":15612:15613   */\n      0x00\n        /* \"#utility.yul\":15601:15610   */\n      dup4\n        /* \"#utility.yul\":15597:15614   */\n      add\n        /* \"#utility.yul\":15588:15594   */\n      dup5\n        /* \"#utility.yul\":15544:15615   */\n      tag_296\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15400:15622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15628:15744   */\n    tag_297:\n        /* \"#utility.yul\":15698:15719   */\n      tag_476\n        /* \"#utility.yul\":15713:15718   */\n      dup2\n        /* \"#utility.yul\":15698:15719   */\n      tag_267\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":15691:15696   */\n      dup2\n        /* \"#utility.yul\":15688:15720   */\n      eq\n        /* \"#utility.yul\":15678:15738   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":15734:15735   */\n      0x00\n        /* \"#utility.yul\":15731:15732   */\n      dup1\n        /* \"#utility.yul\":15724:15736   */\n      revert\n        /* \"#utility.yul\":15678:15738   */\n    tag_477:\n        /* \"#utility.yul\":15628:15744   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15750:15883   */\n    tag_298:\n        /* \"#utility.yul\":15793:15798   */\n      0x00\n        /* \"#utility.yul\":15831:15837   */\n      dup2\n        /* \"#utility.yul\":15818:15838   */\n      calldataload\n        /* \"#utility.yul\":15809:15838   */\n      swap1\n      pop\n        /* \"#utility.yul\":15847:15877   */\n      tag_479\n        /* \"#utility.yul\":15871:15876   */\n      dup2\n        /* \"#utility.yul\":15847:15877   */\n      tag_297\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15750:15883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15889:16357   */\n    tag_56:\n        /* \"#utility.yul\":15954:15960   */\n      0x00\n        /* \"#utility.yul\":15962:15968   */\n      dup1\n        /* \"#utility.yul\":16011:16013   */\n      0x40\n        /* \"#utility.yul\":15999:16008   */\n      dup4\n        /* \"#utility.yul\":15990:15997   */\n      dup6\n        /* \"#utility.yul\":15986:16009   */\n      sub\n        /* \"#utility.yul\":15982:16014   */\n      slt\n        /* \"#utility.yul\":15979:16098   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":16017:16096   */\n      tag_482\n      tag_254\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":15979:16098   */\n    tag_481:\n        /* \"#utility.yul\":16137:16138   */\n      0x00\n        /* \"#utility.yul\":16162:16215   */\n      tag_483\n        /* \"#utility.yul\":16207:16214   */\n      dup6\n        /* \"#utility.yul\":16198:16204   */\n      dup3\n        /* \"#utility.yul\":16187:16196   */\n      dup7\n        /* \"#utility.yul\":16183:16205   */\n      add\n        /* \"#utility.yul\":16162:16215   */\n      tag_259\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":16152:16215   */\n      swap3\n      pop\n        /* \"#utility.yul\":16108:16225   */\n      pop\n        /* \"#utility.yul\":16264:16266   */\n      0x20\n        /* \"#utility.yul\":16290:16340   */\n      tag_484\n        /* \"#utility.yul\":16332:16339   */\n      dup6\n        /* \"#utility.yul\":16323:16329   */\n      dup3\n        /* \"#utility.yul\":16312:16321   */\n      dup7\n        /* \"#utility.yul\":16308:16330   */\n      add\n        /* \"#utility.yul\":16290:16340   */\n      tag_298\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":16280:16340   */\n      swap2\n      pop\n        /* \"#utility.yul\":16235:16350   */\n      pop\n        /* \"#utility.yul\":15889:16357   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16363:16837   */\n    tag_60:\n        /* \"#utility.yul\":16431:16437   */\n      0x00\n        /* \"#utility.yul\":16439:16445   */\n      dup1\n        /* \"#utility.yul\":16488:16490   */\n      0x40\n        /* \"#utility.yul\":16476:16485   */\n      dup4\n        /* \"#utility.yul\":16467:16474   */\n      dup6\n        /* \"#utility.yul\":16463:16486   */\n      sub\n        /* \"#utility.yul\":16459:16491   */\n      slt\n        /* \"#utility.yul\":16456:16575   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":16494:16573   */\n      tag_487\n      tag_254\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":16456:16575   */\n    tag_486:\n        /* \"#utility.yul\":16614:16615   */\n      0x00\n        /* \"#utility.yul\":16639:16692   */\n      tag_488\n        /* \"#utility.yul\":16684:16691   */\n      dup6\n        /* \"#utility.yul\":16675:16681   */\n      dup3\n        /* \"#utility.yul\":16664:16673   */\n      dup7\n        /* \"#utility.yul\":16660:16682   */\n      add\n        /* \"#utility.yul\":16639:16692   */\n      tag_259\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":16629:16692   */\n      swap3\n      pop\n        /* \"#utility.yul\":16585:16702   */\n      pop\n        /* \"#utility.yul\":16741:16743   */\n      0x20\n        /* \"#utility.yul\":16767:16820   */\n      tag_489\n        /* \"#utility.yul\":16812:16819   */\n      dup6\n        /* \"#utility.yul\":16803:16809   */\n      dup3\n        /* \"#utility.yul\":16792:16801   */\n      dup7\n        /* \"#utility.yul\":16788:16810   */\n      add\n        /* \"#utility.yul\":16767:16820   */\n      tag_259\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":16757:16820   */\n      swap2\n      pop\n        /* \"#utility.yul\":16712:16830   */\n      pop\n        /* \"#utility.yul\":16363:16837   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16843:17932   */\n    tag_65:\n        /* \"#utility.yul\":16947:16953   */\n      0x00\n        /* \"#utility.yul\":16955:16961   */\n      dup1\n        /* \"#utility.yul\":16963:16969   */\n      0x00\n        /* \"#utility.yul\":16971:16977   */\n      dup1\n        /* \"#utility.yul\":16979:16985   */\n      0x00\n        /* \"#utility.yul\":17028:17031   */\n      0xa0\n        /* \"#utility.yul\":17016:17025   */\n      dup7\n        /* \"#utility.yul\":17007:17014   */\n      dup9\n        /* \"#utility.yul\":17003:17026   */\n      sub\n        /* \"#utility.yul\":16999:17032   */\n      slt\n        /* \"#utility.yul\":16996:17116   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":17035:17114   */\n      tag_492\n      tag_254\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":16996:17116   */\n    tag_491:\n        /* \"#utility.yul\":17155:17156   */\n      0x00\n        /* \"#utility.yul\":17180:17233   */\n      tag_493\n        /* \"#utility.yul\":17225:17232   */\n      dup9\n        /* \"#utility.yul\":17216:17222   */\n      dup3\n        /* \"#utility.yul\":17205:17214   */\n      dup10\n        /* \"#utility.yul\":17201:17223   */\n      add\n        /* \"#utility.yul\":17180:17233   */\n      tag_259\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":17170:17233   */\n      swap6\n      pop\n        /* \"#utility.yul\":17126:17243   */\n      pop\n        /* \"#utility.yul\":17282:17284   */\n      0x20\n        /* \"#utility.yul\":17308:17361   */\n      tag_494\n        /* \"#utility.yul\":17353:17360   */\n      dup9\n        /* \"#utility.yul\":17344:17350   */\n      dup3\n        /* \"#utility.yul\":17333:17342   */\n      dup10\n        /* \"#utility.yul\":17329:17351   */\n      add\n        /* \"#utility.yul\":17308:17361   */\n      tag_259\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":17298:17361   */\n      swap5\n      pop\n        /* \"#utility.yul\":17253:17371   */\n      pop\n        /* \"#utility.yul\":17410:17412   */\n      0x40\n        /* \"#utility.yul\":17436:17489   */\n      tag_495\n        /* \"#utility.yul\":17481:17488   */\n      dup9\n        /* \"#utility.yul\":17472:17478   */\n      dup3\n        /* \"#utility.yul\":17461:17470   */\n      dup10\n        /* \"#utility.yul\":17457:17479   */\n      add\n        /* \"#utility.yul\":17436:17489   */\n      tag_262\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":17426:17489   */\n      swap4\n      pop\n        /* \"#utility.yul\":17381:17499   */\n      pop\n        /* \"#utility.yul\":17538:17540   */\n      0x60\n        /* \"#utility.yul\":17564:17617   */\n      tag_496\n        /* \"#utility.yul\":17609:17616   */\n      dup9\n        /* \"#utility.yul\":17600:17606   */\n      dup3\n        /* \"#utility.yul\":17589:17598   */\n      dup10\n        /* \"#utility.yul\":17585:17607   */\n      add\n        /* \"#utility.yul\":17564:17617   */\n      tag_262\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":17554:17617   */\n      swap3\n      pop\n        /* \"#utility.yul\":17509:17627   */\n      pop\n        /* \"#utility.yul\":17694:17697   */\n      0x80\n        /* \"#utility.yul\":17683:17692   */\n      dup7\n        /* \"#utility.yul\":17679:17698   */\n      add\n        /* \"#utility.yul\":17666:17699   */\n      calldataload\n        /* \"#utility.yul\":17726:17744   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17718:17724   */\n      dup2\n        /* \"#utility.yul\":17715:17745   */\n      gt\n        /* \"#utility.yul\":17712:17829   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":17748:17827   */\n      tag_498\n      tag_255\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":17712:17829   */\n    tag_497:\n        /* \"#utility.yul\":17853:17915   */\n      tag_499\n        /* \"#utility.yul\":17907:17914   */\n      dup9\n        /* \"#utility.yul\":17898:17904   */\n      dup3\n        /* \"#utility.yul\":17887:17896   */\n      dup10\n        /* \"#utility.yul\":17883:17905   */\n      add\n        /* \"#utility.yul\":17853:17915   */\n      tag_285\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":17843:17915   */\n      swap2\n      pop\n        /* \"#utility.yul\":17637:17925   */\n      pop\n        /* \"#utility.yul\":16843:17932   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17938:18267   */\n    tag_69:\n        /* \"#utility.yul\":17997:18003   */\n      0x00\n        /* \"#utility.yul\":18046:18048   */\n      0x20\n        /* \"#utility.yul\":18034:18043   */\n      dup3\n        /* \"#utility.yul\":18025:18032   */\n      dup5\n        /* \"#utility.yul\":18021:18044   */\n      sub\n        /* \"#utility.yul\":18017:18049   */\n      slt\n        /* \"#utility.yul\":18014:18133   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":18052:18131   */\n      tag_502\n      tag_254\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":18014:18133   */\n    tag_501:\n        /* \"#utility.yul\":18172:18173   */\n      0x00\n        /* \"#utility.yul\":18197:18250   */\n      tag_503\n        /* \"#utility.yul\":18242:18249   */\n      dup5\n        /* \"#utility.yul\":18233:18239   */\n      dup3\n        /* \"#utility.yul\":18222:18231   */\n      dup6\n        /* \"#utility.yul\":18218:18240   */\n      add\n        /* \"#utility.yul\":18197:18250   */\n      tag_259\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":18187:18250   */\n      swap2\n      pop\n        /* \"#utility.yul\":18143:18260   */\n      pop\n        /* \"#utility.yul\":17938:18267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18273:18453   */\n    tag_299:\n        /* \"#utility.yul\":18321:18398   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18318:18319   */\n      0x00\n        /* \"#utility.yul\":18311:18399   */\n      mstore\n        /* \"#utility.yul\":18418:18422   */\n      0x22\n        /* \"#utility.yul\":18415:18416   */\n      0x04\n        /* \"#utility.yul\":18408:18423   */\n      mstore\n        /* \"#utility.yul\":18442:18446   */\n      0x24\n        /* \"#utility.yul\":18439:18440   */\n      0x00\n        /* \"#utility.yul\":18432:18447   */\n      revert\n        /* \"#utility.yul\":18459:18779   */\n    tag_79:\n        /* \"#utility.yul\":18503:18509   */\n      0x00\n        /* \"#utility.yul\":18540:18541   */\n      0x02\n        /* \"#utility.yul\":18534:18538   */\n      dup3\n        /* \"#utility.yul\":18530:18542   */\n      div\n        /* \"#utility.yul\":18520:18542   */\n      swap1\n      pop\n        /* \"#utility.yul\":18587:18588   */\n      0x01\n        /* \"#utility.yul\":18581:18585   */\n      dup3\n        /* \"#utility.yul\":18577:18589   */\n      and\n        /* \"#utility.yul\":18608:18626   */\n      dup1\n        /* \"#utility.yul\":18598:18679   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":18664:18668   */\n      0x7f\n        /* \"#utility.yul\":18656:18662   */\n      dup3\n        /* \"#utility.yul\":18652:18669   */\n      and\n        /* \"#utility.yul\":18642:18669   */\n      swap2\n      pop\n        /* \"#utility.yul\":18598:18679   */\n    tag_506:\n        /* \"#utility.yul\":18726:18728   */\n      0x20\n        /* \"#utility.yul\":18718:18724   */\n      dup3\n        /* \"#utility.yul\":18715:18729   */\n      lt\n        /* \"#utility.yul\":18695:18713   */\n      dup2\n        /* \"#utility.yul\":18692:18730   */\n      sub\n        /* \"#utility.yul\":18689:18773   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":18745:18763   */\n      tag_508\n      tag_299\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":18689:18773   */\n    tag_507:\n        /* \"#utility.yul\":18510:18779   */\n      pop\n        /* \"#utility.yul\":18459:18779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18785:19117   */\n    tag_91:\n        /* \"#utility.yul\":18906:18910   */\n      0x00\n        /* \"#utility.yul\":18944:18946   */\n      0x40\n        /* \"#utility.yul\":18933:18942   */\n      dup3\n        /* \"#utility.yul\":18929:18947   */\n      add\n        /* \"#utility.yul\":18921:18947   */\n      swap1\n      pop\n        /* \"#utility.yul\":18957:19028   */\n      tag_510\n        /* \"#utility.yul\":19025:19026   */\n      0x00\n        /* \"#utility.yul\":19014:19023   */\n      dup4\n        /* \"#utility.yul\":19010:19027   */\n      add\n        /* \"#utility.yul\":19001:19007   */\n      dup6\n        /* \"#utility.yul\":18957:19028   */\n      tag_296\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":19038:19110   */\n      tag_511\n        /* \"#utility.yul\":19106:19108   */\n      0x20\n        /* \"#utility.yul\":19095:19104   */\n      dup4\n        /* \"#utility.yul\":19091:19109   */\n      add\n        /* \"#utility.yul\":19082:19088   */\n      dup5\n        /* \"#utility.yul\":19038:19110   */\n      tag_296\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":18785:19117   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19123:19455   */\n    tag_97:\n        /* \"#utility.yul\":19244:19248   */\n      0x00\n        /* \"#utility.yul\":19282:19284   */\n      0x40\n        /* \"#utility.yul\":19271:19280   */\n      dup3\n        /* \"#utility.yul\":19267:19285   */\n      add\n        /* \"#utility.yul\":19259:19285   */\n      swap1\n      pop\n        /* \"#utility.yul\":19295:19366   */\n      tag_513\n        /* \"#utility.yul\":19363:19364   */\n      0x00\n        /* \"#utility.yul\":19352:19361   */\n      dup4\n        /* \"#utility.yul\":19348:19365   */\n      add\n        /* \"#utility.yul\":19339:19345   */\n      dup6\n        /* \"#utility.yul\":19295:19366   */\n      tag_263\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":19376:19448   */\n      tag_514\n        /* \"#utility.yul\":19444:19446   */\n      0x20\n        /* \"#utility.yul\":19433:19442   */\n      dup4\n        /* \"#utility.yul\":19429:19447   */\n      add\n        /* \"#utility.yul\":19420:19426   */\n      dup5\n        /* \"#utility.yul\":19376:19448   */\n      tag_263\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":19123:19455   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19461:19641   */\n    tag_112:\n        /* \"#utility.yul\":19509:19586   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19506:19507   */\n      0x00\n        /* \"#utility.yul\":19499:19587   */\n      mstore\n        /* \"#utility.yul\":19606:19610   */\n      0x32\n        /* \"#utility.yul\":19603:19604   */\n      0x04\n        /* \"#utility.yul\":19596:19611   */\n      mstore\n        /* \"#utility.yul\":19630:19634   */\n      0x24\n        /* \"#utility.yul\":19627:19628   */\n      0x00\n        /* \"#utility.yul\":19620:19635   */\n      revert\n        /* \"#utility.yul\":19647:20200   */\n    tag_205:\n        /* \"#utility.yul\":19824:19828   */\n      0x00\n        /* \"#utility.yul\":19862:19865   */\n      0x80\n        /* \"#utility.yul\":19851:19860   */\n      dup3\n        /* \"#utility.yul\":19847:19866   */\n      add\n        /* \"#utility.yul\":19839:19866   */\n      swap1\n      pop\n        /* \"#utility.yul\":19876:19947   */\n      tag_517\n        /* \"#utility.yul\":19944:19945   */\n      0x00\n        /* \"#utility.yul\":19933:19942   */\n      dup4\n        /* \"#utility.yul\":19929:19946   */\n      add\n        /* \"#utility.yul\":19920:19926   */\n      dup8\n        /* \"#utility.yul\":19876:19947   */\n      tag_296\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":19957:20029   */\n      tag_518\n        /* \"#utility.yul\":20025:20027   */\n      0x20\n        /* \"#utility.yul\":20014:20023   */\n      dup4\n        /* \"#utility.yul\":20010:20028   */\n      add\n        /* \"#utility.yul\":20001:20007   */\n      dup7\n        /* \"#utility.yul\":19957:20029   */\n      tag_263\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":20039:20111   */\n      tag_519\n        /* \"#utility.yul\":20107:20109   */\n      0x40\n        /* \"#utility.yul\":20096:20105   */\n      dup4\n        /* \"#utility.yul\":20092:20110   */\n      add\n        /* \"#utility.yul\":20083:20089   */\n      dup6\n        /* \"#utility.yul\":20039:20111   */\n      tag_263\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":20121:20193   */\n      tag_520\n        /* \"#utility.yul\":20189:20191   */\n      0x60\n        /* \"#utility.yul\":20178:20187   */\n      dup4\n        /* \"#utility.yul\":20174:20192   */\n      add\n        /* \"#utility.yul\":20165:20171   */\n      dup5\n        /* \"#utility.yul\":20121:20193   */\n      tag_263\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":19647:20200   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20206:20386   */\n    tag_300:\n        /* \"#utility.yul\":20254:20331   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20251:20252   */\n      0x00\n        /* \"#utility.yul\":20244:20332   */\n      mstore\n        /* \"#utility.yul\":20351:20355   */\n      0x11\n        /* \"#utility.yul\":20348:20349   */\n      0x04\n        /* \"#utility.yul\":20341:20356   */\n      mstore\n        /* \"#utility.yul\":20375:20379   */\n      0x24\n        /* \"#utility.yul\":20372:20373   */\n      0x00\n        /* \"#utility.yul\":20365:20380   */\n      revert\n        /* \"#utility.yul\":20392:20583   */\n    tag_208:\n        /* \"#utility.yul\":20432:20435   */\n      0x00\n        /* \"#utility.yul\":20451:20471   */\n      tag_523\n        /* \"#utility.yul\":20469:20470   */\n      dup3\n        /* \"#utility.yul\":20451:20471   */\n      tag_260\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":20446:20471   */\n      swap2\n      pop\n        /* \"#utility.yul\":20485:20505   */\n      tag_524\n        /* \"#utility.yul\":20503:20504   */\n      dup4\n        /* \"#utility.yul\":20485:20505   */\n      tag_260\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":20480:20505   */\n      swap3\n      pop\n        /* \"#utility.yul\":20528:20529   */\n      dup3\n        /* \"#utility.yul\":20525:20526   */\n      dup3\n        /* \"#utility.yul\":20521:20530   */\n      add\n        /* \"#utility.yul\":20514:20530   */\n      swap1\n      pop\n        /* \"#utility.yul\":20549:20552   */\n      dup1\n        /* \"#utility.yul\":20546:20547   */\n      dup3\n        /* \"#utility.yul\":20543:20553   */\n      gt\n        /* \"#utility.yul\":20540:20576   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":20556:20574   */\n      tag_526\n      tag_300\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":20540:20576   */\n    tag_525:\n        /* \"#utility.yul\":20392:20583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20589:21223   */\n    tag_215:\n        /* \"#utility.yul\":20810:20814   */\n      0x00\n        /* \"#utility.yul\":20848:20850   */\n      0x40\n        /* \"#utility.yul\":20837:20846   */\n      dup3\n        /* \"#utility.yul\":20833:20851   */\n      add\n        /* \"#utility.yul\":20825:20851   */\n      swap1\n      pop\n        /* \"#utility.yul\":20897:20906   */\n      dup2\n        /* \"#utility.yul\":20891:20895   */\n      dup2\n        /* \"#utility.yul\":20887:20907   */\n      sub\n        /* \"#utility.yul\":20883:20884   */\n      0x00\n        /* \"#utility.yul\":20872:20881   */\n      dup4\n        /* \"#utility.yul\":20868:20885   */\n      add\n        /* \"#utility.yul\":20861:20908   */\n      mstore\n        /* \"#utility.yul\":20925:21033   */\n      tag_528\n        /* \"#utility.yul\":21028:21032   */\n      dup2\n        /* \"#utility.yul\":21019:21025   */\n      dup6\n        /* \"#utility.yul\":20925:21033   */\n      tag_295\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":20917:21033   */\n      swap1\n      pop\n        /* \"#utility.yul\":21080:21089   */\n      dup2\n        /* \"#utility.yul\":21074:21078   */\n      dup2\n        /* \"#utility.yul\":21070:21090   */\n      sub\n        /* \"#utility.yul\":21065:21067   */\n      0x20\n        /* \"#utility.yul\":21054:21063   */\n      dup4\n        /* \"#utility.yul\":21050:21068   */\n      add\n        /* \"#utility.yul\":21043:21091   */\n      mstore\n        /* \"#utility.yul\":21108:21216   */\n      tag_529\n        /* \"#utility.yul\":21211:21215   */\n      dup2\n        /* \"#utility.yul\":21202:21208   */\n      dup5\n        /* \"#utility.yul\":21108:21216   */\n      tag_295\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":21100:21216   */\n      swap1\n      pop\n        /* \"#utility.yul\":20589:21223   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21229:21327   */\n    tag_301:\n        /* \"#utility.yul\":21280:21286   */\n      0x00\n        /* \"#utility.yul\":21314:21319   */\n      dup2\n        /* \"#utility.yul\":21308:21320   */\n      mload\n        /* \"#utility.yul\":21298:21320   */\n      swap1\n      pop\n        /* \"#utility.yul\":21229:21327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21333:21501   */\n    tag_302:\n        /* \"#utility.yul\":21416:21427   */\n      0x00\n        /* \"#utility.yul\":21450:21456   */\n      dup3\n        /* \"#utility.yul\":21445:21448   */\n      dup3\n        /* \"#utility.yul\":21438:21457   */\n      mstore\n        /* \"#utility.yul\":21490:21494   */\n      0x20\n        /* \"#utility.yul\":21485:21488   */\n      dup3\n        /* \"#utility.yul\":21481:21495   */\n      add\n        /* \"#utility.yul\":21466:21495   */\n      swap1\n      pop\n        /* \"#utility.yul\":21333:21501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21507:21880   */\n    tag_303:\n        /* \"#utility.yul\":21593:21596   */\n      0x00\n        /* \"#utility.yul\":21621:21659   */\n      tag_533\n        /* \"#utility.yul\":21653:21658   */\n      dup3\n        /* \"#utility.yul\":21621:21659   */\n      tag_301\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":21675:21745   */\n      tag_534\n        /* \"#utility.yul\":21738:21744   */\n      dup2\n        /* \"#utility.yul\":21733:21736   */\n      dup6\n        /* \"#utility.yul\":21675:21745   */\n      tag_302\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":21668:21745   */\n      swap4\n      pop\n        /* \"#utility.yul\":21754:21819   */\n      tag_535\n        /* \"#utility.yul\":21812:21818   */\n      dup2\n        /* \"#utility.yul\":21807:21810   */\n      dup6\n        /* \"#utility.yul\":21800:21804   */\n      0x20\n        /* \"#utility.yul\":21793:21798   */\n      dup7\n        /* \"#utility.yul\":21789:21805   */\n      add\n        /* \"#utility.yul\":21754:21819   */\n      tag_271\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":21844:21873   */\n      tag_536\n        /* \"#utility.yul\":21866:21872   */\n      dup2\n        /* \"#utility.yul\":21844:21873   */\n      tag_272\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":21839:21842   */\n      dup5\n        /* \"#utility.yul\":21835:21874   */\n      add\n        /* \"#utility.yul\":21828:21874   */\n      swap2\n      pop\n        /* \"#utility.yul\":21597:21880   */\n      pop\n        /* \"#utility.yul\":21507:21880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21886:22637   */\n    tag_219:\n        /* \"#utility.yul\":22109:22113   */\n      0x00\n        /* \"#utility.yul\":22147:22150   */\n      0xa0\n        /* \"#utility.yul\":22136:22145   */\n      dup3\n        /* \"#utility.yul\":22132:22151   */\n      add\n        /* \"#utility.yul\":22124:22151   */\n      swap1\n      pop\n        /* \"#utility.yul\":22161:22232   */\n      tag_538\n        /* \"#utility.yul\":22229:22230   */\n      0x00\n        /* \"#utility.yul\":22218:22227   */\n      dup4\n        /* \"#utility.yul\":22214:22231   */\n      add\n        /* \"#utility.yul\":22205:22211   */\n      dup9\n        /* \"#utility.yul\":22161:22232   */\n      tag_296\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":22242:22314   */\n      tag_539\n        /* \"#utility.yul\":22310:22312   */\n      0x20\n        /* \"#utility.yul\":22299:22308   */\n      dup4\n        /* \"#utility.yul\":22295:22313   */\n      add\n        /* \"#utility.yul\":22286:22292   */\n      dup8\n        /* \"#utility.yul\":22242:22314   */\n      tag_296\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":22324:22396   */\n      tag_540\n        /* \"#utility.yul\":22392:22394   */\n      0x40\n        /* \"#utility.yul\":22381:22390   */\n      dup4\n        /* \"#utility.yul\":22377:22395   */\n      add\n        /* \"#utility.yul\":22368:22374   */\n      dup7\n        /* \"#utility.yul\":22324:22396   */\n      tag_263\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":22406:22478   */\n      tag_541\n        /* \"#utility.yul\":22474:22476   */\n      0x60\n        /* \"#utility.yul\":22463:22472   */\n      dup4\n        /* \"#utility.yul\":22459:22477   */\n      add\n        /* \"#utility.yul\":22450:22456   */\n      dup6\n        /* \"#utility.yul\":22406:22478   */\n      tag_263\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":22526:22535   */\n      dup2\n        /* \"#utility.yul\":22520:22524   */\n      dup2\n        /* \"#utility.yul\":22516:22536   */\n      sub\n        /* \"#utility.yul\":22510:22513   */\n      0x80\n        /* \"#utility.yul\":22499:22508   */\n      dup4\n        /* \"#utility.yul\":22495:22514   */\n      add\n        /* \"#utility.yul\":22488:22537   */\n      mstore\n        /* \"#utility.yul\":22554:22630   */\n      tag_542\n        /* \"#utility.yul\":22625:22629   */\n      dup2\n        /* \"#utility.yul\":22616:22622   */\n      dup5\n        /* \"#utility.yul\":22554:22630   */\n      tag_303\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":22546:22630   */\n      swap1\n      pop\n        /* \"#utility.yul\":21886:22637   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22643:22784   */\n    tag_304:\n        /* \"#utility.yul\":22699:22704   */\n      0x00\n        /* \"#utility.yul\":22730:22736   */\n      dup2\n        /* \"#utility.yul\":22724:22737   */\n      mload\n        /* \"#utility.yul\":22715:22737   */\n      swap1\n      pop\n        /* \"#utility.yul\":22746:22778   */\n      tag_544\n        /* \"#utility.yul\":22772:22777   */\n      dup2\n        /* \"#utility.yul\":22746:22778   */\n      tag_265\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":22643:22784   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22790:23139   */\n    tag_222:\n        /* \"#utility.yul\":22859:22865   */\n      0x00\n        /* \"#utility.yul\":22908:22910   */\n      0x20\n        /* \"#utility.yul\":22896:22905   */\n      dup3\n        /* \"#utility.yul\":22887:22894   */\n      dup5\n        /* \"#utility.yul\":22883:22906   */\n      sub\n        /* \"#utility.yul\":22879:22911   */\n      slt\n        /* \"#utility.yul\":22876:22995   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":22914:22993   */\n      tag_547\n      tag_254\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":22876:22995   */\n    tag_546:\n        /* \"#utility.yul\":23034:23035   */\n      0x00\n        /* \"#utility.yul\":23059:23122   */\n      tag_548\n        /* \"#utility.yul\":23114:23121   */\n      dup5\n        /* \"#utility.yul\":23105:23111   */\n      dup3\n        /* \"#utility.yul\":23094:23103   */\n      dup6\n        /* \"#utility.yul\":23090:23112   */\n      add\n        /* \"#utility.yul\":23059:23122   */\n      tag_304\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":23049:23122   */\n      swap2\n      pop\n        /* \"#utility.yul\":23005:23132   */\n      pop\n        /* \"#utility.yul\":22790:23139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23145:24198   */\n    tag_238:\n        /* \"#utility.yul\":23468:23472   */\n      0x00\n        /* \"#utility.yul\":23506:23509   */\n      0xa0\n        /* \"#utility.yul\":23495:23504   */\n      dup3\n        /* \"#utility.yul\":23491:23510   */\n      add\n        /* \"#utility.yul\":23483:23510   */\n      swap1\n      pop\n        /* \"#utility.yul\":23520:23591   */\n      tag_550\n        /* \"#utility.yul\":23588:23589   */\n      0x00\n        /* \"#utility.yul\":23577:23586   */\n      dup4\n        /* \"#utility.yul\":23573:23590   */\n      add\n        /* \"#utility.yul\":23564:23570   */\n      dup9\n        /* \"#utility.yul\":23520:23591   */\n      tag_296\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":23601:23673   */\n      tag_551\n        /* \"#utility.yul\":23669:23671   */\n      0x20\n        /* \"#utility.yul\":23658:23667   */\n      dup4\n        /* \"#utility.yul\":23654:23672   */\n      add\n        /* \"#utility.yul\":23645:23651   */\n      dup8\n        /* \"#utility.yul\":23601:23673   */\n      tag_296\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":23720:23729   */\n      dup2\n        /* \"#utility.yul\":23714:23718   */\n      dup2\n        /* \"#utility.yul\":23710:23730   */\n      sub\n        /* \"#utility.yul\":23705:23707   */\n      0x40\n        /* \"#utility.yul\":23694:23703   */\n      dup4\n        /* \"#utility.yul\":23690:23708   */\n      add\n        /* \"#utility.yul\":23683:23731   */\n      mstore\n        /* \"#utility.yul\":23748:23856   */\n      tag_552\n        /* \"#utility.yul\":23851:23855   */\n      dup2\n        /* \"#utility.yul\":23842:23848   */\n      dup7\n        /* \"#utility.yul\":23748:23856   */\n      tag_295\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":23740:23856   */\n      swap1\n      pop\n        /* \"#utility.yul\":23903:23912   */\n      dup2\n        /* \"#utility.yul\":23897:23901   */\n      dup2\n        /* \"#utility.yul\":23893:23913   */\n      sub\n        /* \"#utility.yul\":23888:23890   */\n      0x60\n        /* \"#utility.yul\":23877:23886   */\n      dup4\n        /* \"#utility.yul\":23873:23891   */\n      add\n        /* \"#utility.yul\":23866:23914   */\n      mstore\n        /* \"#utility.yul\":23931:24039   */\n      tag_553\n        /* \"#utility.yul\":24034:24038   */\n      dup2\n        /* \"#utility.yul\":24025:24031   */\n      dup6\n        /* \"#utility.yul\":23931:24039   */\n      tag_295\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":23923:24039   */\n      swap1\n      pop\n        /* \"#utility.yul\":24087:24096   */\n      dup2\n        /* \"#utility.yul\":24081:24085   */\n      dup2\n        /* \"#utility.yul\":24077:24097   */\n      sub\n        /* \"#utility.yul\":24071:24074   */\n      0x80\n        /* \"#utility.yul\":24060:24069   */\n      dup4\n        /* \"#utility.yul\":24056:24075   */\n      add\n        /* \"#utility.yul\":24049:24098   */\n      mstore\n        /* \"#utility.yul\":24115:24191   */\n      tag_554\n        /* \"#utility.yul\":24186:24190   */\n      dup2\n        /* \"#utility.yul\":24177:24183   */\n      dup5\n        /* \"#utility.yul\":24115:24191   */\n      tag_303\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":24107:24191   */\n      swap1\n      pop\n        /* \"#utility.yul\":23145:24198   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220196ba38f7cc4b4525a926acf6ca645f00c5a5ddb99bf7bed9940d6f1314fa5e464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1754": {
									"entryPoint": null,
									"id": 1754,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2792": {
									"entryPoint": null,
									"id": 2792,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2906": {
									"entryPoint": null,
									"id": 2906,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_2367": {
									"entryPoint": 215,
									"id": 2367,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_2888": {
									"entryPoint": 234,
									"id": 2888,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:1",
										"nodeType": "YulBlock",
										"src": "0:6778:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1267:53:1",
													"nodeType": "YulBlock",
													"src": "1267:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:1"
																		},
																		"nativeSrc": "1289:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:1"
																},
																"nativeSrc": "1277:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:1"
															},
															"nativeSrc": "1277:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:1",
														"nodeType": "YulTypedName",
														"src": "1255:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:1",
														"nodeType": "YulTypedName",
														"src": "1262:3:1",
														"type": ""
													}
												],
												"src": "1202:118:1"
											},
											{
												"body": {
													"nativeSrc": "1424:124:1",
													"nodeType": "YulBlock",
													"src": "1424:124:1",
													"statements": [
														{
															"nativeSrc": "1434:26:1",
															"nodeType": "YulAssignment",
															"src": "1434:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:1"
																},
																"nativeSrc": "1442:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:1"
																		},
																		"nativeSrc": "1523:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:1"
																},
																"nativeSrc": "1470:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:1"
															},
															"nativeSrc": "1470:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:1",
														"nodeType": "YulTypedName",
														"src": "1396:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:1",
														"nodeType": "YulTypedName",
														"src": "1408:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:1",
														"nodeType": "YulTypedName",
														"src": "1419:4:1",
														"type": ""
													}
												],
												"src": "1326:222:1"
											},
											{
												"body": {
													"nativeSrc": "1613:40:1",
													"nodeType": "YulBlock",
													"src": "1613:40:1",
													"statements": [
														{
															"nativeSrc": "1624:22:1",
															"nodeType": "YulAssignment",
															"src": "1624:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1640:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1640:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1634:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1634:5:1"
																},
																"nativeSrc": "1634:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1634:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1554:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:1",
														"nodeType": "YulTypedName",
														"src": "1606:6:1",
														"type": ""
													}
												],
												"src": "1554:99:1"
											},
											{
												"body": {
													"nativeSrc": "1687:152:1",
													"nodeType": "YulBlock",
													"src": "1687:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1704:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1704:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1707:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1707:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1697:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1697:6:1"
																},
																"nativeSrc": "1697:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1697:88:1"
															},
															"nativeSrc": "1697:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1697:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1801:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1804:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1804:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1794:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:1"
																},
																"nativeSrc": "1794:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1794:15:1"
															},
															"nativeSrc": "1794:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1794:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1825:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1825:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1828:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1828:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1818:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:1"
																},
																"nativeSrc": "1818:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1818:15:1"
															},
															"nativeSrc": "1818:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1818:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1659:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:180:1"
											},
											{
												"body": {
													"nativeSrc": "1873:152:1",
													"nodeType": "YulBlock",
													"src": "1873:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1890:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1890:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1893:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1893:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1883:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:1"
																},
																"nativeSrc": "1883:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1883:88:1"
															},
															"nativeSrc": "1883:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1883:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1990:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1980:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:1"
																},
																"nativeSrc": "1980:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1980:15:1"
															},
															"nativeSrc": "1980:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1980:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2011:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2011:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2014:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2014:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2004:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:1"
																},
																"nativeSrc": "2004:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2004:15:1"
															},
															"nativeSrc": "2004:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2004:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1845:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1845:180:1"
											},
											{
												"body": {
													"nativeSrc": "2082:269:1",
													"nodeType": "YulBlock",
													"src": "2082:269:1",
													"statements": [
														{
															"nativeSrc": "2092:22:1",
															"nodeType": "YulAssignment",
															"src": "2092:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2106:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2106:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2112:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2112:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2102:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:1"
																},
																"nativeSrc": "2102:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2102:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2092:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:1"
																}
															]
														},
														{
															"nativeSrc": "2123:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2123:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2153:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2153:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2159:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2159:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2149:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2149:3:1"
																},
																"nativeSrc": "2149:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2149:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2127:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2127:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2200:51:1",
																"nodeType": "YulBlock",
																"src": "2200:51:1",
																"statements": [
																	{
																		"nativeSrc": "2214:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2214:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2228:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2236:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2224:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2224:3:1"
																			},
																			"nativeSrc": "2224:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2224:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2214:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2214:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2180:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2180:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2173:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:1"
																},
																"nativeSrc": "2173:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2173:26:1"
															},
															"nativeSrc": "2170:81:1",
															"nodeType": "YulIf",
															"src": "2170:81:1"
														},
														{
															"body": {
																"nativeSrc": "2303:42:1",
																"nodeType": "YulBlock",
																"src": "2303:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2317:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2317:16:1"
																			},
																			"nativeSrc": "2317:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2317:18:1"
																		},
																		"nativeSrc": "2317:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2267:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2267:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2290:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2290:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2298:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2298:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2287:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2287:2:1"
																		},
																		"nativeSrc": "2287:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2264:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2264:2:1"
																},
																"nativeSrc": "2264:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2264:38:1"
															},
															"nativeSrc": "2261:84:1",
															"nodeType": "YulIf",
															"src": "2261:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2031:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2066:4:1",
														"nodeType": "YulTypedName",
														"src": "2066:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2075:6:1",
														"nodeType": "YulTypedName",
														"src": "2075:6:1",
														"type": ""
													}
												],
												"src": "2031:320:1"
											},
											{
												"body": {
													"nativeSrc": "2411:87:1",
													"nodeType": "YulBlock",
													"src": "2411:87:1",
													"statements": [
														{
															"nativeSrc": "2421:11:1",
															"nodeType": "YulAssignment",
															"src": "2421:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "2429:3:1",
																"nodeType": "YulIdentifier",
																"src": "2429:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2421:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2421:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2449:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2449:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2452:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2452:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:1"
																},
																"nativeSrc": "2442:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2442:14:1"
															},
															"nativeSrc": "2442:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2442:14:1"
														},
														{
															"nativeSrc": "2465:26:1",
															"nodeType": "YulAssignment",
															"src": "2465:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2486:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2486:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2473:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2473:9:1"
																},
																"nativeSrc": "2473:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2473:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2465:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2465:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2357:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2398:3:1",
														"nodeType": "YulTypedName",
														"src": "2398:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2406:4:1",
														"nodeType": "YulTypedName",
														"src": "2406:4:1",
														"type": ""
													}
												],
												"src": "2357:141:1"
											},
											{
												"body": {
													"nativeSrc": "2548:49:1",
													"nodeType": "YulBlock",
													"src": "2548:49:1",
													"statements": [
														{
															"nativeSrc": "2558:33:1",
															"nodeType": "YulAssignment",
															"src": "2558:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2576:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2576:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2583:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:1"
																		},
																		"nativeSrc": "2572:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2588:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2568:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2568:3:1"
																},
																"nativeSrc": "2568:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2568:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2558:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2504:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2531:5:1",
														"nodeType": "YulTypedName",
														"src": "2531:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2541:6:1",
														"nodeType": "YulTypedName",
														"src": "2541:6:1",
														"type": ""
													}
												],
												"src": "2504:93:1"
											},
											{
												"body": {
													"nativeSrc": "2656:54:1",
													"nodeType": "YulBlock",
													"src": "2656:54:1",
													"statements": [
														{
															"nativeSrc": "2666:37:1",
															"nodeType": "YulAssignment",
															"src": "2666:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2691:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2691:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2697:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2697:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2687:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:1"
																},
																"nativeSrc": "2687:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2687:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2666:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2666:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2603:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2631:4:1",
														"nodeType": "YulTypedName",
														"src": "2631:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2637:5:1",
														"nodeType": "YulTypedName",
														"src": "2637:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2647:8:1",
														"nodeType": "YulTypedName",
														"src": "2647:8:1",
														"type": ""
													}
												],
												"src": "2603:107:1"
											},
											{
												"body": {
													"nativeSrc": "2792:317:1",
													"nodeType": "YulBlock",
													"src": "2792:317:1",
													"statements": [
														{
															"nativeSrc": "2802:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2802:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2823:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2823:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2835:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2835:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2819:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:1"
																},
																"nativeSrc": "2819:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2819:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2806:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2806:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2846:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2846:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2877:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2877:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2888:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2888:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2858:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2858:18:1"
																},
																"nativeSrc": "2858:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2858:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2850:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2850:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2964:51:1",
															"nodeType": "YulAssignment",
															"src": "2964:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2995:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2995:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3006:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3006:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2976:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2976:18:1"
																},
																"nativeSrc": "2976:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2976:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2964:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:8:1"
																}
															]
														},
														{
															"nativeSrc": "3024:30:1",
															"nodeType": "YulAssignment",
															"src": "3024:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3037:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3037:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3048:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3048:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3044:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:1"
																		},
																		"nativeSrc": "3044:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3044:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:1"
																},
																"nativeSrc": "3033:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3033:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3024:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3024:5:1"
																}
															]
														},
														{
															"nativeSrc": "3063:40:1",
															"nodeType": "YulAssignment",
															"src": "3063:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3087:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "3087:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3097:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3097:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3083:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:1"
																		},
																		"nativeSrc": "3083:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3083:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3073:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3073:2:1"
																},
																"nativeSrc": "3073:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3073:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3063:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2716:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2753:5:1",
														"nodeType": "YulTypedName",
														"src": "2753:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2760:10:1",
														"nodeType": "YulTypedName",
														"src": "2760:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2772:8:1",
														"nodeType": "YulTypedName",
														"src": "2772:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2785:6:1",
														"nodeType": "YulTypedName",
														"src": "2785:6:1",
														"type": ""
													}
												],
												"src": "2716:393:1"
											},
											{
												"body": {
													"nativeSrc": "3160:32:1",
													"nodeType": "YulBlock",
													"src": "3160:32:1",
													"statements": [
														{
															"nativeSrc": "3170:16:1",
															"nodeType": "YulAssignment",
															"src": "3170:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "3181:5:1",
																"nodeType": "YulIdentifier",
																"src": "3181:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3170:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3170:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3115:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3142:5:1",
														"nodeType": "YulTypedName",
														"src": "3142:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3152:7:1",
														"nodeType": "YulTypedName",
														"src": "3152:7:1",
														"type": ""
													}
												],
												"src": "3115:77:1"
											},
											{
												"body": {
													"nativeSrc": "3230:28:1",
													"nodeType": "YulBlock",
													"src": "3230:28:1",
													"statements": [
														{
															"nativeSrc": "3240:12:1",
															"nodeType": "YulAssignment",
															"src": "3240:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "3247:5:1",
																"nodeType": "YulIdentifier",
																"src": "3247:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3240:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3240:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3198:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3216:5:1",
														"nodeType": "YulTypedName",
														"src": "3216:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3226:3:1",
														"nodeType": "YulTypedName",
														"src": "3226:3:1",
														"type": ""
													}
												],
												"src": "3198:60:1"
											},
											{
												"body": {
													"nativeSrc": "3324:82:1",
													"nodeType": "YulBlock",
													"src": "3324:82:1",
													"statements": [
														{
															"nativeSrc": "3334:66:1",
															"nodeType": "YulAssignment",
															"src": "3334:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3392:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3392:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3374:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3374:17:1"
																				},
																				"nativeSrc": "3374:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3365:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "3365:8:1"
																		},
																		"nativeSrc": "3365:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3365:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3347:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3347:17:1"
																},
																"nativeSrc": "3347:53:1",
																"nodeType": "YulFunctionCall",
																"src": "3347:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3334:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3334:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3264:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3304:5:1",
														"nodeType": "YulTypedName",
														"src": "3304:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3314:9:1",
														"nodeType": "YulTypedName",
														"src": "3314:9:1",
														"type": ""
													}
												],
												"src": "3264:142:1"
											},
											{
												"body": {
													"nativeSrc": "3459:28:1",
													"nodeType": "YulBlock",
													"src": "3459:28:1",
													"statements": [
														{
															"nativeSrc": "3469:12:1",
															"nodeType": "YulAssignment",
															"src": "3469:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "3476:5:1",
																"nodeType": "YulIdentifier",
																"src": "3476:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3469:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3412:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3445:5:1",
														"nodeType": "YulTypedName",
														"src": "3445:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3455:3:1",
														"nodeType": "YulTypedName",
														"src": "3455:3:1",
														"type": ""
													}
												],
												"src": "3412:75:1"
											},
											{
												"body": {
													"nativeSrc": "3569:193:1",
													"nodeType": "YulBlock",
													"src": "3569:193:1",
													"statements": [
														{
															"nativeSrc": "3579:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3579:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3634:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3634:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3603:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3603:30:1"
																},
																"nativeSrc": "3603:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3603:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3583:16:1",
																	"nodeType": "YulTypedName",
																	"src": "3583:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3658:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3658:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3698:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3698:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3692:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3692:5:1"
																				},
																				"nativeSrc": "3692:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3692:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3705:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3737:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3737:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3713:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3713:23:1"
																				},
																				"nativeSrc": "3713:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3713:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3664:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3664:27:1"
																		},
																		"nativeSrc": "3664:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3664:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3651:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:1"
																},
																"nativeSrc": "3651:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3651:105:1"
															},
															"nativeSrc": "3651:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3651:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3493:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3546:4:1",
														"nodeType": "YulTypedName",
														"src": "3546:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3552:6:1",
														"nodeType": "YulTypedName",
														"src": "3552:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3560:7:1",
														"nodeType": "YulTypedName",
														"src": "3560:7:1",
														"type": ""
													}
												],
												"src": "3493:269:1"
											},
											{
												"body": {
													"nativeSrc": "3817:24:1",
													"nodeType": "YulBlock",
													"src": "3817:24:1",
													"statements": [
														{
															"nativeSrc": "3827:8:1",
															"nodeType": "YulAssignment",
															"src": "3827:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3834:1:1",
																"nodeType": "YulLiteral",
																"src": "3834:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3827:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3768:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3813:3:1",
														"nodeType": "YulTypedName",
														"src": "3813:3:1",
														"type": ""
													}
												],
												"src": "3768:73:1"
											},
											{
												"body": {
													"nativeSrc": "3900:136:1",
													"nodeType": "YulBlock",
													"src": "3900:136:1",
													"statements": [
														{
															"nativeSrc": "3910:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3910:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3924:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3924:30:1"
																},
																"nativeSrc": "3924:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3924:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3914:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3914:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4009:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4009:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4015:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4023:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4023:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3965:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3965:43:1"
																},
																"nativeSrc": "3965:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3965:65:1"
															},
															"nativeSrc": "3965:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3965:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3847:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3886:4:1",
														"nodeType": "YulTypedName",
														"src": "3886:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3892:6:1",
														"nodeType": "YulTypedName",
														"src": "3892:6:1",
														"type": ""
													}
												],
												"src": "3847:189:1"
											},
											{
												"body": {
													"nativeSrc": "4092:136:1",
													"nodeType": "YulBlock",
													"src": "4092:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4159:63:1",
																"nodeType": "YulBlock",
																"src": "4159:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4203:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4203:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4210:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4210:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4173:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "4173:29:1"
																			},
																			"nativeSrc": "4173:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:39:1"
																		},
																		"nativeSrc": "4173:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4173:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4112:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4112:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4119:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4119:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4109:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4109:2:1"
																},
																"nativeSrc": "4109:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4109:14:1"
															},
															"nativeSrc": "4102:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4124:26:1",
																"nodeType": "YulBlock",
																"src": "4124:26:1",
																"statements": [
																	{
																		"nativeSrc": "4126:22:1",
																		"nodeType": "YulAssignment",
																		"src": "4126:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4139:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4139:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4146:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4135:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4135:3:1"
																			},
																			"nativeSrc": "4135:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4135:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4126:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4126:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4106:2:1",
																"nodeType": "YulBlock",
																"src": "4106:2:1",
																"statements": []
															},
															"src": "4102:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4042:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4080:5:1",
														"nodeType": "YulTypedName",
														"src": "4080:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4087:3:1",
														"nodeType": "YulTypedName",
														"src": "4087:3:1",
														"type": ""
													}
												],
												"src": "4042:186:1"
											},
											{
												"body": {
													"nativeSrc": "4313:464:1",
													"nodeType": "YulBlock",
													"src": "4313:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4339:431:1",
																"nodeType": "YulBlock",
																"src": "4339:431:1",
																"statements": [
																	{
																		"nativeSrc": "4353:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4353:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4401:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4401:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4369:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "4369:31:1"
																			},
																			"nativeSrc": "4369:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4369:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4357:8:1",
																				"nodeType": "YulTypedName",
																				"src": "4357:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4420:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4420:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4443:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4443:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4471:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "4471:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4453:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "4453:17:1"
																					},
																					"nativeSrc": "4453:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4453:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4439:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4439:3:1"
																			},
																			"nativeSrc": "4439:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4439:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4424:11:1",
																				"nodeType": "YulTypedName",
																				"src": "4424:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4640:27:1",
																			"nodeType": "YulBlock",
																			"src": "4640:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4642:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4642:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4657:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4657:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4642:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4642:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4624:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4624:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4636:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4636:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4621:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4621:2:1"
																			},
																			"nativeSrc": "4621:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4621:18:1"
																		},
																		"nativeSrc": "4618:49:1",
																		"nodeType": "YulIf",
																		"src": "4618:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4709:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4709:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4726:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4726:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4754:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4754:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4736:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4736:17:1"
																							},
																							"nativeSrc": "4736:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4736:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4722:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4722:3:1"
																					},
																					"nativeSrc": "4722:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4722:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4680:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4680:28:1"
																			},
																			"nativeSrc": "4680:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4680:80:1"
																		},
																		"nativeSrc": "4680:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4680:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4330:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4330:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4335:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4327:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4327:2:1"
																},
																"nativeSrc": "4327:11:1",
																"nodeType": "YulFunctionCall",
																"src": "4327:11:1"
															},
															"nativeSrc": "4324:446:1",
															"nodeType": "YulIf",
															"src": "4324:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4234:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4289:5:1",
														"nodeType": "YulTypedName",
														"src": "4289:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4296:3:1",
														"nodeType": "YulTypedName",
														"src": "4296:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4301:10:1",
														"nodeType": "YulTypedName",
														"src": "4301:10:1",
														"type": ""
													}
												],
												"src": "4234:543:1"
											},
											{
												"body": {
													"nativeSrc": "4846:54:1",
													"nodeType": "YulBlock",
													"src": "4846:54:1",
													"statements": [
														{
															"nativeSrc": "4856:37:1",
															"nodeType": "YulAssignment",
															"src": "4856:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4881:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4881:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4887:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4887:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4877:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:1"
																},
																"nativeSrc": "4877:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4877:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4856:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4856:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4783:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4821:4:1",
														"nodeType": "YulTypedName",
														"src": "4821:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4827:5:1",
														"nodeType": "YulTypedName",
														"src": "4827:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4837:8:1",
														"nodeType": "YulTypedName",
														"src": "4837:8:1",
														"type": ""
													}
												],
												"src": "4783:117:1"
											},
											{
												"body": {
													"nativeSrc": "4957:118:1",
													"nodeType": "YulBlock",
													"src": "4957:118:1",
													"statements": [
														{
															"nativeSrc": "4967:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4967:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5016:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5016:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5019:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5019:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5012:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5012:3:1"
																				},
																				"nativeSrc": "5012:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5012:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5031:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5031:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5027:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:1"
																				},
																				"nativeSrc": "5027:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4983:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4983:28:1"
																		},
																		"nativeSrc": "4983:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4983:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4979:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:1"
																},
																"nativeSrc": "4979:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4979:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4971:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4971:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5044:25:1",
															"nodeType": "YulAssignment",
															"src": "5044:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5058:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5058:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5064:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5064:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5054:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:1"
																},
																"nativeSrc": "5054:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5054:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5044:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4906:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4934:4:1",
														"nodeType": "YulTypedName",
														"src": "4934:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4940:5:1",
														"nodeType": "YulTypedName",
														"src": "4940:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4950:6:1",
														"nodeType": "YulTypedName",
														"src": "4950:6:1",
														"type": ""
													}
												],
												"src": "4906:169:1"
											},
											{
												"body": {
													"nativeSrc": "5161:214:1",
													"nodeType": "YulBlock",
													"src": "5161:214:1",
													"statements": [
														{
															"nativeSrc": "5294:37:1",
															"nodeType": "YulAssignment",
															"src": "5294:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5321:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5321:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5327:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5327:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5302:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5302:18:1"
																},
																"nativeSrc": "5302:29:1",
																"nodeType": "YulFunctionCall",
																"src": "5302:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5294:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:1"
																}
															]
														},
														{
															"nativeSrc": "5340:29:1",
															"nodeType": "YulAssignment",
															"src": "5340:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5351:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5351:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5361:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5361:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5364:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5364:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5357:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:1"
																		},
																		"nativeSrc": "5357:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5348:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5348:2:1"
																},
																"nativeSrc": "5348:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5348:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5340:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5080:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5142:4:1",
														"nodeType": "YulTypedName",
														"src": "5142:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5148:3:1",
														"nodeType": "YulTypedName",
														"src": "5148:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5156:4:1",
														"nodeType": "YulTypedName",
														"src": "5156:4:1",
														"type": ""
													}
												],
												"src": "5080:295:1"
											},
											{
												"body": {
													"nativeSrc": "5472:1303:1",
													"nodeType": "YulBlock",
													"src": "5472:1303:1",
													"statements": [
														{
															"nativeSrc": "5483:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5483:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5530:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5530:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5497:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "5497:32:1"
																},
																"nativeSrc": "5497:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5497:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5487:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5487:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5619:22:1",
																"nodeType": "YulBlock",
																"src": "5619:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5621:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5621:16:1"
																			},
																			"nativeSrc": "5621:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5621:18:1"
																		},
																		"nativeSrc": "5621:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5621:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5591:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5599:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5599:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5588:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5588:2:1"
																},
																"nativeSrc": "5588:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5588:30:1"
															},
															"nativeSrc": "5585:56:1",
															"nodeType": "YulIf",
															"src": "5585:56:1"
														},
														{
															"nativeSrc": "5651:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5651:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5697:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5697:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5691:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:1"
																		},
																		"nativeSrc": "5691:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5691:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5665:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5665:25:1"
																},
																"nativeSrc": "5665:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5665:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5655:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5655:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5796:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5796:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5802:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5802:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5810:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5810:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5750:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5750:45:1"
																},
																"nativeSrc": "5750:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5750:67:1"
															},
															"nativeSrc": "5750:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5750:67:1"
														},
														{
															"nativeSrc": "5827:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5827:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5844:1:1",
																"nodeType": "YulLiteral",
																"src": "5844:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5831:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5831:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5855:17:1",
															"nodeType": "YulAssignment",
															"src": "5855:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5868:4:1",
																"nodeType": "YulLiteral",
																"src": "5868:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5855:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5855:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5919:611:1",
																		"nodeType": "YulBlock",
																		"src": "5919:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5933:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5933:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5952:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5952:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5964:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5964:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5960:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5960:3:1"
																							},
																							"nativeSrc": "5960:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5960:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5948:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5948:3:1"
																					},
																					"nativeSrc": "5948:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5948:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5937:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5937:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5984:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5984:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6030:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6030:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5998:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5998:31:1"
																					},
																					"nativeSrc": "5998:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5998:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5988:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5988:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6048:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6048:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6057:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6057:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6052:1:1",
																						"nodeType": "YulTypedName",
																						"src": "6052:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6116:163:1",
																					"nodeType": "YulBlock",
																					"src": "6116:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6141:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6141:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6159:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "6159:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6164:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "6164:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6155:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6155:3:1"
																												},
																												"nativeSrc": "6155:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6155:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6149:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "6149:5:1"
																										},
																										"nativeSrc": "6149:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6149:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6134:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6134:6:1"
																								},
																								"nativeSrc": "6134:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6134:42:1"
																							},
																							"nativeSrc": "6134:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6134:42:1"
																						},
																						{
																							"nativeSrc": "6193:24:1",
																							"nodeType": "YulAssignment",
																							"src": "6193:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6207:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6207:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6215:1:1",
																										"nodeType": "YulLiteral",
																										"src": "6215:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6203:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6203:3:1"
																								},
																								"nativeSrc": "6203:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6203:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6193:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6193:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6234:31:1",
																							"nodeType": "YulAssignment",
																							"src": "6234:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6251:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "6251:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6262:2:1",
																										"nodeType": "YulLiteral",
																										"src": "6262:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6247:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6247:3:1"
																								},
																								"nativeSrc": "6247:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6247:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6234:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "6234:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6082:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "6082:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6085:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "6085:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6079:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6079:2:1"
																					},
																					"nativeSrc": "6079:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:14:1"
																				},
																				"nativeSrc": "6071:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6094:21:1",
																					"nodeType": "YulBlock",
																					"src": "6094:21:1",
																					"statements": [
																						{
																							"nativeSrc": "6096:17:1",
																							"nodeType": "YulAssignment",
																							"src": "6096:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6105:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "6105:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6108:4:1",
																										"nodeType": "YulLiteral",
																										"src": "6108:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6101:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6101:3:1"
																								},
																								"nativeSrc": "6101:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6101:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6096:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "6096:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6075:3:1",
																					"nodeType": "YulBlock",
																					"src": "6075:3:1",
																					"statements": []
																				},
																				"src": "6071:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "6315:156:1",
																					"nodeType": "YulBlock",
																					"src": "6315:156:1",
																					"statements": [
																						{
																							"nativeSrc": "6333:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6333:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6360:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6360:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6365:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6365:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6356:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6356:3:1"
																										},
																										"nativeSrc": "6356:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6356:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6350:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6350:5:1"
																								},
																								"nativeSrc": "6350:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6350:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6337:9:1",
																									"nodeType": "YulTypedName",
																									"src": "6337:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6400:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6400:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6427:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6427:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6442:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "6442:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6450:4:1",
																														"nodeType": "YulLiteral",
																														"src": "6450:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6438:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6438:3:1"
																												},
																												"nativeSrc": "6438:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6438:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6408:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "6408:18:1"
																										},
																										"nativeSrc": "6408:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6408:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6393:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6393:6:1"
																								},
																								"nativeSrc": "6393:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6393:64:1"
																							},
																							"nativeSrc": "6393:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6393:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6298:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "6298:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6307:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "6307:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6295:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6295:2:1"
																					},
																					"nativeSrc": "6295:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6295:19:1"
																				},
																				"nativeSrc": "6292:179:1",
																				"nodeType": "YulIf",
																				"src": "6292:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6491:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6491:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6505:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "6505:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6513:1:1",
																											"nodeType": "YulLiteral",
																											"src": "6513:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6501:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6501:3:1"
																									},
																									"nativeSrc": "6501:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "6501:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6517:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6517:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6497:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6497:3:1"
																							},
																							"nativeSrc": "6497:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6497:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6484:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6484:6:1"
																					},
																					"nativeSrc": "6484:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6484:36:1"
																				},
																				"nativeSrc": "6484:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6484:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5912:618:1",
																	"nodeType": "YulCase",
																	"src": "5912:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5917:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5917:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6547:222:1",
																		"nodeType": "YulBlock",
																		"src": "6547:222:1",
																		"statements": [
																			{
																				"nativeSrc": "6561:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6561:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6574:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6574:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6565:5:1",
																						"nodeType": "YulTypedName",
																						"src": "6565:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6598:67:1",
																					"nodeType": "YulBlock",
																					"src": "6598:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6616:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6616:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6635:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6635:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6640:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6640:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6631:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6631:3:1"
																										},
																										"nativeSrc": "6631:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6631:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6625:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6625:5:1"
																								},
																								"nativeSrc": "6625:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6625:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6616:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6616:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6591:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6591:6:1"
																				},
																				"nativeSrc": "6588:77:1",
																				"nodeType": "YulIf",
																				"src": "6588:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6685:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6685:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6744:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6744:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6751:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6751:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6691:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6691:52:1"
																							},
																							"nativeSrc": "6691:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6691:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6678:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6678:6:1"
																					},
																					"nativeSrc": "6678:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6678:81:1"
																				},
																				"nativeSrc": "6678:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6678:81:1"
																			}
																		]
																	},
																	"nativeSrc": "6539:230:1",
																	"nodeType": "YulCase",
																	"src": "6539:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5892:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5900:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5900:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5889:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5889:2:1"
																},
																"nativeSrc": "5889:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5889:14:1"
															},
															"nativeSrc": "5882:887:1",
															"nodeType": "YulSwitch",
															"src": "5882:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5380:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5461:4:1",
														"nodeType": "YulTypedName",
														"src": "5461:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5467:3:1",
														"nodeType": "YulTypedName",
														"src": "5467:3:1",
														"type": ""
													}
												],
												"src": "5380:1395:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516127843803806127848339818101604052810190610031919061020b565b8060405180602001604052805f815250610050816100d760201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100b89190610245565b60405180910390fd5b6100d0816100ea60201b60201c565b5050610567565b80600290816100e69190610498565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101da826101b1565b9050919050565b6101ea816101d0565b81146101f4575f80fd5b50565b5f81519050610205816101e1565b92915050565b5f602082840312156102205761021f6101ad565b5b5f61022d848285016101f7565b91505092915050565b61023f816101d0565b82525050565b5f6020820190506102585f830184610236565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102d957607f821691505b6020821081036102ec576102eb610295565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610313565b6103588683610313565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61039c61039761039284610370565b610379565b610370565b9050919050565b5f819050919050565b6103b583610382565b6103c96103c1826103a3565b84845461031f565b825550505050565b5f90565b6103dd6103d1565b6103e88184846103ac565b505050565b5b8181101561040b576104005f826103d5565b6001810190506103ee565b5050565b601f82111561045057610421816102f2565b61042a84610304565b81016020851015610439578190505b61044d61044585610304565b8301826103ed565b50505b505050565b5f82821c905092915050565b5f6104705f1984600802610455565b1980831691505092915050565b5f6104888383610461565b9150826002028217905092915050565b6104a18261025e565b67ffffffffffffffff8111156104ba576104b9610268565b5b6104c482546102c2565b6104cf82828561040f565b5f60209050601f831160018114610500575f84156104ee578287015190505b6104f8858261047d565b86555061055f565b601f19841661050e866102f2565b5f5b8281101561053557848901518255600182019150602085019450602081019050610510565b86831015610552578489015161054e601f891682610461565b8355505b6001600288020188555050505b505050505050565b612210806105745f395ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c8063731133e91161006f578063731133e91461019b5780638da5cb5b146101b7578063a22cb465146101d5578063e985e9c5146101f1578063f242432a14610221578063f2fde38b1461023d576100b1565b8062fdd58e146100b557806301ffc9a7146100e55780630e89341c146101155780632eb2c2d6146101455780634e1273f414610161578063715018a614610191575b5f80fd5b6100cf60048036038101906100ca9190611633565b610259565b6040516100dc9190611680565b60405180910390f35b6100ff60048036038101906100fa91906116ee565b6102ae565b60405161010c9190611733565b60405180910390f35b61012f600480360381019061012a919061174c565b61038f565b60405161013c91906117e7565b60405180910390f35b61015f600480360381019061015a91906119f7565b610421565b005b61017b60048036038101906101769190611b82565b6104c8565b6040516101889190611caf565b60405180910390f35b6101996105cf565b005b6101b560048036038101906101b09190611ccf565b6105e2565b005b6101bf6105fc565b6040516101cc9190611d5e565b60405180910390f35b6101ef60048036038101906101ea9190611da1565b610624565b005b61020b60048036038101906102069190611ddf565b61063a565b6040516102189190611733565b60405180910390f35b61023b60048036038101906102369190611e1d565b6106c8565b005b61025760048036038101906102529190611eb0565b61076f565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037857507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103885750610387826107f3565b5b9050919050565b60606002805461039e90611f08565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca90611f08565b80156104155780601f106103ec57610100808354040283529160200191610415565b820191905f5260205f20905b8154815290600101906020018083116103f857829003601f168201915b50505050509050919050565b5f61042a61085c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561046f575061046d868261063a565b155b156104b35780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016104aa929190611f38565b60405180910390fd5b6104c08686868686610863565b505050505050565b6060815183511461051457815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161050b929190611f5f565b60405180910390fd5b5f835167ffffffffffffffff8111156105305761052f61180b565b5b60405190808252806020026020018201604052801561055e5781602001602082028036833780820191505090505b5090505f5b84518110156105c45761059a610582828761095790919063ffffffff16565b610595838761096a90919063ffffffff16565b610259565b8282815181106105ad576105ac611f86565b5b602002602001018181525050806001019050610563565b508091505092915050565b6105d761097d565b6105e05f610a04565b565b6105ea61097d565b6105f684848484610ac7565b50505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61063661062f61085c565b8383610b5c565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6106d161085c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156107165750610714868261063a565b155b1561075a5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610751929190611f38565b60405180910390fd5b6107678686868686610cc5565b505050505050565b61077761097d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107e7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107de9190611d5e565b60405180910390fd5b6107f081610a04565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108d3575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016108ca9190611d5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610943575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161093a9190611d5e565b60405180910390fd5b6109508585858585610dcb565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b61098561085c565b73ffffffffffffffffffffffffffffffffffffffff166109a36105fc565b73ffffffffffffffffffffffffffffffffffffffff1614610a02576109c661085c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109f99190611d5e565b60405180910390fd5b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b37575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b2e9190611d5e565b60405180910390fd5b5f80610b438585610e77565b91509150610b545f87848487610dcb565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bcc575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610bc39190611d5e565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cb89190611733565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d35575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610d2c9190611d5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610da5575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610d9c9190611d5e565b60405180910390fd5b5f80610db18585610e77565b91509150610dc28787848487610dcb565b50505050505050565b610dd785858585610ea7565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610e70575f610e1361085c565b90506001845103610e5f575f610e325f8661096a90919063ffffffff16565b90505f610e485f8661096a90919063ffffffff16565b9050610e58838989858589611237565b5050610e6e565b610e6d8187878787876113e6565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610ef157815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ee8929190611f5f565b60405180910390fd5b5f610efa61085c565b90505f5b83518110156110f6575f610f1b828661096a90919063ffffffff16565b90505f610f31838661096a90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611054575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561100057888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610ff79493929190611fb3565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146110e957805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110e19190612023565b925050819055505b5050806001019050610efe565b5060018351036111b1575f6111145f8561096a90919063ffffffff16565b90505f61112a5f8561096a90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516111a2929190611f5f565b60405180910390a45050611230565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611227929190612056565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156113de578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016112979594939291906120dd565b6020604051808303815f875af19250505080156112d257506040513d601f19601f820116820180604052508101906112cf9190612149565b60015b611353573d805f8114611300576040519150601f19603f3d011682016040523d82523d5f602084013e611305565b606091505b505f81510361134b57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113429190611d5e565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113dc57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113d39190611d5e565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561158d578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611446959493929190612174565b6020604051808303815f875af192505050801561148157506040513d601f19601f8201168201806040525081019061147e9190612149565b60015b611502573d805f81146114af576040519150601f19603f3d011682016040523d82523d5f602084013e6114b4565b606091505b505f8151036114fa57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114f19190611d5e565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461158b57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115829190611d5e565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115cf826115a6565b9050919050565b6115df816115c5565b81146115e9575f80fd5b50565b5f813590506115fa816115d6565b92915050565b5f819050919050565b61161281611600565b811461161c575f80fd5b50565b5f8135905061162d81611609565b92915050565b5f80604083850312156116495761164861159e565b5b5f611656858286016115ec565b92505060206116678582860161161f565b9150509250929050565b61167a81611600565b82525050565b5f6020820190506116935f830184611671565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116cd81611699565b81146116d7575f80fd5b50565b5f813590506116e8816116c4565b92915050565b5f602082840312156117035761170261159e565b5b5f611710848285016116da565b91505092915050565b5f8115159050919050565b61172d81611719565b82525050565b5f6020820190506117465f830184611724565b92915050565b5f602082840312156117615761176061159e565b5b5f61176e8482850161161f565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117b982611777565b6117c38185611781565b93506117d3818560208601611791565b6117dc8161179f565b840191505092915050565b5f6020820190508181035f8301526117ff81846117af565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6118418261179f565b810181811067ffffffffffffffff821117156118605761185f61180b565b5b80604052505050565b5f611872611595565b905061187e8282611838565b919050565b5f67ffffffffffffffff82111561189d5761189c61180b565b5b602082029050602081019050919050565b5f80fd5b5f6118c46118bf84611883565b611869565b905080838252602082019050602084028301858111156118e7576118e66118ae565b5b835b8181101561191057806118fc888261161f565b8452602084019350506020810190506118e9565b5050509392505050565b5f82601f83011261192e5761192d611807565b5b813561193e8482602086016118b2565b91505092915050565b5f80fd5b5f67ffffffffffffffff8211156119655761196461180b565b5b61196e8261179f565b9050602081019050919050565b828183375f83830152505050565b5f61199b6119968461194b565b611869565b9050828152602081018484840111156119b7576119b6611947565b5b6119c284828561197b565b509392505050565b5f82601f8301126119de576119dd611807565b5b81356119ee848260208601611989565b91505092915050565b5f805f805f60a08688031215611a1057611a0f61159e565b5b5f611a1d888289016115ec565b9550506020611a2e888289016115ec565b945050604086013567ffffffffffffffff811115611a4f57611a4e6115a2565b5b611a5b8882890161191a565b935050606086013567ffffffffffffffff811115611a7c57611a7b6115a2565b5b611a888882890161191a565b925050608086013567ffffffffffffffff811115611aa957611aa86115a2565b5b611ab5888289016119ca565b9150509295509295909350565b5f67ffffffffffffffff821115611adc57611adb61180b565b5b602082029050602081019050919050565b5f611aff611afa84611ac2565b611869565b90508083825260208201905060208402830185811115611b2257611b216118ae565b5b835b81811015611b4b5780611b3788826115ec565b845260208401935050602081019050611b24565b5050509392505050565b5f82601f830112611b6957611b68611807565b5b8135611b79848260208601611aed565b91505092915050565b5f8060408385031215611b9857611b9761159e565b5b5f83013567ffffffffffffffff811115611bb557611bb46115a2565b5b611bc185828601611b55565b925050602083013567ffffffffffffffff811115611be257611be16115a2565b5b611bee8582860161191a565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611c2a81611600565b82525050565b5f611c3b8383611c21565b60208301905092915050565b5f602082019050919050565b5f611c5d82611bf8565b611c678185611c02565b9350611c7283611c12565b805f5b83811015611ca2578151611c898882611c30565b9750611c9483611c47565b925050600181019050611c75565b5085935050505092915050565b5f6020820190508181035f830152611cc78184611c53565b905092915050565b5f805f8060808587031215611ce757611ce661159e565b5b5f611cf4878288016115ec565b9450506020611d058782880161161f565b9350506040611d168782880161161f565b925050606085013567ffffffffffffffff811115611d3757611d366115a2565b5b611d43878288016119ca565b91505092959194509250565b611d58816115c5565b82525050565b5f602082019050611d715f830184611d4f565b92915050565b611d8081611719565b8114611d8a575f80fd5b50565b5f81359050611d9b81611d77565b92915050565b5f8060408385031215611db757611db661159e565b5b5f611dc4858286016115ec565b9250506020611dd585828601611d8d565b9150509250929050565b5f8060408385031215611df557611df461159e565b5b5f611e02858286016115ec565b9250506020611e13858286016115ec565b9150509250929050565b5f805f805f60a08688031215611e3657611e3561159e565b5b5f611e43888289016115ec565b9550506020611e54888289016115ec565b9450506040611e658882890161161f565b9350506060611e768882890161161f565b925050608086013567ffffffffffffffff811115611e9757611e966115a2565b5b611ea3888289016119ca565b9150509295509295909350565b5f60208284031215611ec557611ec461159e565b5b5f611ed2848285016115ec565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f1f57607f821691505b602082108103611f3257611f31611edb565b5b50919050565b5f604082019050611f4b5f830185611d4f565b611f586020830184611d4f565b9392505050565b5f604082019050611f725f830185611671565b611f7f6020830184611671565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f608082019050611fc65f830187611d4f565b611fd36020830186611671565b611fe06040830185611671565b611fed6060830184611671565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61202d82611600565b915061203883611600565b92508282019050808211156120505761204f611ff6565b5b92915050565b5f6040820190508181035f83015261206e8185611c53565b905081810360208301526120828184611c53565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6120af8261208b565b6120b98185612095565b93506120c9818560208601611791565b6120d28161179f565b840191505092915050565b5f60a0820190506120f05f830188611d4f565b6120fd6020830187611d4f565b61210a6040830186611671565b6121176060830185611671565b818103608083015261212981846120a5565b90509695505050505050565b5f81519050612143816116c4565b92915050565b5f6020828403121561215e5761215d61159e565b5b5f61216b84828501612135565b91505092915050565b5f60a0820190506121875f830188611d4f565b6121946020830187611d4f565b81810360408301526121a68186611c53565b905081810360608301526121ba8185611c53565b905081810360808301526121ce81846120a5565b9050969550505050505056fea2646970667358221220196ba38f7cc4b4525a926acf6ca645f00c5a5ddb99bf7bed9940d6f1314fa5e464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2784 CODESIZE SUB DUP1 PUSH2 0x2784 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x50 DUP2 PUSH2 0xD7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD0 DUP2 PUSH2 0xEA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x567 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x498 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA DUP3 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA DUP2 PUSH2 0x1D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x205 DUP2 PUSH2 0x1E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220 JUMPI PUSH2 0x21F PUSH2 0x1AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22D DUP5 DUP3 DUP6 ADD PUSH2 0x1F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23F DUP2 PUSH2 0x1D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x258 PUSH0 DUP4 ADD DUP5 PUSH2 0x236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2D9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2EC JUMPI PUSH2 0x2EB PUSH2 0x295 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x313 JUMP JUMPDEST PUSH2 0x358 DUP7 DUP4 PUSH2 0x313 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x39C PUSH2 0x397 PUSH2 0x392 DUP5 PUSH2 0x370 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B5 DUP4 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x3C1 DUP3 PUSH2 0x3A3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x31F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x3E8 DUP2 DUP5 DUP5 PUSH2 0x3AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH2 0x400 PUSH0 DUP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x421 DUP2 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x42A DUP5 PUSH2 0x304 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x439 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x44D PUSH2 0x445 DUP6 PUSH2 0x304 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3ED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x470 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x455 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x488 DUP4 DUP4 PUSH2 0x461 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A1 DUP3 PUSH2 0x25E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4BA JUMPI PUSH2 0x4B9 PUSH2 0x268 JUMP JUMPDEST JUMPDEST PUSH2 0x4C4 DUP3 SLOAD PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x4CF DUP3 DUP3 DUP6 PUSH2 0x40F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x500 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4EE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4F8 DUP6 DUP3 PUSH2 0x47D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x50E DUP7 PUSH2 0x2F2 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x535 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x510 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x552 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x54E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x461 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2210 DUP1 PUSH2 0x574 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23D JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x17E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x5CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x378 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x388 JUMPI POP PUSH2 0x387 DUP3 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42A PUSH2 0x85C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI POP PUSH2 0x46D DUP7 DUP3 PUSH2 0x63A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x4B3 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C0 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x863 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x514 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP3 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x530 JUMPI PUSH2 0x52F PUSH2 0x180B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x55E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH2 0x59A PUSH2 0x582 DUP3 DUP8 PUSH2 0x957 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x595 DUP4 DUP8 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5AD JUMPI PUSH2 0x5AC PUSH2 0x1F86 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x563 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x5E0 PUSH0 PUSH2 0xA04 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x97D JUMP JUMPDEST PUSH2 0x5F6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAC7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x636 PUSH2 0x62F PUSH2 0x85C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB5C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6D1 PUSH2 0x85C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI POP PUSH2 0x714 DUP7 DUP3 PUSH2 0x63A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x75A JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x767 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xCC5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x777 PUSH2 0x97D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F0 DUP2 PUSH2 0xA04 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x943 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x950 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xDCB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x985 PUSH2 0x85C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9A3 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA02 JUMPI PUSH2 0x9C6 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xB43 DUP6 DUP6 PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xB54 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xDCB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9C SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xDB1 DUP6 DUP6 PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDC2 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xDCB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDD7 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEA7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE70 JUMPI PUSH0 PUSH2 0xE13 PUSH2 0x85C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xE5F JUMPI PUSH0 PUSH2 0xE32 PUSH0 DUP7 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE48 PUSH0 DUP7 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE58 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1237 JUMP JUMPDEST POP POP PUSH2 0xE6E JUMP JUMPDEST PUSH2 0xE6D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x13E6 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xEF1 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xEFA PUSH2 0x85C JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x10F6 JUMPI PUSH0 PUSH2 0xF1B DUP3 DUP7 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF31 DUP4 DUP7 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1054 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1000 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E9 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x2023 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xEFE JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x11B1 JUMPI PUSH0 PUSH2 0x1114 PUSH0 DUP6 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x112A PUSH0 DUP6 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x11A2 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1230 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1227 SWAP3 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13DE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12CF SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1353 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1300 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x134B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13DC JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x158D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1446 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1481 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x147E SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1502 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x14FA JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x158B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1582 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15CF DUP3 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DF DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FA DUP2 PUSH2 0x15D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1612 DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP2 EQ PUSH2 0x161C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x1609 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1656 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1667 DUP6 DUP3 DUP7 ADD PUSH2 0x161F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x167A DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1693 PUSH0 DUP4 ADD DUP5 PUSH2 0x1671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CD DUP2 PUSH2 0x1699 JUMP JUMPDEST DUP2 EQ PUSH2 0x16D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E8 DUP2 PUSH2 0x16C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1710 DUP5 DUP3 DUP6 ADD PUSH2 0x16DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172D DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1746 PUSH0 DUP4 ADD DUP5 PUSH2 0x1724 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176E DUP5 DUP3 DUP6 ADD PUSH2 0x161F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B9 DUP3 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x17C3 DUP2 DUP6 PUSH2 0x1781 JUMP JUMPDEST SWAP4 POP PUSH2 0x17D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x17DC DUP2 PUSH2 0x179F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17FF DUP2 DUP5 PUSH2 0x17AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1841 DUP3 PUSH2 0x179F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x180B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1872 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP PUSH2 0x187E DUP3 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x180B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x18C4 PUSH2 0x18BF DUP5 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x1869 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18E7 JUMPI PUSH2 0x18E6 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1910 JUMPI DUP1 PUSH2 0x18FC DUP9 DUP3 PUSH2 0x161F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18E9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x1807 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x193E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1965 JUMPI PUSH2 0x1964 PUSH2 0x180B JUMP JUMPDEST JUMPDEST PUSH2 0x196E DUP3 PUSH2 0x179F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x199B PUSH2 0x1996 DUP5 PUSH2 0x194B JUMP JUMPDEST PUSH2 0x1869 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19B7 JUMPI PUSH2 0x19B6 PUSH2 0x1947 JUMP JUMPDEST JUMPDEST PUSH2 0x19C2 DUP5 DUP3 DUP6 PUSH2 0x197B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19DE JUMPI PUSH2 0x19DD PUSH2 0x1807 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1D DUP9 DUP3 DUP10 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A2E DUP9 DUP3 DUP10 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1A5B DUP9 DUP3 DUP10 ADD PUSH2 0x191A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A7C JUMPI PUSH2 0x1A7B PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1A88 DUP9 DUP3 DUP10 ADD PUSH2 0x191A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1AB5 DUP9 DUP3 DUP10 ADD PUSH2 0x19CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ADC JUMPI PUSH2 0x1ADB PUSH2 0x180B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFF PUSH2 0x1AFA DUP5 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x1869 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B22 JUMPI PUSH2 0x1B21 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B4B JUMPI DUP1 PUSH2 0x1B37 DUP9 DUP3 PUSH2 0x15EC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B24 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B69 JUMPI PUSH2 0x1B68 PUSH2 0x1807 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B79 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B98 JUMPI PUSH2 0x1B97 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB5 JUMPI PUSH2 0x1BB4 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1BC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BE2 JUMPI PUSH2 0x1BE1 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1BEE DUP6 DUP3 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2A DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3B DUP4 DUP4 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5D DUP3 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x1C67 DUP2 DUP6 PUSH2 0x1C02 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C72 DUP4 PUSH2 0x1C12 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CA2 JUMPI DUP2 MLOAD PUSH2 0x1C89 DUP9 DUP3 PUSH2 0x1C30 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C94 DUP4 PUSH2 0x1C47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C75 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC7 DUP2 DUP5 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE7 JUMPI PUSH2 0x1CE6 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF4 DUP8 DUP3 DUP9 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D05 DUP8 DUP3 DUP9 ADD PUSH2 0x161F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D16 DUP8 DUP3 DUP9 ADD PUSH2 0x161F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D37 JUMPI PUSH2 0x1D36 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1D43 DUP8 DUP3 DUP9 ADD PUSH2 0x19CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1D58 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D71 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9B DUP2 PUSH2 0x1D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB7 JUMPI PUSH2 0x1DB6 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC4 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD5 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF5 JUMPI PUSH2 0x1DF4 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E02 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E13 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E36 JUMPI PUSH2 0x1E35 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E43 DUP9 DUP3 DUP10 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E54 DUP9 DUP3 DUP10 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E65 DUP9 DUP3 DUP10 ADD PUSH2 0x161F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1E76 DUP9 DUP3 DUP10 ADD PUSH2 0x161F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E97 JUMPI PUSH2 0x1E96 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1EA3 DUP9 DUP3 DUP10 ADD PUSH2 0x19CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED2 DUP5 DUP3 DUP6 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F1F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x1EDB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F4B PUSH0 DUP4 ADD DUP6 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1F58 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F72 PUSH0 DUP4 ADD DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1F7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1671 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FC6 PUSH0 DUP4 ADD DUP8 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1FD3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1FE0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1FED PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1671 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x202D DUP3 PUSH2 0x1600 JUMP JUMPDEST SWAP2 POP PUSH2 0x2038 DUP4 PUSH2 0x1600 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2050 JUMPI PUSH2 0x204F PUSH2 0x1FF6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x206E DUP2 DUP6 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2082 DUP2 DUP5 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20AF DUP3 PUSH2 0x208B JUMP JUMPDEST PUSH2 0x20B9 DUP2 DUP6 PUSH2 0x2095 JUMP JUMPDEST SWAP4 POP PUSH2 0x20C9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x20D2 DUP2 PUSH2 0x179F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x20F0 PUSH0 DUP4 ADD DUP9 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x20FD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x210A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x2117 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1671 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2129 DUP2 DUP5 PUSH2 0x20A5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2143 DUP2 PUSH2 0x16C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215E JUMPI PUSH2 0x215D PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x216B DUP5 DUP3 DUP6 ADD PUSH2 0x2135 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2187 PUSH0 DUP4 ADD DUP9 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x2194 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D4F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x21A6 DUP2 DUP7 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x21BA DUP2 DUP6 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x21CE DUP2 DUP5 PUSH2 0x20A5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH12 0xA38F7CC4B4525A926ACF6CA6 GASLIMIT CREATE 0xC GAS TSTORE 0xDB SWAP10 0xBF PUSH28 0xED9940D6F1314FA5E464736F6C634300081A00330000000000000000 ",
							"sourceMap": "60961:300:0:-:0;;;61019:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;61073:12;42134:62;;;;;;;;;;;;42176:13;42184:4;42176:7;;;:13;;:::i;:::-;42134:62;59089:1;59065:26;;:12;:26;;;59061:95;;59142:1;59114:31;;;;;;;;;;;:::i;:::-;;;;;;;;59061:95;59165:32;59184:12;59165:18;;;:32;;:::i;:::-;59017:187;61019:70;60961:300;;51165:86;51238:6;51231:4;:13;;;;;;:::i;:::-;;51165:86;:::o;60704:187::-;60777:16;60796:6;;;;;;;;;;;60777:25;;60821:8;60812:6;;:17;;;;;;;;;;;;;;;;;;60875:8;60844:40;;60865:8;60844:40;;;;;;;;;;;;60767:124;60704:187;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:99::-;1606:6;1640:5;1634:12;1624:22;;1554:99;;;:::o;1659:180::-;1707:77;1704:1;1697:88;1804:4;1801:1;1794:15;1828:4;1825:1;1818:15;1845:180;1893:77;1890:1;1883:88;1990:4;1987:1;1980:15;2014:4;2011:1;2004:15;2031:320;2075:6;2112:1;2106:4;2102:12;2092:22;;2159:1;2153:4;2149:12;2180:18;2170:81;;2236:4;2228:6;2224:17;2214:27;;2170:81;2298:2;2290:6;2287:14;2267:18;2264:38;2261:84;;2317:18;;:::i;:::-;2261:84;2082:269;2031:320;;;:::o;2357:141::-;2406:4;2429:3;2421:11;;2452:3;2449:1;2442:14;2486:4;2483:1;2473:18;2465:26;;2357:141;;;:::o;2504:93::-;2541:6;2588:2;2583;2576:5;2572:14;2568:23;2558:33;;2504:93;;;:::o;2603:107::-;2647:8;2697:5;2691:4;2687:16;2666:37;;2603:107;;;;:::o;2716:393::-;2785:6;2835:1;2823:10;2819:18;2858:97;2888:66;2877:9;2858:97;:::i;:::-;2976:39;3006:8;2995:9;2976:39;:::i;:::-;2964:51;;3048:4;3044:9;3037:5;3033:21;3024:30;;3097:4;3087:8;3083:19;3076:5;3073:30;3063:40;;2792:317;;2716:393;;;;;:::o;3115:77::-;3152:7;3181:5;3170:16;;3115:77;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;60961:300:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_2743": {
									"entryPoint": 3703,
									"id": 2743,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_checkOwner_2826": {
									"entryPoint": 2429,
									"id": 2826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_2727": {
									"entryPoint": 5094,
									"id": 2727,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_2657": {
									"entryPoint": 4663,
									"id": 2657,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_2419": {
									"entryPoint": 2759,
									"id": 2419,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_194": {
									"entryPoint": 2140,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_2356": {
									"entryPoint": 2147,
									"id": 2356,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_2301": {
									"entryPoint": 3269,
									"id": 2301,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2589": {
									"entryPoint": 2908,
									"id": 2589,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_2888": {
									"entryPoint": 2564,
									"id": 2888,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_2235": {
									"entryPoint": 3531,
									"id": 2235,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_2159": {
									"entryPoint": 3751,
									"id": 2159,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_1883": {
									"entryPoint": 1224,
									"id": 1883,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1813": {
									"entryPoint": 601,
									"id": 1813,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_1916": {
									"entryPoint": 1594,
									"id": 1916,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_2927": {
									"entryPoint": 1506,
									"id": 2927,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_2809": {
									"entryPoint": 1532,
									"id": 2809,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_2840": {
									"entryPoint": 1487,
									"id": 2840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_2006": {
									"entryPoint": 1057,
									"id": 2006,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_1960": {
									"entryPoint": 1736,
									"id": 1960,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_1899": {
									"entryPoint": 1572,
									"id": 1899,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1785": {
									"entryPoint": 686,
									"id": 1785,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_232": {
									"entryPoint": 2035,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_2868": {
									"entryPoint": 1903,
									"id": 2868,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1559": {
									"entryPoint": 2410,
									"id": 1559,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1572": {
									"entryPoint": 2391,
									"id": 1572,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_1796": {
									"entryPoint": 911,
									"id": 1796,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6322,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6537,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7992,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8115,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8278,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 8182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6471,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24201:1",
										"nodeType": "YulBlock",
										"src": "0:24201:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "886:32:1",
													"nodeType": "YulBlock",
													"src": "886:32:1",
													"statements": [
														{
															"nativeSrc": "896:16:1",
															"nodeType": "YulAssignment",
															"src": "896:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:1",
																"nodeType": "YulIdentifier",
																"src": "907:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:1",
														"nodeType": "YulTypedName",
														"src": "868:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:1",
														"nodeType": "YulTypedName",
														"src": "878:7:1",
														"type": ""
													}
												],
												"src": "841:77:1"
											},
											{
												"body": {
													"nativeSrc": "967:79:1",
													"nodeType": "YulBlock",
													"src": "967:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:1",
																"nodeType": "YulBlock",
																"src": "1024:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:1"
																			},
																			"nativeSrc": "1026:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:1"
																		},
																		"nativeSrc": "1026:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:1"
																				},
																				"nativeSrc": "997:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:1"
																		},
																		"nativeSrc": "987:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:1"
																},
																"nativeSrc": "980:43:1",
																"nodeType": "YulFunctionCall",
																"src": "980:43:1"
															},
															"nativeSrc": "977:63:1",
															"nodeType": "YulIf",
															"src": "977:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:1",
														"nodeType": "YulTypedName",
														"src": "960:5:1",
														"type": ""
													}
												],
												"src": "924:122:1"
											},
											{
												"body": {
													"nativeSrc": "1104:87:1",
													"nodeType": "YulBlock",
													"src": "1104:87:1",
													"statements": [
														{
															"nativeSrc": "1114:29:1",
															"nodeType": "YulAssignment",
															"src": "1114:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:1"
																},
																"nativeSrc": "1123:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:1"
																},
																"nativeSrc": "1152:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:1"
															},
															"nativeSrc": "1152:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:1",
														"nodeType": "YulTypedName",
														"src": "1082:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:1",
														"nodeType": "YulTypedName",
														"src": "1090:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:1",
														"nodeType": "YulTypedName",
														"src": "1098:5:1",
														"type": ""
													}
												],
												"src": "1052:139:1"
											},
											{
												"body": {
													"nativeSrc": "1280:391:1",
													"nodeType": "YulBlock",
													"src": "1280:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:1",
																"nodeType": "YulBlock",
																"src": "1326:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:1"
																			},
																			"nativeSrc": "1328:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:1"
																		},
																		"nativeSrc": "1328:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:1"
																		},
																		"nativeSrc": "1297:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:1"
																},
																"nativeSrc": "1293:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:1"
															},
															"nativeSrc": "1290:119:1",
															"nodeType": "YulIf",
															"src": "1290:119:1"
														},
														{
															"nativeSrc": "1419:117:1",
															"nodeType": "YulBlock",
															"src": "1419:117:1",
															"statements": [
																{
																	"nativeSrc": "1434:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:1"
																				},
																				"nativeSrc": "1494:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:1"
																		},
																		"nativeSrc": "1473:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:1",
															"nodeType": "YulBlock",
															"src": "1546:118:1",
															"statements": [
																{
																	"nativeSrc": "1561:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:1"
																				},
																				"nativeSrc": "1622:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:1"
																		},
																		"nativeSrc": "1601:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:1",
														"nodeType": "YulTypedName",
														"src": "1242:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:1",
														"nodeType": "YulTypedName",
														"src": "1253:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:1",
														"nodeType": "YulTypedName",
														"src": "1265:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:1",
														"nodeType": "YulTypedName",
														"src": "1273:6:1",
														"type": ""
													}
												],
												"src": "1197:474:1"
											},
											{
												"body": {
													"nativeSrc": "1742:53:1",
													"nodeType": "YulBlock",
													"src": "1742:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:1"
																		},
																		"nativeSrc": "1764:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:1"
																},
																"nativeSrc": "1752:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:1"
															},
															"nativeSrc": "1752:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:1",
														"nodeType": "YulTypedName",
														"src": "1730:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:1",
														"nodeType": "YulTypedName",
														"src": "1737:3:1",
														"type": ""
													}
												],
												"src": "1677:118:1"
											},
											{
												"body": {
													"nativeSrc": "1899:124:1",
													"nodeType": "YulBlock",
													"src": "1899:124:1",
													"statements": [
														{
															"nativeSrc": "1909:26:1",
															"nodeType": "YulAssignment",
															"src": "1909:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:1"
																},
																"nativeSrc": "1917:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:1"
																		},
																		"nativeSrc": "1998:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:1"
																},
																"nativeSrc": "1945:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:1"
															},
															"nativeSrc": "1945:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:1",
														"nodeType": "YulTypedName",
														"src": "1871:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:1",
														"nodeType": "YulTypedName",
														"src": "1883:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:1",
														"nodeType": "YulTypedName",
														"src": "1894:4:1",
														"type": ""
													}
												],
												"src": "1801:222:1"
											},
											{
												"body": {
													"nativeSrc": "2073:105:1",
													"nodeType": "YulBlock",
													"src": "2073:105:1",
													"statements": [
														{
															"nativeSrc": "2083:89:1",
															"nodeType": "YulAssignment",
															"src": "2083:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:1"
																},
																"nativeSrc": "2094:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:1",
														"nodeType": "YulTypedName",
														"src": "2055:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:1",
														"nodeType": "YulTypedName",
														"src": "2065:7:1",
														"type": ""
													}
												],
												"src": "2029:149:1"
											},
											{
												"body": {
													"nativeSrc": "2226:78:1",
													"nodeType": "YulBlock",
													"src": "2226:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:1",
																"nodeType": "YulBlock",
																"src": "2282:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:1"
																			},
																			"nativeSrc": "2284:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:1"
																		},
																		"nativeSrc": "2284:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:1"
																				},
																				"nativeSrc": "2256:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:1"
																		},
																		"nativeSrc": "2246:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:1"
																},
																"nativeSrc": "2239:42:1",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:1"
															},
															"nativeSrc": "2236:62:1",
															"nodeType": "YulIf",
															"src": "2236:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:1",
														"nodeType": "YulTypedName",
														"src": "2219:5:1",
														"type": ""
													}
												],
												"src": "2184:120:1"
											},
											{
												"body": {
													"nativeSrc": "2361:86:1",
													"nodeType": "YulBlock",
													"src": "2361:86:1",
													"statements": [
														{
															"nativeSrc": "2371:29:1",
															"nodeType": "YulAssignment",
															"src": "2371:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:1"
																},
																"nativeSrc": "2380:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:1"
																},
																"nativeSrc": "2409:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:1"
															},
															"nativeSrc": "2409:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:1",
														"nodeType": "YulTypedName",
														"src": "2339:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:1",
														"nodeType": "YulTypedName",
														"src": "2347:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:1",
														"nodeType": "YulTypedName",
														"src": "2355:5:1",
														"type": ""
													}
												],
												"src": "2310:137:1"
											},
											{
												"body": {
													"nativeSrc": "2518:262:1",
													"nodeType": "YulBlock",
													"src": "2518:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:1",
																"nodeType": "YulBlock",
																"src": "2564:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:1"
																			},
																			"nativeSrc": "2566:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:1"
																		},
																		"nativeSrc": "2566:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:1"
																		},
																		"nativeSrc": "2535:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:1"
																},
																"nativeSrc": "2531:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:1"
															},
															"nativeSrc": "2528:119:1",
															"nodeType": "YulIf",
															"src": "2528:119:1"
														},
														{
															"nativeSrc": "2657:116:1",
															"nodeType": "YulBlock",
															"src": "2657:116:1",
															"statements": [
																{
																	"nativeSrc": "2672:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:1",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:1"
																				},
																				"nativeSrc": "2731:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:1"
																		},
																		"nativeSrc": "2711:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:1",
														"nodeType": "YulTypedName",
														"src": "2488:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:1",
														"nodeType": "YulTypedName",
														"src": "2499:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:1",
														"nodeType": "YulTypedName",
														"src": "2511:6:1",
														"type": ""
													}
												],
												"src": "2453:327:1"
											},
											{
												"body": {
													"nativeSrc": "2828:48:1",
													"nodeType": "YulBlock",
													"src": "2828:48:1",
													"statements": [
														{
															"nativeSrc": "2838:32:1",
															"nodeType": "YulAssignment",
															"src": "2838:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:1"
																		},
																		"nativeSrc": "2856:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:1"
																},
																"nativeSrc": "2849:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:1",
														"nodeType": "YulTypedName",
														"src": "2810:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:1",
														"nodeType": "YulTypedName",
														"src": "2820:7:1",
														"type": ""
													}
												],
												"src": "2786:90:1"
											},
											{
												"body": {
													"nativeSrc": "2941:50:1",
													"nodeType": "YulBlock",
													"src": "2941:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:1"
																		},
																		"nativeSrc": "2963:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:1"
																},
																"nativeSrc": "2951:34:1",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:1"
															},
															"nativeSrc": "2951:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:1",
														"nodeType": "YulTypedName",
														"src": "2929:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:1",
														"nodeType": "YulTypedName",
														"src": "2936:3:1",
														"type": ""
													}
												],
												"src": "2882:109:1"
											},
											{
												"body": {
													"nativeSrc": "3089:118:1",
													"nodeType": "YulBlock",
													"src": "3089:118:1",
													"statements": [
														{
															"nativeSrc": "3099:26:1",
															"nodeType": "YulAssignment",
															"src": "3099:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:1"
																},
																"nativeSrc": "3107:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:1"
																		},
																		"nativeSrc": "3182:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:1"
																},
																"nativeSrc": "3135:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:1"
															},
															"nativeSrc": "3135:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:1",
														"nodeType": "YulTypedName",
														"src": "3061:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:1",
														"nodeType": "YulTypedName",
														"src": "3073:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:1",
														"nodeType": "YulTypedName",
														"src": "3084:4:1",
														"type": ""
													}
												],
												"src": "2997:210:1"
											},
											{
												"body": {
													"nativeSrc": "3279:263:1",
													"nodeType": "YulBlock",
													"src": "3279:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:1",
																"nodeType": "YulBlock",
																"src": "3325:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:1"
																			},
																			"nativeSrc": "3327:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:1"
																		},
																		"nativeSrc": "3327:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:1"
																		},
																		"nativeSrc": "3296:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:1"
																},
																"nativeSrc": "3292:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:1"
															},
															"nativeSrc": "3289:119:1",
															"nodeType": "YulIf",
															"src": "3289:119:1"
														},
														{
															"nativeSrc": "3418:117:1",
															"nodeType": "YulBlock",
															"src": "3418:117:1",
															"statements": [
																{
																	"nativeSrc": "3433:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:1"
																				},
																				"nativeSrc": "3493:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3472:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:1"
																		},
																		"nativeSrc": "3472:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3213:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:1",
														"nodeType": "YulTypedName",
														"src": "3249:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:1",
														"nodeType": "YulTypedName",
														"src": "3260:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:1",
														"nodeType": "YulTypedName",
														"src": "3272:6:1",
														"type": ""
													}
												],
												"src": "3213:329:1"
											},
											{
												"body": {
													"nativeSrc": "3607:40:1",
													"nodeType": "YulBlock",
													"src": "3607:40:1",
													"statements": [
														{
															"nativeSrc": "3618:22:1",
															"nodeType": "YulAssignment",
															"src": "3618:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3634:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3628:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:1"
																},
																"nativeSrc": "3628:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3628:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3618:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3548:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3590:5:1",
														"nodeType": "YulTypedName",
														"src": "3590:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3600:6:1",
														"nodeType": "YulTypedName",
														"src": "3600:6:1",
														"type": ""
													}
												],
												"src": "3548:99:1"
											},
											{
												"body": {
													"nativeSrc": "3749:73:1",
													"nodeType": "YulBlock",
													"src": "3749:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3766:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3771:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:1"
																},
																"nativeSrc": "3759:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3759:19:1"
															},
															"nativeSrc": "3759:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:1"
														},
														{
															"nativeSrc": "3787:29:1",
															"nodeType": "YulAssignment",
															"src": "3787:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3806:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3811:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3802:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:1"
																},
																"nativeSrc": "3802:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3802:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3787:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3653:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3721:3:1",
														"nodeType": "YulTypedName",
														"src": "3721:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3726:6:1",
														"nodeType": "YulTypedName",
														"src": "3726:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3737:11:1",
														"nodeType": "YulTypedName",
														"src": "3737:11:1",
														"type": ""
													}
												],
												"src": "3653:169:1"
											},
											{
												"body": {
													"nativeSrc": "3890:77:1",
													"nodeType": "YulBlock",
													"src": "3890:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3907:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3907:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3912:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3912:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3917:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3917:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3901:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:1"
																},
																"nativeSrc": "3901:23:1",
																"nodeType": "YulFunctionCall",
																"src": "3901:23:1"
															},
															"nativeSrc": "3901:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "3901:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3944:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3944:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3949:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3949:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3940:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3940:3:1"
																		},
																		"nativeSrc": "3940:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3940:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3958:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3958:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3933:6:1"
																},
																"nativeSrc": "3933:27:1",
																"nodeType": "YulFunctionCall",
																"src": "3933:27:1"
															},
															"nativeSrc": "3933:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "3933:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3828:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3872:3:1",
														"nodeType": "YulTypedName",
														"src": "3872:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3877:3:1",
														"nodeType": "YulTypedName",
														"src": "3877:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3882:6:1",
														"nodeType": "YulTypedName",
														"src": "3882:6:1",
														"type": ""
													}
												],
												"src": "3828:139:1"
											},
											{
												"body": {
													"nativeSrc": "4021:54:1",
													"nodeType": "YulBlock",
													"src": "4021:54:1",
													"statements": [
														{
															"nativeSrc": "4031:38:1",
															"nodeType": "YulAssignment",
															"src": "4031:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4049:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4049:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4056:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4056:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4045:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4045:3:1"
																		},
																		"nativeSrc": "4045:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4045:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4065:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4065:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4061:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:1"
																		},
																		"nativeSrc": "4061:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4041:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:3:1"
																},
																"nativeSrc": "4041:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4031:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3973:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4004:5:1",
														"nodeType": "YulTypedName",
														"src": "4004:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4014:6:1",
														"nodeType": "YulTypedName",
														"src": "4014:6:1",
														"type": ""
													}
												],
												"src": "3973:102:1"
											},
											{
												"body": {
													"nativeSrc": "4173:285:1",
													"nodeType": "YulBlock",
													"src": "4173:285:1",
													"statements": [
														{
															"nativeSrc": "4183:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4183:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4230:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4230:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4197:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "4197:32:1"
																},
																"nativeSrc": "4197:39:1",
																"nodeType": "YulFunctionCall",
																"src": "4197:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4187:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4187:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4245:78:1",
															"nodeType": "YulAssignment",
															"src": "4245:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4311:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4311:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4316:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4316:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4252:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "4252:58:1"
																},
																"nativeSrc": "4252:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4252:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4245:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4371:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4371:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4378:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4378:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4367:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:1"
																		},
																		"nativeSrc": "4367:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4367:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4385:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4385:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4390:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4390:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4332:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "4332:34:1"
																},
																"nativeSrc": "4332:65:1",
																"nodeType": "YulFunctionCall",
																"src": "4332:65:1"
															},
															"nativeSrc": "4332:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "4332:65:1"
														},
														{
															"nativeSrc": "4406:46:1",
															"nodeType": "YulAssignment",
															"src": "4406:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4417:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4417:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4444:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4444:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4422:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "4422:21:1"
																		},
																		"nativeSrc": "4422:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4422:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4413:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:1"
																},
																"nativeSrc": "4413:39:1",
																"nodeType": "YulFunctionCall",
																"src": "4413:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4406:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4406:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4081:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4154:5:1",
														"nodeType": "YulTypedName",
														"src": "4154:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4161:3:1",
														"nodeType": "YulTypedName",
														"src": "4161:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4169:3:1",
														"nodeType": "YulTypedName",
														"src": "4169:3:1",
														"type": ""
													}
												],
												"src": "4081:377:1"
											},
											{
												"body": {
													"nativeSrc": "4582:195:1",
													"nodeType": "YulBlock",
													"src": "4582:195:1",
													"statements": [
														{
															"nativeSrc": "4592:26:1",
															"nodeType": "YulAssignment",
															"src": "4592:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4604:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4604:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4615:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4600:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4600:3:1"
																},
																"nativeSrc": "4600:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4600:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4592:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4592:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4639:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4650:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4650:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4635:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:1"
																		},
																		"nativeSrc": "4635:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4658:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4658:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4664:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4654:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4654:3:1"
																		},
																		"nativeSrc": "4654:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4654:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:1"
																},
																"nativeSrc": "4628:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4628:47:1"
															},
															"nativeSrc": "4628:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4628:47:1"
														},
														{
															"nativeSrc": "4684:86:1",
															"nodeType": "YulAssignment",
															"src": "4684:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4756:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4756:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4765:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4692:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:63:1"
																},
																"nativeSrc": "4692:78:1",
																"nodeType": "YulFunctionCall",
																"src": "4692:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4684:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4684:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4464:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4554:9:1",
														"nodeType": "YulTypedName",
														"src": "4554:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4566:6:1",
														"nodeType": "YulTypedName",
														"src": "4566:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4577:4:1",
														"nodeType": "YulTypedName",
														"src": "4577:4:1",
														"type": ""
													}
												],
												"src": "4464:313:1"
											},
											{
												"body": {
													"nativeSrc": "4872:28:1",
													"nodeType": "YulBlock",
													"src": "4872:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4889:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4889:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4892:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4892:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:1"
																},
																"nativeSrc": "4882:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4882:12:1"
															},
															"nativeSrc": "4882:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "4882:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4783:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4783:117:1"
											},
											{
												"body": {
													"nativeSrc": "4934:152:1",
													"nodeType": "YulBlock",
													"src": "4934:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4951:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4951:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4954:77:1",
																		"nodeType": "YulLiteral",
																		"src": "4954:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4944:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4944:6:1"
																},
																"nativeSrc": "4944:88:1",
																"nodeType": "YulFunctionCall",
																"src": "4944:88:1"
															},
															"nativeSrc": "4944:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "4944:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5048:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5048:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5051:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5051:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5041:6:1"
																},
																"nativeSrc": "5041:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5041:15:1"
															},
															"nativeSrc": "5041:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5041:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5072:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5072:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5075:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5075:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5065:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5065:6:1"
																},
																"nativeSrc": "5065:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5065:15:1"
															},
															"nativeSrc": "5065:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5065:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4906:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4906:180:1"
											},
											{
												"body": {
													"nativeSrc": "5135:238:1",
													"nodeType": "YulBlock",
													"src": "5135:238:1",
													"statements": [
														{
															"nativeSrc": "5145:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5145:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5167:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5167:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5197:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5197:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5175:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "5175:21:1"
																		},
																		"nativeSrc": "5175:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5175:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5163:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5163:3:1"
																},
																"nativeSrc": "5163:40:1",
																"nodeType": "YulFunctionCall",
																"src": "5163:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5149:10:1",
																	"nodeType": "YulTypedName",
																	"src": "5149:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5314:22:1",
																"nodeType": "YulBlock",
																"src": "5314:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5316:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5316:16:1"
																			},
																			"nativeSrc": "5316:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5316:18:1"
																		},
																		"nativeSrc": "5316:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5316:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5257:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "5257:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5269:18:1",
																				"nodeType": "YulLiteral",
																				"src": "5269:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5254:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5254:2:1"
																		},
																		"nativeSrc": "5254:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5254:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5293:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "5293:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5305:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5305:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5290:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5290:2:1"
																		},
																		"nativeSrc": "5290:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5290:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5251:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5251:2:1"
																},
																"nativeSrc": "5251:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5251:62:1"
															},
															"nativeSrc": "5248:88:1",
															"nodeType": "YulIf",
															"src": "5248:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5352:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5352:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5356:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "5356:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:1"
																},
																"nativeSrc": "5345:22:1",
																"nodeType": "YulFunctionCall",
																"src": "5345:22:1"
															},
															"nativeSrc": "5345:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "5345:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5092:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5121:6:1",
														"nodeType": "YulTypedName",
														"src": "5121:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5129:4:1",
														"nodeType": "YulTypedName",
														"src": "5129:4:1",
														"type": ""
													}
												],
												"src": "5092:281:1"
											},
											{
												"body": {
													"nativeSrc": "5420:88:1",
													"nodeType": "YulBlock",
													"src": "5420:88:1",
													"statements": [
														{
															"nativeSrc": "5430:30:1",
															"nodeType": "YulAssignment",
															"src": "5430:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5440:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5440:18:1"
																},
																"nativeSrc": "5440:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5440:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5430:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5430:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5489:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5489:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5497:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5497:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5469:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "5469:19:1"
																},
																"nativeSrc": "5469:33:1",
																"nodeType": "YulFunctionCall",
																"src": "5469:33:1"
															},
															"nativeSrc": "5469:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "5469:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5379:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5404:4:1",
														"nodeType": "YulTypedName",
														"src": "5404:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5413:6:1",
														"nodeType": "YulTypedName",
														"src": "5413:6:1",
														"type": ""
													}
												],
												"src": "5379:129:1"
											},
											{
												"body": {
													"nativeSrc": "5596:229:1",
													"nodeType": "YulBlock",
													"src": "5596:229:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5701:22:1",
																"nodeType": "YulBlock",
																"src": "5701:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5703:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5703:16:1"
																			},
																			"nativeSrc": "5703:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5703:18:1"
																		},
																		"nativeSrc": "5703:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5703:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5673:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5673:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5681:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5681:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5670:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5670:2:1"
																},
																"nativeSrc": "5670:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5670:30:1"
															},
															"nativeSrc": "5667:56:1",
															"nodeType": "YulIf",
															"src": "5667:56:1"
														},
														{
															"nativeSrc": "5733:25:1",
															"nodeType": "YulAssignment",
															"src": "5733:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5745:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5745:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5753:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5753:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5741:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:1"
																},
																"nativeSrc": "5741:17:1",
																"nodeType": "YulFunctionCall",
																"src": "5741:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5733:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5733:4:1"
																}
															]
														},
														{
															"nativeSrc": "5795:23:1",
															"nodeType": "YulAssignment",
															"src": "5795:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5807:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5807:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5813:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5803:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5803:3:1"
																},
																"nativeSrc": "5803:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5803:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5795:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5795:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5514:311:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5580:6:1",
														"nodeType": "YulTypedName",
														"src": "5580:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5591:4:1",
														"nodeType": "YulTypedName",
														"src": "5591:4:1",
														"type": ""
													}
												],
												"src": "5514:311:1"
											},
											{
												"body": {
													"nativeSrc": "5920:28:1",
													"nodeType": "YulBlock",
													"src": "5920:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5937:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5937:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5940:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5940:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5930:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:1"
																},
																"nativeSrc": "5930:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5930:12:1"
															},
															"nativeSrc": "5930:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "5930:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5831:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5831:117:1"
											},
											{
												"body": {
													"nativeSrc": "6073:608:1",
													"nodeType": "YulBlock",
													"src": "6073:608:1",
													"statements": [
														{
															"nativeSrc": "6083:90:1",
															"nodeType": "YulAssignment",
															"src": "6083:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6165:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6165:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "6108:56:1",
																			"nodeType": "YulIdentifier",
																			"src": "6108:56:1"
																		},
																		"nativeSrc": "6108:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6108:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6092:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "6092:15:1"
																},
																"nativeSrc": "6092:81:1",
																"nodeType": "YulFunctionCall",
																"src": "6092:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6083:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6083:5:1"
																}
															]
														},
														{
															"nativeSrc": "6182:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6182:16:1",
															"value": {
																"name": "array",
																"nativeSrc": "6193:5:1",
																"nodeType": "YulIdentifier",
																"src": "6193:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6186:3:1",
																	"nodeType": "YulTypedName",
																	"src": "6186:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6215:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6215:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6222:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6222:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6208:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:1"
																},
																"nativeSrc": "6208:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6208:21:1"
															},
															"nativeSrc": "6208:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6208:21:1"
														},
														{
															"nativeSrc": "6238:23:1",
															"nodeType": "YulAssignment",
															"src": "6238:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6249:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6249:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6256:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6256:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6245:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:1"
																},
																"nativeSrc": "6245:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6245:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6238:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6238:3:1"
																}
															]
														},
														{
															"nativeSrc": "6271:44:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6271:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6289:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6289:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6301:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6301:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6309:4:1",
																				"nodeType": "YulLiteral",
																				"src": "6309:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6297:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6297:3:1"
																		},
																		"nativeSrc": "6297:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6297:17:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6285:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6285:3:1"
																},
																"nativeSrc": "6285:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6285:30:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6275:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6275:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6343:103:1",
																"nodeType": "YulBlock",
																"src": "6343:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6357:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6357:77:1"
																			},
																			"nativeSrc": "6357:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6357:79:1"
																		},
																		"nativeSrc": "6357:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6357:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6330:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6330:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6338:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6338:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6327:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6327:2:1"
																},
																"nativeSrc": "6327:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6327:15:1"
															},
															"nativeSrc": "6324:122:1",
															"nodeType": "YulIf",
															"src": "6324:122:1"
														},
														{
															"body": {
																"nativeSrc": "6531:144:1",
																"nodeType": "YulBlock",
																"src": "6531:144:1",
																"statements": [
																	{
																		"nativeSrc": "6546:21:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6546:21:1",
																		"value": {
																			"name": "src",
																			"nativeSrc": "6564:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6564:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "6550:10:1",
																				"nodeType": "YulTypedName",
																				"src": "6550:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6588:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6588:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "6614:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "6614:10:1"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "6626:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6626:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "6593:20:1",
																						"nodeType": "YulIdentifier",
																						"src": "6593:20:1"
																					},
																					"nativeSrc": "6593:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6593:37:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6581:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6581:6:1"
																			},
																			"nativeSrc": "6581:50:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6581:50:1"
																		},
																		"nativeSrc": "6581:50:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6581:50:1"
																	},
																	{
																		"nativeSrc": "6644:21:1",
																		"nodeType": "YulAssignment",
																		"src": "6644:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6655:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6655:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6660:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6660:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6651:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6651:3:1"
																			},
																			"nativeSrc": "6651:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6651:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6644:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6644:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6484:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6484:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6489:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6489:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6481:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6481:2:1"
																},
																"nativeSrc": "6481:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6481:15:1"
															},
															"nativeSrc": "6455:220:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6497:25:1",
																"nodeType": "YulBlock",
																"src": "6497:25:1",
																"statements": [
																	{
																		"nativeSrc": "6499:21:1",
																		"nodeType": "YulAssignment",
																		"src": "6499:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6510:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6510:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6515:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6515:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6506:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6506:3:1"
																			},
																			"nativeSrc": "6506:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6506:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6499:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6499:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6459:21:1",
																"nodeType": "YulBlock",
																"src": "6459:21:1",
																"statements": [
																	{
																		"nativeSrc": "6461:17:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6461:17:1",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "6472:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6472:6:1"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "6465:3:1",
																				"nodeType": "YulTypedName",
																				"src": "6465:3:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6455:220:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5971:710:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6043:6:1",
														"nodeType": "YulTypedName",
														"src": "6043:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6051:6:1",
														"nodeType": "YulTypedName",
														"src": "6051:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6059:3:1",
														"nodeType": "YulTypedName",
														"src": "6059:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6067:5:1",
														"nodeType": "YulTypedName",
														"src": "6067:5:1",
														"type": ""
													}
												],
												"src": "5971:710:1"
											},
											{
												"body": {
													"nativeSrc": "6781:293:1",
													"nodeType": "YulBlock",
													"src": "6781:293:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6830:83:1",
																"nodeType": "YulBlock",
																"src": "6830:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6832:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6832:77:1"
																			},
																			"nativeSrc": "6832:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6832:79:1"
																		},
																		"nativeSrc": "6832:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6832:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6809:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6809:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6817:4:1",
																						"nodeType": "YulLiteral",
																						"src": "6817:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6805:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:1"
																				},
																				"nativeSrc": "6805:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6805:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6824:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6824:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6801:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6801:3:1"
																		},
																		"nativeSrc": "6801:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6801:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6794:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6794:6:1"
																},
																"nativeSrc": "6794:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6794:35:1"
															},
															"nativeSrc": "6791:122:1",
															"nodeType": "YulIf",
															"src": "6791:122:1"
														},
														{
															"nativeSrc": "6922:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6922:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6949:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6949:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6936:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "6936:12:1"
																},
																"nativeSrc": "6936:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6936:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6926:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6926:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6965:103:1",
															"nodeType": "YulAssignment",
															"src": "6965:103:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7041:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7041:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7049:4:1",
																				"nodeType": "YulLiteral",
																				"src": "7049:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7037:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7037:3:1"
																		},
																		"nativeSrc": "7037:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7037:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7056:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7056:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7064:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7064:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6974:62:1",
																	"nodeType": "YulIdentifier",
																	"src": "6974:62:1"
																},
																"nativeSrc": "6974:94:1",
																"nodeType": "YulFunctionCall",
																"src": "6974:94:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6965:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6965:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6704:370:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6759:6:1",
														"nodeType": "YulTypedName",
														"src": "6759:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6767:3:1",
														"nodeType": "YulTypedName",
														"src": "6767:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6775:5:1",
														"nodeType": "YulTypedName",
														"src": "6775:5:1",
														"type": ""
													}
												],
												"src": "6704:370:1"
											},
											{
												"body": {
													"nativeSrc": "7169:28:1",
													"nodeType": "YulBlock",
													"src": "7169:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7186:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7186:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7189:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7189:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7179:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7179:6:1"
																},
																"nativeSrc": "7179:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7179:12:1"
															},
															"nativeSrc": "7179:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7179:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7080:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7080:117:1"
											},
											{
												"body": {
													"nativeSrc": "7269:241:1",
													"nodeType": "YulBlock",
													"src": "7269:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7374:22:1",
																"nodeType": "YulBlock",
																"src": "7374:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7376:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7376:16:1"
																			},
																			"nativeSrc": "7376:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7376:18:1"
																		},
																		"nativeSrc": "7376:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7376:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7346:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7346:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7354:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7354:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7343:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7343:2:1"
																},
																"nativeSrc": "7343:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7343:30:1"
															},
															"nativeSrc": "7340:56:1",
															"nodeType": "YulIf",
															"src": "7340:56:1"
														},
														{
															"nativeSrc": "7406:37:1",
															"nodeType": "YulAssignment",
															"src": "7406:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7436:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7436:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7414:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "7414:21:1"
																},
																"nativeSrc": "7414:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7414:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7406:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7406:4:1"
																}
															]
														},
														{
															"nativeSrc": "7480:23:1",
															"nodeType": "YulAssignment",
															"src": "7480:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7492:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7492:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7498:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7498:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7488:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:1"
																},
																"nativeSrc": "7488:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7488:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7480:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7480:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7203:307:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7253:6:1",
														"nodeType": "YulTypedName",
														"src": "7253:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7264:4:1",
														"nodeType": "YulTypedName",
														"src": "7264:4:1",
														"type": ""
													}
												],
												"src": "7203:307:1"
											},
											{
												"body": {
													"nativeSrc": "7580:84:1",
													"nodeType": "YulBlock",
													"src": "7580:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7604:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7604:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7609:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7609:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7614:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7614:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7591:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "7591:12:1"
																},
																"nativeSrc": "7591:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7591:30:1"
															},
															"nativeSrc": "7591:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7591:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7641:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7641:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7646:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7646:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7637:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7637:3:1"
																		},
																		"nativeSrc": "7637:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7655:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7655:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7630:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:1"
																},
																"nativeSrc": "7630:27:1",
																"nodeType": "YulFunctionCall",
																"src": "7630:27:1"
															},
															"nativeSrc": "7630:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "7630:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7516:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7562:3:1",
														"nodeType": "YulTypedName",
														"src": "7562:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7567:3:1",
														"nodeType": "YulTypedName",
														"src": "7567:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7572:6:1",
														"nodeType": "YulTypedName",
														"src": "7572:6:1",
														"type": ""
													}
												],
												"src": "7516:148:1"
											},
											{
												"body": {
													"nativeSrc": "7753:340:1",
													"nodeType": "YulBlock",
													"src": "7753:340:1",
													"statements": [
														{
															"nativeSrc": "7763:74:1",
															"nodeType": "YulAssignment",
															"src": "7763:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7829:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7829:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7788:40:1",
																			"nodeType": "YulIdentifier",
																			"src": "7788:40:1"
																		},
																		"nativeSrc": "7788:48:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7788:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7772:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "7772:15:1"
																},
																"nativeSrc": "7772:65:1",
																"nodeType": "YulFunctionCall",
																"src": "7772:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7763:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7763:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7853:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7853:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7860:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7860:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7846:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7846:6:1"
																},
																"nativeSrc": "7846:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7846:21:1"
															},
															"nativeSrc": "7846:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7846:21:1"
														},
														{
															"nativeSrc": "7876:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7876:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7891:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7891:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7898:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7898:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7887:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7887:3:1"
																},
																"nativeSrc": "7887:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7887:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7880:3:1",
																	"nodeType": "YulTypedName",
																	"src": "7880:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7941:83:1",
																"nodeType": "YulBlock",
																"src": "7941:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7943:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7943:77:1"
																			},
																			"nativeSrc": "7943:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7943:79:1"
																		},
																		"nativeSrc": "7943:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7943:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7922:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7922:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7927:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7927:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7918:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7918:3:1"
																		},
																		"nativeSrc": "7918:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7918:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7936:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7936:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7915:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7915:2:1"
																},
																"nativeSrc": "7915:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7915:25:1"
															},
															"nativeSrc": "7912:112:1",
															"nodeType": "YulIf",
															"src": "7912:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8070:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8070:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8075:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8075:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8080:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8080:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8033:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "8033:36:1"
																},
																"nativeSrc": "8033:54:1",
																"nodeType": "YulFunctionCall",
																"src": "8033:54:1"
															},
															"nativeSrc": "8033:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "8033:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "7670:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7726:3:1",
														"nodeType": "YulTypedName",
														"src": "7726:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7731:6:1",
														"nodeType": "YulTypedName",
														"src": "7731:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7739:3:1",
														"nodeType": "YulTypedName",
														"src": "7739:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7747:5:1",
														"nodeType": "YulTypedName",
														"src": "7747:5:1",
														"type": ""
													}
												],
												"src": "7670:423:1"
											},
											{
												"body": {
													"nativeSrc": "8173:277:1",
													"nodeType": "YulBlock",
													"src": "8173:277:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8222:83:1",
																"nodeType": "YulBlock",
																"src": "8222:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8224:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8224:77:1"
																			},
																			"nativeSrc": "8224:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8224:79:1"
																		},
																		"nativeSrc": "8224:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8224:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8201:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8201:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8209:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8209:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8197:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8197:3:1"
																				},
																				"nativeSrc": "8197:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8197:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8216:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8216:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8193:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8193:3:1"
																		},
																		"nativeSrc": "8193:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8193:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8186:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8186:6:1"
																},
																"nativeSrc": "8186:35:1",
																"nodeType": "YulFunctionCall",
																"src": "8186:35:1"
															},
															"nativeSrc": "8183:122:1",
															"nodeType": "YulIf",
															"src": "8183:122:1"
														},
														{
															"nativeSrc": "8314:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8314:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8341:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8328:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8328:12:1"
																},
																"nativeSrc": "8328:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8328:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8318:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8318:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8357:87:1",
															"nodeType": "YulAssignment",
															"src": "8357:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8417:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8417:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8425:4:1",
																				"nodeType": "YulLiteral",
																				"src": "8425:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8413:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:1"
																		},
																		"nativeSrc": "8413:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8432:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8432:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8440:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8440:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8366:46:1",
																	"nodeType": "YulIdentifier",
																	"src": "8366:46:1"
																},
																"nativeSrc": "8366:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8366:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8357:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8357:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8112:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8151:6:1",
														"nodeType": "YulTypedName",
														"src": "8151:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8159:3:1",
														"nodeType": "YulTypedName",
														"src": "8159:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8167:5:1",
														"nodeType": "YulTypedName",
														"src": "8167:5:1",
														"type": ""
													}
												],
												"src": "8112:338:1"
											},
											{
												"body": {
													"nativeSrc": "8649:1316:1",
													"nodeType": "YulBlock",
													"src": "8649:1316:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8696:83:1",
																"nodeType": "YulBlock",
																"src": "8696:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8698:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8698:77:1"
																			},
																			"nativeSrc": "8698:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8698:79:1"
																		},
																		"nativeSrc": "8698:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8698:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8670:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8670:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8679:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8679:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8666:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8666:3:1"
																		},
																		"nativeSrc": "8666:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8666:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8691:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8691:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8662:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:1"
																},
																"nativeSrc": "8662:33:1",
																"nodeType": "YulFunctionCall",
																"src": "8662:33:1"
															},
															"nativeSrc": "8659:120:1",
															"nodeType": "YulIf",
															"src": "8659:120:1"
														},
														{
															"nativeSrc": "8789:117:1",
															"nodeType": "YulBlock",
															"src": "8789:117:1",
															"statements": [
																{
																	"nativeSrc": "8804:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8804:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8818:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8818:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8808:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8808:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8833:63:1",
																	"nodeType": "YulAssignment",
																	"src": "8833:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8868:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8868:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8879:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8879:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8864:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8864:3:1"
																				},
																				"nativeSrc": "8864:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8864:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8888:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8888:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8843:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "8843:20:1"
																		},
																		"nativeSrc": "8843:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8843:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8833:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8833:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8916:118:1",
															"nodeType": "YulBlock",
															"src": "8916:118:1",
															"statements": [
																{
																	"nativeSrc": "8931:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8931:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8945:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8945:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8935:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8935:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8961:63:1",
																	"nodeType": "YulAssignment",
																	"src": "8961:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8996:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8996:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9007:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9007:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8992:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8992:3:1"
																				},
																				"nativeSrc": "8992:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8992:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9016:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9016:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8971:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "8971:20:1"
																		},
																		"nativeSrc": "8971:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8971:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8961:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8961:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9044:303:1",
															"nodeType": "YulBlock",
															"src": "9044:303:1",
															"statements": [
																{
																	"nativeSrc": "9059:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9059:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9090:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9090:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9101:2:1",
																						"nodeType": "YulLiteral",
																						"src": "9101:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9086:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9086:3:1"
																				},
																				"nativeSrc": "9086:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9086:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9073:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "9073:12:1"
																		},
																		"nativeSrc": "9073:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9073:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9063:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9063:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9152:83:1",
																		"nodeType": "YulBlock",
																		"src": "9152:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9154:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "9154:77:1"
																					},
																					"nativeSrc": "9154:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9154:79:1"
																				},
																				"nativeSrc": "9154:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "9154:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9124:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9124:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9132:18:1",
																				"nodeType": "YulLiteral",
																				"src": "9132:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9121:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9121:2:1"
																		},
																		"nativeSrc": "9121:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9121:30:1"
																	},
																	"nativeSrc": "9118:117:1",
																	"nodeType": "YulIf",
																	"src": "9118:117:1"
																},
																{
																	"nativeSrc": "9249:88:1",
																	"nodeType": "YulAssignment",
																	"src": "9249:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9309:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9309:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9320:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9320:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9305:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9305:3:1"
																				},
																				"nativeSrc": "9305:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9305:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9329:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9329:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9259:45:1",
																			"nodeType": "YulIdentifier",
																			"src": "9259:45:1"
																		},
																		"nativeSrc": "9259:78:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9259:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9249:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9249:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9357:303:1",
															"nodeType": "YulBlock",
															"src": "9357:303:1",
															"statements": [
																{
																	"nativeSrc": "9372:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9372:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9403:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9403:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9414:2:1",
																						"nodeType": "YulLiteral",
																						"src": "9414:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9399:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9399:3:1"
																				},
																				"nativeSrc": "9399:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9399:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9386:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "9386:12:1"
																		},
																		"nativeSrc": "9386:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9386:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9376:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9465:83:1",
																		"nodeType": "YulBlock",
																		"src": "9465:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9467:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "9467:77:1"
																					},
																					"nativeSrc": "9467:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9467:79:1"
																				},
																				"nativeSrc": "9467:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "9467:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9437:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9437:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9445:18:1",
																				"nodeType": "YulLiteral",
																				"src": "9445:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9434:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9434:2:1"
																		},
																		"nativeSrc": "9434:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9434:30:1"
																	},
																	"nativeSrc": "9431:117:1",
																	"nodeType": "YulIf",
																	"src": "9431:117:1"
																},
																{
																	"nativeSrc": "9562:88:1",
																	"nodeType": "YulAssignment",
																	"src": "9562:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9622:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9622:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9633:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9633:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9618:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9618:3:1"
																				},
																				"nativeSrc": "9618:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9618:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9642:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9642:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9572:45:1",
																			"nodeType": "YulIdentifier",
																			"src": "9572:45:1"
																		},
																		"nativeSrc": "9572:78:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9572:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9562:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9562:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9670:288:1",
															"nodeType": "YulBlock",
															"src": "9670:288:1",
															"statements": [
																{
																	"nativeSrc": "9685:47:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9685:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9716:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9716:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9727:3:1",
																						"nodeType": "YulLiteral",
																						"src": "9727:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9712:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9712:3:1"
																				},
																				"nativeSrc": "9712:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9712:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9699:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "9699:12:1"
																		},
																		"nativeSrc": "9699:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9699:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9689:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9689:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9779:83:1",
																		"nodeType": "YulBlock",
																		"src": "9779:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9781:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "9781:77:1"
																					},
																					"nativeSrc": "9781:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9781:79:1"
																				},
																				"nativeSrc": "9781:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "9781:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9751:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9751:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9759:18:1",
																				"nodeType": "YulLiteral",
																				"src": "9759:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9748:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9748:2:1"
																		},
																		"nativeSrc": "9748:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9748:30:1"
																	},
																	"nativeSrc": "9745:117:1",
																	"nodeType": "YulIf",
																	"src": "9745:117:1"
																},
																{
																	"nativeSrc": "9876:72:1",
																	"nodeType": "YulAssignment",
																	"src": "9876:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9920:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9920:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9931:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9931:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9916:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9916:3:1"
																				},
																				"nativeSrc": "9916:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9916:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9940:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9940:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9886:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "9886:29:1"
																		},
																		"nativeSrc": "9886:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9886:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "9876:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9876:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "8456:1509:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8587:9:1",
														"nodeType": "YulTypedName",
														"src": "8587:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8598:7:1",
														"nodeType": "YulTypedName",
														"src": "8598:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8610:6:1",
														"nodeType": "YulTypedName",
														"src": "8610:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8618:6:1",
														"nodeType": "YulTypedName",
														"src": "8618:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8626:6:1",
														"nodeType": "YulTypedName",
														"src": "8626:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8634:6:1",
														"nodeType": "YulTypedName",
														"src": "8634:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8642:6:1",
														"nodeType": "YulTypedName",
														"src": "8642:6:1",
														"type": ""
													}
												],
												"src": "8456:1509:1"
											},
											{
												"body": {
													"nativeSrc": "10053:229:1",
													"nodeType": "YulBlock",
													"src": "10053:229:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10158:22:1",
																"nodeType": "YulBlock",
																"src": "10158:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10160:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10160:16:1"
																			},
																			"nativeSrc": "10160:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10160:18:1"
																		},
																		"nativeSrc": "10160:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10160:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10130:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10130:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10138:18:1",
																		"nodeType": "YulLiteral",
																		"src": "10138:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10127:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10127:2:1"
																},
																"nativeSrc": "10127:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10127:30:1"
															},
															"nativeSrc": "10124:56:1",
															"nodeType": "YulIf",
															"src": "10124:56:1"
														},
														{
															"nativeSrc": "10190:25:1",
															"nodeType": "YulAssignment",
															"src": "10190:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10202:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10202:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10210:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10210:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10198:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10198:3:1"
																},
																"nativeSrc": "10198:17:1",
																"nodeType": "YulFunctionCall",
																"src": "10198:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10190:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10190:4:1"
																}
															]
														},
														{
															"nativeSrc": "10252:23:1",
															"nodeType": "YulAssignment",
															"src": "10252:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10264:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10264:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10260:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10260:3:1"
																},
																"nativeSrc": "10260:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10260:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10252:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10252:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "9971:311:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10037:6:1",
														"nodeType": "YulTypedName",
														"src": "10037:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10048:4:1",
														"nodeType": "YulTypedName",
														"src": "10048:4:1",
														"type": ""
													}
												],
												"src": "9971:311:1"
											},
											{
												"body": {
													"nativeSrc": "10407:608:1",
													"nodeType": "YulBlock",
													"src": "10407:608:1",
													"statements": [
														{
															"nativeSrc": "10417:90:1",
															"nodeType": "YulAssignment",
															"src": "10417:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10499:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10499:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "10442:56:1",
																			"nodeType": "YulIdentifier",
																			"src": "10442:56:1"
																		},
																		"nativeSrc": "10442:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10442:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10426:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "10426:15:1"
																},
																"nativeSrc": "10426:81:1",
																"nodeType": "YulFunctionCall",
																"src": "10426:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10417:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10417:5:1"
																}
															]
														},
														{
															"nativeSrc": "10516:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10516:16:1",
															"value": {
																"name": "array",
																"nativeSrc": "10527:5:1",
																"nodeType": "YulIdentifier",
																"src": "10527:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10520:3:1",
																	"nodeType": "YulTypedName",
																	"src": "10520:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10549:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10549:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10556:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10556:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10542:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10542:6:1"
																},
																"nativeSrc": "10542:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10542:21:1"
															},
															"nativeSrc": "10542:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10542:21:1"
														},
														{
															"nativeSrc": "10572:23:1",
															"nodeType": "YulAssignment",
															"src": "10572:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10583:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10583:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10590:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10590:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10579:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10579:3:1"
																},
																"nativeSrc": "10579:16:1",
																"nodeType": "YulFunctionCall",
																"src": "10579:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "10572:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10572:3:1"
																}
															]
														},
														{
															"nativeSrc": "10605:44:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10605:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10623:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10623:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10635:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10635:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10643:4:1",
																				"nodeType": "YulLiteral",
																				"src": "10643:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "10631:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10631:3:1"
																		},
																		"nativeSrc": "10631:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10631:17:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10619:3:1"
																},
																"nativeSrc": "10619:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10619:30:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "10609:6:1",
																	"nodeType": "YulTypedName",
																	"src": "10609:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10677:103:1",
																"nodeType": "YulBlock",
																"src": "10677:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10691:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10691:77:1"
																			},
																			"nativeSrc": "10691:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10691:79:1"
																		},
																		"nativeSrc": "10691:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10691:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10664:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10664:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10672:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10672:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10661:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10661:2:1"
																},
																"nativeSrc": "10661:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10661:15:1"
															},
															"nativeSrc": "10658:122:1",
															"nodeType": "YulIf",
															"src": "10658:122:1"
														},
														{
															"body": {
																"nativeSrc": "10865:144:1",
																"nodeType": "YulBlock",
																"src": "10865:144:1",
																"statements": [
																	{
																		"nativeSrc": "10880:21:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10880:21:1",
																		"value": {
																			"name": "src",
																			"nativeSrc": "10898:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10898:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "10884:10:1",
																				"nodeType": "YulTypedName",
																				"src": "10884:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10922:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10922:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "10948:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "10948:10:1"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "10960:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10960:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "10927:20:1",
																						"nodeType": "YulIdentifier",
																						"src": "10927:20:1"
																					},
																					"nativeSrc": "10927:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10927:37:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10915:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10915:6:1"
																			},
																			"nativeSrc": "10915:50:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10915:50:1"
																		},
																		"nativeSrc": "10915:50:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10915:50:1"
																	},
																	{
																		"nativeSrc": "10978:21:1",
																		"nodeType": "YulAssignment",
																		"src": "10978:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10989:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10989:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10994:4:1",
																					"nodeType": "YulLiteral",
																					"src": "10994:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10985:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10985:3:1"
																			},
																			"nativeSrc": "10985:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10985:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "10978:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10978:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10818:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10818:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10823:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10823:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10815:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10815:2:1"
																},
																"nativeSrc": "10815:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10815:15:1"
															},
															"nativeSrc": "10789:220:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10831:25:1",
																"nodeType": "YulBlock",
																"src": "10831:25:1",
																"statements": [
																	{
																		"nativeSrc": "10833:21:1",
																		"nodeType": "YulAssignment",
																		"src": "10833:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "10844:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10844:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10849:4:1",
																					"nodeType": "YulLiteral",
																					"src": "10849:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10840:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10840:3:1"
																			},
																			"nativeSrc": "10840:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10840:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "10833:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10833:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10793:21:1",
																"nodeType": "YulBlock",
																"src": "10793:21:1",
																"statements": [
																	{
																		"nativeSrc": "10795:17:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10795:17:1",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "10806:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10806:6:1"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "10799:3:1",
																				"nodeType": "YulTypedName",
																				"src": "10799:3:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10789:220:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10305:710:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10377:6:1",
														"nodeType": "YulTypedName",
														"src": "10377:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10385:6:1",
														"nodeType": "YulTypedName",
														"src": "10385:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10393:3:1",
														"nodeType": "YulTypedName",
														"src": "10393:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10401:5:1",
														"nodeType": "YulTypedName",
														"src": "10401:5:1",
														"type": ""
													}
												],
												"src": "10305:710:1"
											},
											{
												"body": {
													"nativeSrc": "11115:293:1",
													"nodeType": "YulBlock",
													"src": "11115:293:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11164:83:1",
																"nodeType": "YulBlock",
																"src": "11164:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11166:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "11166:77:1"
																			},
																			"nativeSrc": "11166:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11166:79:1"
																		},
																		"nativeSrc": "11166:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11166:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11143:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11143:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11151:4:1",
																						"nodeType": "YulLiteral",
																						"src": "11151:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11139:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11139:3:1"
																				},
																				"nativeSrc": "11139:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11139:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11158:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11158:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11135:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11135:3:1"
																		},
																		"nativeSrc": "11135:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11135:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11128:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11128:6:1"
																},
																"nativeSrc": "11128:35:1",
																"nodeType": "YulFunctionCall",
																"src": "11128:35:1"
															},
															"nativeSrc": "11125:122:1",
															"nodeType": "YulIf",
															"src": "11125:122:1"
														},
														{
															"nativeSrc": "11256:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11256:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11283:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11283:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11270:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "11270:12:1"
																},
																"nativeSrc": "11270:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11270:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11260:6:1",
																	"nodeType": "YulTypedName",
																	"src": "11260:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11299:103:1",
															"nodeType": "YulAssignment",
															"src": "11299:103:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11375:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11375:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11383:4:1",
																				"nodeType": "YulLiteral",
																				"src": "11383:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11371:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11371:3:1"
																		},
																		"nativeSrc": "11371:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11371:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11390:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11390:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11398:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11398:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "11308:62:1",
																	"nodeType": "YulIdentifier",
																	"src": "11308:62:1"
																},
																"nativeSrc": "11308:94:1",
																"nodeType": "YulFunctionCall",
																"src": "11308:94:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11299:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11299:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11038:370:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11093:6:1",
														"nodeType": "YulTypedName",
														"src": "11093:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11101:3:1",
														"nodeType": "YulTypedName",
														"src": "11101:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11109:5:1",
														"nodeType": "YulTypedName",
														"src": "11109:5:1",
														"type": ""
													}
												],
												"src": "11038:370:1"
											},
											{
												"body": {
													"nativeSrc": "11547:761:1",
													"nodeType": "YulBlock",
													"src": "11547:761:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11593:83:1",
																"nodeType": "YulBlock",
																"src": "11593:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11595:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "11595:77:1"
																			},
																			"nativeSrc": "11595:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11595:79:1"
																		},
																		"nativeSrc": "11595:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11595:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11568:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11568:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11577:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11577:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11564:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11564:3:1"
																		},
																		"nativeSrc": "11564:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11564:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11589:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11589:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11560:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11560:3:1"
																},
																"nativeSrc": "11560:32:1",
																"nodeType": "YulFunctionCall",
																"src": "11560:32:1"
															},
															"nativeSrc": "11557:119:1",
															"nodeType": "YulIf",
															"src": "11557:119:1"
														},
														{
															"nativeSrc": "11686:302:1",
															"nodeType": "YulBlock",
															"src": "11686:302:1",
															"statements": [
																{
																	"nativeSrc": "11701:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11701:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11732:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11732:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11743:1:1",
																						"nodeType": "YulLiteral",
																						"src": "11743:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11728:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11728:3:1"
																				},
																				"nativeSrc": "11728:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11728:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11715:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "11715:12:1"
																		},
																		"nativeSrc": "11715:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11715:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11705:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11705:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11793:83:1",
																		"nodeType": "YulBlock",
																		"src": "11793:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11795:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "11795:77:1"
																					},
																					"nativeSrc": "11795:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11795:79:1"
																				},
																				"nativeSrc": "11795:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "11795:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11765:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11765:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11773:18:1",
																				"nodeType": "YulLiteral",
																				"src": "11773:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11762:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11762:2:1"
																		},
																		"nativeSrc": "11762:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11762:30:1"
																	},
																	"nativeSrc": "11759:117:1",
																	"nodeType": "YulIf",
																	"src": "11759:117:1"
																},
																{
																	"nativeSrc": "11890:88:1",
																	"nodeType": "YulAssignment",
																	"src": "11890:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11950:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11950:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11961:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11961:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11946:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11946:3:1"
																				},
																				"nativeSrc": "11946:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11946:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11970:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11970:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "11900:45:1",
																			"nodeType": "YulIdentifier",
																			"src": "11900:45:1"
																		},
																		"nativeSrc": "11900:78:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11900:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11890:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11890:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11998:303:1",
															"nodeType": "YulBlock",
															"src": "11998:303:1",
															"statements": [
																{
																	"nativeSrc": "12013:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12013:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12044:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12044:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12055:2:1",
																						"nodeType": "YulLiteral",
																						"src": "12055:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12040:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12040:3:1"
																				},
																				"nativeSrc": "12040:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12040:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12027:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "12027:12:1"
																		},
																		"nativeSrc": "12027:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12027:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12017:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12017:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12106:83:1",
																		"nodeType": "YulBlock",
																		"src": "12106:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12108:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "12108:77:1"
																					},
																					"nativeSrc": "12108:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12108:79:1"
																				},
																				"nativeSrc": "12108:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "12108:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12078:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12078:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12086:18:1",
																				"nodeType": "YulLiteral",
																				"src": "12086:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12075:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "12075:2:1"
																		},
																		"nativeSrc": "12075:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12075:30:1"
																	},
																	"nativeSrc": "12072:117:1",
																	"nodeType": "YulIf",
																	"src": "12072:117:1"
																},
																{
																	"nativeSrc": "12203:88:1",
																	"nodeType": "YulAssignment",
																	"src": "12203:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12263:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12263:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12274:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12274:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12259:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12259:3:1"
																				},
																				"nativeSrc": "12259:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12259:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12283:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12283:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12213:45:1",
																			"nodeType": "YulIdentifier",
																			"src": "12213:45:1"
																		},
																		"nativeSrc": "12213:78:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12213:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12203:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12203:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11414:894:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11509:9:1",
														"nodeType": "YulTypedName",
														"src": "11509:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11520:7:1",
														"nodeType": "YulTypedName",
														"src": "11520:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11532:6:1",
														"nodeType": "YulTypedName",
														"src": "11532:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11540:6:1",
														"nodeType": "YulTypedName",
														"src": "11540:6:1",
														"type": ""
													}
												],
												"src": "11414:894:1"
											},
											{
												"body": {
													"nativeSrc": "12388:40:1",
													"nodeType": "YulBlock",
													"src": "12388:40:1",
													"statements": [
														{
															"nativeSrc": "12399:22:1",
															"nodeType": "YulAssignment",
															"src": "12399:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12415:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12415:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12409:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12409:5:1"
																},
																"nativeSrc": "12409:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12409:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12399:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12399:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12314:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12371:5:1",
														"nodeType": "YulTypedName",
														"src": "12371:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12381:6:1",
														"nodeType": "YulTypedName",
														"src": "12381:6:1",
														"type": ""
													}
												],
												"src": "12314:114:1"
											},
											{
												"body": {
													"nativeSrc": "12545:73:1",
													"nodeType": "YulBlock",
													"src": "12545:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12562:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12562:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12567:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12567:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12555:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12555:6:1"
																},
																"nativeSrc": "12555:19:1",
																"nodeType": "YulFunctionCall",
																"src": "12555:19:1"
															},
															"nativeSrc": "12555:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "12555:19:1"
														},
														{
															"nativeSrc": "12583:29:1",
															"nodeType": "YulAssignment",
															"src": "12583:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12602:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12602:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12607:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12607:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12598:3:1"
																},
																"nativeSrc": "12598:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12598:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12583:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "12583:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "12434:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12517:3:1",
														"nodeType": "YulTypedName",
														"src": "12517:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12522:6:1",
														"nodeType": "YulTypedName",
														"src": "12522:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12533:11:1",
														"nodeType": "YulTypedName",
														"src": "12533:11:1",
														"type": ""
													}
												],
												"src": "12434:184:1"
											},
											{
												"body": {
													"nativeSrc": "12696:60:1",
													"nodeType": "YulBlock",
													"src": "12696:60:1",
													"statements": [
														{
															"nativeSrc": "12706:11:1",
															"nodeType": "YulAssignment",
															"src": "12706:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "12714:3:1",
																"nodeType": "YulIdentifier",
																"src": "12714:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12706:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12706:4:1"
																}
															]
														},
														{
															"nativeSrc": "12727:22:1",
															"nodeType": "YulAssignment",
															"src": "12727:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12739:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12739:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12744:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12744:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12735:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12735:3:1"
																},
																"nativeSrc": "12735:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12735:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12727:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12727:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12624:132:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12683:3:1",
														"nodeType": "YulTypedName",
														"src": "12683:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12691:4:1",
														"nodeType": "YulTypedName",
														"src": "12691:4:1",
														"type": ""
													}
												],
												"src": "12624:132:1"
											},
											{
												"body": {
													"nativeSrc": "12817:53:1",
													"nodeType": "YulBlock",
													"src": "12817:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12834:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12834:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12857:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12857:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12839:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "12839:17:1"
																		},
																		"nativeSrc": "12839:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12839:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12827:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12827:6:1"
																},
																"nativeSrc": "12827:37:1",
																"nodeType": "YulFunctionCall",
																"src": "12827:37:1"
															},
															"nativeSrc": "12827:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "12827:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "12762:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12805:5:1",
														"nodeType": "YulTypedName",
														"src": "12805:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12812:3:1",
														"nodeType": "YulTypedName",
														"src": "12812:3:1",
														"type": ""
													}
												],
												"src": "12762:108:1"
											},
											{
												"body": {
													"nativeSrc": "12956:99:1",
													"nodeType": "YulBlock",
													"src": "12956:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13000:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13000:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13008:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13008:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "12966:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "12966:33:1"
																},
																"nativeSrc": "12966:46:1",
																"nodeType": "YulFunctionCall",
																"src": "12966:46:1"
															},
															"nativeSrc": "12966:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "12966:46:1"
														},
														{
															"nativeSrc": "13021:28:1",
															"nodeType": "YulAssignment",
															"src": "13021:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13039:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13039:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13044:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13044:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13035:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13035:3:1"
																},
																"nativeSrc": "13035:14:1",
																"nodeType": "YulFunctionCall",
																"src": "13035:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "13021:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "13021:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "12876:179:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "12929:6:1",
														"nodeType": "YulTypedName",
														"src": "12929:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12937:3:1",
														"nodeType": "YulTypedName",
														"src": "12937:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "12945:10:1",
														"nodeType": "YulTypedName",
														"src": "12945:10:1",
														"type": ""
													}
												],
												"src": "12876:179:1"
											},
											{
												"body": {
													"nativeSrc": "13136:38:1",
													"nodeType": "YulBlock",
													"src": "13136:38:1",
													"statements": [
														{
															"nativeSrc": "13146:22:1",
															"nodeType": "YulAssignment",
															"src": "13146:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13158:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13158:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13163:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13163:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13154:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13154:3:1"
																},
																"nativeSrc": "13154:14:1",
																"nodeType": "YulFunctionCall",
																"src": "13154:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "13146:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13146:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13061:113:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13123:3:1",
														"nodeType": "YulTypedName",
														"src": "13123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "13131:4:1",
														"nodeType": "YulTypedName",
														"src": "13131:4:1",
														"type": ""
													}
												],
												"src": "13061:113:1"
											},
											{
												"body": {
													"nativeSrc": "13334:608:1",
													"nodeType": "YulBlock",
													"src": "13334:608:1",
													"statements": [
														{
															"nativeSrc": "13344:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13344:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13406:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13406:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13358:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "13358:47:1"
																},
																"nativeSrc": "13358:54:1",
																"nodeType": "YulFunctionCall",
																"src": "13358:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13348:6:1",
																	"nodeType": "YulTypedName",
																	"src": "13348:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13421:93:1",
															"nodeType": "YulAssignment",
															"src": "13421:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13502:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13502:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13507:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13507:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13428:73:1",
																	"nodeType": "YulIdentifier",
																	"src": "13428:73:1"
																},
																"nativeSrc": "13428:86:1",
																"nodeType": "YulFunctionCall",
																"src": "13428:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13421:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13421:3:1"
																}
															]
														},
														{
															"nativeSrc": "13523:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13523:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13588:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13588:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13538:49:1",
																	"nodeType": "YulIdentifier",
																	"src": "13538:49:1"
																},
																"nativeSrc": "13538:56:1",
																"nodeType": "YulFunctionCall",
																"src": "13538:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "13527:7:1",
																	"nodeType": "YulTypedName",
																	"src": "13527:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13603:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13603:21:1",
															"value": {
																"name": "baseRef",
																"nativeSrc": "13617:7:1",
																"nodeType": "YulIdentifier",
																"src": "13617:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "13607:6:1",
																	"nodeType": "YulTypedName",
																	"src": "13607:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13693:224:1",
																"nodeType": "YulBlock",
																"src": "13693:224:1",
																"statements": [
																	{
																		"nativeSrc": "13707:34:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13707:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13734:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "13734:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "13728:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "13728:5:1"
																			},
																			"nativeSrc": "13728:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13728:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "13711:13:1",
																				"nodeType": "YulTypedName",
																				"src": "13711:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13754:70:1",
																		"nodeType": "YulAssignment",
																		"src": "13754:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "13805:13:1",
																					"nodeType": "YulIdentifier",
																					"src": "13805:13:1"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "13820:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13820:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "13761:43:1",
																				"nodeType": "YulIdentifier",
																				"src": "13761:43:1"
																			},
																			"nativeSrc": "13761:63:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13761:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "13754:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "13754:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "13837:70:1",
																		"nodeType": "YulAssignment",
																		"src": "13837:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13900:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "13900:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "13847:52:1",
																				"nodeType": "YulIdentifier",
																				"src": "13847:52:1"
																			},
																			"nativeSrc": "13847:60:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13847:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "13837:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13837:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "13655:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13655:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13658:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13658:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13652:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13652:2:1"
																},
																"nativeSrc": "13652:13:1",
																"nodeType": "YulFunctionCall",
																"src": "13652:13:1"
															},
															"nativeSrc": "13633:284:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13666:18:1",
																"nodeType": "YulBlock",
																"src": "13666:18:1",
																"statements": [
																	{
																		"nativeSrc": "13668:14:1",
																		"nodeType": "YulAssignment",
																		"src": "13668:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "13677:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "13677:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "13680:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13673:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "13673:3:1"
																			},
																			"nativeSrc": "13673:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13673:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "13668:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "13668:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13637:14:1",
																"nodeType": "YulBlock",
																"src": "13637:14:1",
																"statements": [
																	{
																		"nativeSrc": "13639:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13639:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "13648:1:1",
																			"nodeType": "YulLiteral",
																			"src": "13648:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "13643:1:1",
																				"nodeType": "YulTypedName",
																				"src": "13643:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13633:284:1"
														},
														{
															"nativeSrc": "13926:10:1",
															"nodeType": "YulAssignment",
															"src": "13926:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "13933:3:1",
																"nodeType": "YulIdentifier",
																"src": "13933:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13926:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13926:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13210:732:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13313:5:1",
														"nodeType": "YulTypedName",
														"src": "13313:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13320:3:1",
														"nodeType": "YulTypedName",
														"src": "13320:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13329:3:1",
														"nodeType": "YulTypedName",
														"src": "13329:3:1",
														"type": ""
													}
												],
												"src": "13210:732:1"
											},
											{
												"body": {
													"nativeSrc": "14096:225:1",
													"nodeType": "YulBlock",
													"src": "14096:225:1",
													"statements": [
														{
															"nativeSrc": "14106:26:1",
															"nodeType": "YulAssignment",
															"src": "14106:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14118:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14118:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14129:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14129:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14114:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14114:3:1"
																},
																"nativeSrc": "14114:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14114:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14106:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14106:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14153:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14153:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14164:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14164:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14149:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14149:3:1"
																		},
																		"nativeSrc": "14149:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14149:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14172:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "14172:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14178:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14178:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14168:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14168:3:1"
																		},
																		"nativeSrc": "14168:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14168:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14142:6:1"
																},
																"nativeSrc": "14142:47:1",
																"nodeType": "YulFunctionCall",
																"src": "14142:47:1"
															},
															"nativeSrc": "14142:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "14142:47:1"
														},
														{
															"nativeSrc": "14198:116:1",
															"nodeType": "YulAssignment",
															"src": "14198:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14300:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14300:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14309:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14309:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14206:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "14206:93:1"
																},
																"nativeSrc": "14206:108:1",
																"nodeType": "YulFunctionCall",
																"src": "14206:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14198:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14198:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "13948:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14068:9:1",
														"nodeType": "YulTypedName",
														"src": "14068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14080:6:1",
														"nodeType": "YulTypedName",
														"src": "14080:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14091:4:1",
														"nodeType": "YulTypedName",
														"src": "14091:4:1",
														"type": ""
													}
												],
												"src": "13948:373:1"
											},
											{
												"body": {
													"nativeSrc": "14453:817:1",
													"nodeType": "YulBlock",
													"src": "14453:817:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "14500:83:1",
																"nodeType": "YulBlock",
																"src": "14500:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14502:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "14502:77:1"
																			},
																			"nativeSrc": "14502:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14502:79:1"
																		},
																		"nativeSrc": "14502:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "14502:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14474:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "14474:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14483:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14483:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14470:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14470:3:1"
																		},
																		"nativeSrc": "14470:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14470:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14495:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14495:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14466:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14466:3:1"
																},
																"nativeSrc": "14466:33:1",
																"nodeType": "YulFunctionCall",
																"src": "14466:33:1"
															},
															"nativeSrc": "14463:120:1",
															"nodeType": "YulIf",
															"src": "14463:120:1"
														},
														{
															"nativeSrc": "14593:117:1",
															"nodeType": "YulBlock",
															"src": "14593:117:1",
															"statements": [
																{
																	"nativeSrc": "14608:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14608:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14622:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14622:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14612:6:1",
																			"nodeType": "YulTypedName",
																			"src": "14612:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14637:63:1",
																	"nodeType": "YulAssignment",
																	"src": "14637:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14672:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "14672:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14683:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "14683:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14668:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "14668:3:1"
																				},
																				"nativeSrc": "14668:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14668:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14692:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "14692:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14647:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "14647:20:1"
																		},
																		"nativeSrc": "14647:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14647:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14637:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "14637:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14720:118:1",
															"nodeType": "YulBlock",
															"src": "14720:118:1",
															"statements": [
																{
																	"nativeSrc": "14735:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14735:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14749:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14749:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14739:6:1",
																			"nodeType": "YulTypedName",
																			"src": "14739:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14765:63:1",
																	"nodeType": "YulAssignment",
																	"src": "14765:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14800:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "14800:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14811:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "14811:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14796:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "14796:3:1"
																				},
																				"nativeSrc": "14796:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14796:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14820:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "14820:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "14775:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "14775:20:1"
																		},
																		"nativeSrc": "14775:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14775:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14765:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "14765:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14848:118:1",
															"nodeType": "YulBlock",
															"src": "14848:118:1",
															"statements": [
																{
																	"nativeSrc": "14863:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14863:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14877:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14877:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14867:6:1",
																			"nodeType": "YulTypedName",
																			"src": "14867:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14893:63:1",
																	"nodeType": "YulAssignment",
																	"src": "14893:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14928:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "14928:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14939:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "14939:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14924:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "14924:3:1"
																				},
																				"nativeSrc": "14924:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14924:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14948:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "14948:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "14903:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "14903:20:1"
																		},
																		"nativeSrc": "14903:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14903:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "14893:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "14893:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14976:287:1",
															"nodeType": "YulBlock",
															"src": "14976:287:1",
															"statements": [
																{
																	"nativeSrc": "14991:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14991:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15022:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "15022:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15033:2:1",
																						"nodeType": "YulLiteral",
																						"src": "15033:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15018:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "15018:3:1"
																				},
																				"nativeSrc": "15018:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15018:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "15005:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "15005:12:1"
																		},
																		"nativeSrc": "15005:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15005:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14995:6:1",
																			"nodeType": "YulTypedName",
																			"src": "14995:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "15084:83:1",
																		"nodeType": "YulBlock",
																		"src": "15084:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "15086:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "15086:77:1"
																					},
																					"nativeSrc": "15086:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "15086:79:1"
																				},
																				"nativeSrc": "15086:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "15086:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "15056:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "15056:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15064:18:1",
																				"nodeType": "YulLiteral",
																				"src": "15064:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "15053:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "15053:2:1"
																		},
																		"nativeSrc": "15053:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15053:30:1"
																	},
																	"nativeSrc": "15050:117:1",
																	"nodeType": "YulIf",
																	"src": "15050:117:1"
																},
																{
																	"nativeSrc": "15181:72:1",
																	"nodeType": "YulAssignment",
																	"src": "15181:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15225:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "15225:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15236:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "15236:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15221:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "15221:3:1"
																				},
																				"nativeSrc": "15221:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15221:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15245:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "15245:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "15191:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "15191:29:1"
																		},
																		"nativeSrc": "15191:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15191:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "15181:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "15181:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "14327:943:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14399:9:1",
														"nodeType": "YulTypedName",
														"src": "14399:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14410:7:1",
														"nodeType": "YulTypedName",
														"src": "14410:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14422:6:1",
														"nodeType": "YulTypedName",
														"src": "14422:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14430:6:1",
														"nodeType": "YulTypedName",
														"src": "14430:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14438:6:1",
														"nodeType": "YulTypedName",
														"src": "14438:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14446:6:1",
														"nodeType": "YulTypedName",
														"src": "14446:6:1",
														"type": ""
													}
												],
												"src": "14327:943:1"
											},
											{
												"body": {
													"nativeSrc": "15341:53:1",
													"nodeType": "YulBlock",
													"src": "15341:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15358:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15358:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15381:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "15381:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "15363:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "15363:17:1"
																		},
																		"nativeSrc": "15363:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15363:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15351:6:1"
																},
																"nativeSrc": "15351:37:1",
																"nodeType": "YulFunctionCall",
																"src": "15351:37:1"
															},
															"nativeSrc": "15351:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "15351:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "15276:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15329:5:1",
														"nodeType": "YulTypedName",
														"src": "15329:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15336:3:1",
														"nodeType": "YulTypedName",
														"src": "15336:3:1",
														"type": ""
													}
												],
												"src": "15276:118:1"
											},
											{
												"body": {
													"nativeSrc": "15498:124:1",
													"nodeType": "YulBlock",
													"src": "15498:124:1",
													"statements": [
														{
															"nativeSrc": "15508:26:1",
															"nodeType": "YulAssignment",
															"src": "15508:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15520:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15520:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15531:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15516:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15516:3:1"
																},
																"nativeSrc": "15516:18:1",
																"nodeType": "YulFunctionCall",
																"src": "15516:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15508:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15508:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15588:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15588:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15601:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15601:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15612:1:1",
																				"nodeType": "YulLiteral",
																				"src": "15612:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15597:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15597:3:1"
																		},
																		"nativeSrc": "15597:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15597:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15544:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "15544:43:1"
																},
																"nativeSrc": "15544:71:1",
																"nodeType": "YulFunctionCall",
																"src": "15544:71:1"
															},
															"nativeSrc": "15544:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "15544:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "15400:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15470:9:1",
														"nodeType": "YulTypedName",
														"src": "15470:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15482:6:1",
														"nodeType": "YulTypedName",
														"src": "15482:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15493:4:1",
														"nodeType": "YulTypedName",
														"src": "15493:4:1",
														"type": ""
													}
												],
												"src": "15400:222:1"
											},
											{
												"body": {
													"nativeSrc": "15668:76:1",
													"nodeType": "YulBlock",
													"src": "15668:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "15722:16:1",
																"nodeType": "YulBlock",
																"src": "15722:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15731:1:1",
																					"nodeType": "YulLiteral",
																					"src": "15731:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15734:1:1",
																					"nodeType": "YulLiteral",
																					"src": "15734:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15724:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "15724:6:1"
																			},
																			"nativeSrc": "15724:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15724:12:1"
																		},
																		"nativeSrc": "15724:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "15724:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15691:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "15691:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15713:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "15713:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "15698:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "15698:14:1"
																				},
																				"nativeSrc": "15698:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15698:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15688:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "15688:2:1"
																		},
																		"nativeSrc": "15688:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15688:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15681:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15681:6:1"
																},
																"nativeSrc": "15681:40:1",
																"nodeType": "YulFunctionCall",
																"src": "15681:40:1"
															},
															"nativeSrc": "15678:60:1",
															"nodeType": "YulIf",
															"src": "15678:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "15628:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15661:5:1",
														"nodeType": "YulTypedName",
														"src": "15661:5:1",
														"type": ""
													}
												],
												"src": "15628:116:1"
											},
											{
												"body": {
													"nativeSrc": "15799:84:1",
													"nodeType": "YulBlock",
													"src": "15799:84:1",
													"statements": [
														{
															"nativeSrc": "15809:29:1",
															"nodeType": "YulAssignment",
															"src": "15809:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15831:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15831:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15818:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "15818:12:1"
																},
																"nativeSrc": "15818:20:1",
																"nodeType": "YulFunctionCall",
																"src": "15818:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15809:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "15809:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15871:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15871:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15847:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "15847:23:1"
																},
																"nativeSrc": "15847:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15847:30:1"
															},
															"nativeSrc": "15847:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "15847:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "15750:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15777:6:1",
														"nodeType": "YulTypedName",
														"src": "15777:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15785:3:1",
														"nodeType": "YulTypedName",
														"src": "15785:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15793:5:1",
														"nodeType": "YulTypedName",
														"src": "15793:5:1",
														"type": ""
													}
												],
												"src": "15750:133:1"
											},
											{
												"body": {
													"nativeSrc": "15969:388:1",
													"nodeType": "YulBlock",
													"src": "15969:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "16015:83:1",
																"nodeType": "YulBlock",
																"src": "16015:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16017:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "16017:77:1"
																			},
																			"nativeSrc": "16017:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "16017:79:1"
																		},
																		"nativeSrc": "16017:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "16017:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15990:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "15990:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15999:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15999:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15986:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15986:3:1"
																		},
																		"nativeSrc": "15986:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15986:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16011:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16011:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15982:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15982:3:1"
																},
																"nativeSrc": "15982:32:1",
																"nodeType": "YulFunctionCall",
																"src": "15982:32:1"
															},
															"nativeSrc": "15979:119:1",
															"nodeType": "YulIf",
															"src": "15979:119:1"
														},
														{
															"nativeSrc": "16108:117:1",
															"nodeType": "YulBlock",
															"src": "16108:117:1",
															"statements": [
																{
																	"nativeSrc": "16123:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16123:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16137:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16137:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16127:6:1",
																			"nodeType": "YulTypedName",
																			"src": "16127:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16152:63:1",
																	"nodeType": "YulAssignment",
																	"src": "16152:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16187:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "16187:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16198:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "16198:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16183:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "16183:3:1"
																				},
																				"nativeSrc": "16183:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16183:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16207:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16207:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16162:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "16162:20:1"
																		},
																		"nativeSrc": "16162:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16162:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16152:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "16152:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16235:115:1",
															"nodeType": "YulBlock",
															"src": "16235:115:1",
															"statements": [
																{
																	"nativeSrc": "16250:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16250:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16264:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16264:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16254:6:1",
																			"nodeType": "YulTypedName",
																			"src": "16254:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16280:60:1",
																	"nodeType": "YulAssignment",
																	"src": "16280:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16312:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "16312:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16323:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "16323:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16308:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "16308:3:1"
																				},
																				"nativeSrc": "16308:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16308:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16332:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16332:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "16290:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "16290:17:1"
																		},
																		"nativeSrc": "16290:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16290:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16280:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "16280:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "15889:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15931:9:1",
														"nodeType": "YulTypedName",
														"src": "15931:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15942:7:1",
														"nodeType": "YulTypedName",
														"src": "15942:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15954:6:1",
														"nodeType": "YulTypedName",
														"src": "15954:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15962:6:1",
														"nodeType": "YulTypedName",
														"src": "15962:6:1",
														"type": ""
													}
												],
												"src": "15889:468:1"
											},
											{
												"body": {
													"nativeSrc": "16446:391:1",
													"nodeType": "YulBlock",
													"src": "16446:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "16492:83:1",
																"nodeType": "YulBlock",
																"src": "16492:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16494:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "16494:77:1"
																			},
																			"nativeSrc": "16494:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "16494:79:1"
																		},
																		"nativeSrc": "16494:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "16494:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16467:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16467:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16476:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16476:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16463:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16463:3:1"
																		},
																		"nativeSrc": "16463:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16463:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16488:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16488:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16459:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16459:3:1"
																},
																"nativeSrc": "16459:32:1",
																"nodeType": "YulFunctionCall",
																"src": "16459:32:1"
															},
															"nativeSrc": "16456:119:1",
															"nodeType": "YulIf",
															"src": "16456:119:1"
														},
														{
															"nativeSrc": "16585:117:1",
															"nodeType": "YulBlock",
															"src": "16585:117:1",
															"statements": [
																{
																	"nativeSrc": "16600:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16600:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16614:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16614:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16604:6:1",
																			"nodeType": "YulTypedName",
																			"src": "16604:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16629:63:1",
																	"nodeType": "YulAssignment",
																	"src": "16629:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16664:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "16664:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16675:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "16675:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16660:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "16660:3:1"
																				},
																				"nativeSrc": "16660:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16660:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16684:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16684:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16639:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "16639:20:1"
																		},
																		"nativeSrc": "16639:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16639:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16629:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "16629:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16712:118:1",
															"nodeType": "YulBlock",
															"src": "16712:118:1",
															"statements": [
																{
																	"nativeSrc": "16727:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16727:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16741:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16741:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16731:6:1",
																			"nodeType": "YulTypedName",
																			"src": "16731:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16757:63:1",
																	"nodeType": "YulAssignment",
																	"src": "16757:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16792:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "16792:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16803:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "16803:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16788:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "16788:3:1"
																				},
																				"nativeSrc": "16788:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16788:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16812:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16812:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16767:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "16767:20:1"
																		},
																		"nativeSrc": "16767:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16767:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16757:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "16757:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "16363:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16408:9:1",
														"nodeType": "YulTypedName",
														"src": "16408:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16419:7:1",
														"nodeType": "YulTypedName",
														"src": "16419:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16431:6:1",
														"nodeType": "YulTypedName",
														"src": "16431:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16439:6:1",
														"nodeType": "YulTypedName",
														"src": "16439:6:1",
														"type": ""
													}
												],
												"src": "16363:474:1"
											},
											{
												"body": {
													"nativeSrc": "16986:946:1",
													"nodeType": "YulBlock",
													"src": "16986:946:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "17033:83:1",
																"nodeType": "YulBlock",
																"src": "17033:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17035:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "17035:77:1"
																			},
																			"nativeSrc": "17035:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17035:79:1"
																		},
																		"nativeSrc": "17035:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17035:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17007:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17007:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17016:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17016:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17003:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17003:3:1"
																		},
																		"nativeSrc": "17003:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17003:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17028:3:1",
																		"nodeType": "YulLiteral",
																		"src": "17028:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16999:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16999:3:1"
																},
																"nativeSrc": "16999:33:1",
																"nodeType": "YulFunctionCall",
																"src": "16999:33:1"
															},
															"nativeSrc": "16996:120:1",
															"nodeType": "YulIf",
															"src": "16996:120:1"
														},
														{
															"nativeSrc": "17126:117:1",
															"nodeType": "YulBlock",
															"src": "17126:117:1",
															"statements": [
																{
																	"nativeSrc": "17141:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17141:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17155:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17155:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17145:6:1",
																			"nodeType": "YulTypedName",
																			"src": "17145:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17170:63:1",
																	"nodeType": "YulAssignment",
																	"src": "17170:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17205:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "17205:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17216:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "17216:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17201:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17201:3:1"
																				},
																				"nativeSrc": "17201:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17201:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17225:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17225:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17180:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "17180:20:1"
																		},
																		"nativeSrc": "17180:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17180:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17170:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "17170:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17253:118:1",
															"nodeType": "YulBlock",
															"src": "17253:118:1",
															"statements": [
																{
																	"nativeSrc": "17268:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17268:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17282:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17282:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17272:6:1",
																			"nodeType": "YulTypedName",
																			"src": "17272:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17298:63:1",
																	"nodeType": "YulAssignment",
																	"src": "17298:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17333:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "17333:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17344:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "17344:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17329:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17329:3:1"
																				},
																				"nativeSrc": "17329:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17329:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17353:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17353:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17308:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "17308:20:1"
																		},
																		"nativeSrc": "17308:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17308:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17298:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "17298:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17381:118:1",
															"nodeType": "YulBlock",
															"src": "17381:118:1",
															"statements": [
																{
																	"nativeSrc": "17396:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17396:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17410:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17410:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17400:6:1",
																			"nodeType": "YulTypedName",
																			"src": "17400:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17426:63:1",
																	"nodeType": "YulAssignment",
																	"src": "17426:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17461:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "17461:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17472:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "17472:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17457:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17457:3:1"
																				},
																				"nativeSrc": "17457:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17457:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17481:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17481:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17436:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "17436:20:1"
																		},
																		"nativeSrc": "17436:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17436:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17426:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "17426:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17509:118:1",
															"nodeType": "YulBlock",
															"src": "17509:118:1",
															"statements": [
																{
																	"nativeSrc": "17524:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17524:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17538:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17538:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17528:6:1",
																			"nodeType": "YulTypedName",
																			"src": "17528:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17554:63:1",
																	"nodeType": "YulAssignment",
																	"src": "17554:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17589:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "17589:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17600:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "17600:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17585:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17585:3:1"
																				},
																				"nativeSrc": "17585:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17585:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17609:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17609:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17564:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "17564:20:1"
																		},
																		"nativeSrc": "17564:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17564:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "17554:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "17554:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17637:288:1",
															"nodeType": "YulBlock",
															"src": "17637:288:1",
															"statements": [
																{
																	"nativeSrc": "17652:47:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17652:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17683:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "17683:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17694:3:1",
																						"nodeType": "YulLiteral",
																						"src": "17694:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17679:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17679:3:1"
																				},
																				"nativeSrc": "17679:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17679:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17666:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "17666:12:1"
																		},
																		"nativeSrc": "17666:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17666:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17656:6:1",
																			"nodeType": "YulTypedName",
																			"src": "17656:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "17746:83:1",
																		"nodeType": "YulBlock",
																		"src": "17746:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "17748:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "17748:77:1"
																					},
																					"nativeSrc": "17748:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "17748:79:1"
																				},
																				"nativeSrc": "17748:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "17748:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "17718:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "17718:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17726:18:1",
																				"nodeType": "YulLiteral",
																				"src": "17726:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "17715:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "17715:2:1"
																		},
																		"nativeSrc": "17715:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17715:30:1"
																	},
																	"nativeSrc": "17712:117:1",
																	"nodeType": "YulIf",
																	"src": "17712:117:1"
																},
																{
																	"nativeSrc": "17843:72:1",
																	"nodeType": "YulAssignment",
																	"src": "17843:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17887:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "17887:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17898:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "17898:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17883:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17883:3:1"
																				},
																				"nativeSrc": "17883:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17883:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17907:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17907:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "17853:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "17853:29:1"
																		},
																		"nativeSrc": "17853:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17853:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "17843:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "17843:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "16843:1089:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16924:9:1",
														"nodeType": "YulTypedName",
														"src": "16924:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16935:7:1",
														"nodeType": "YulTypedName",
														"src": "16935:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16947:6:1",
														"nodeType": "YulTypedName",
														"src": "16947:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16955:6:1",
														"nodeType": "YulTypedName",
														"src": "16955:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16963:6:1",
														"nodeType": "YulTypedName",
														"src": "16963:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16971:6:1",
														"nodeType": "YulTypedName",
														"src": "16971:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16979:6:1",
														"nodeType": "YulTypedName",
														"src": "16979:6:1",
														"type": ""
													}
												],
												"src": "16843:1089:1"
											},
											{
												"body": {
													"nativeSrc": "18004:263:1",
													"nodeType": "YulBlock",
													"src": "18004:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "18050:83:1",
																"nodeType": "YulBlock",
																"src": "18050:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18052:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "18052:77:1"
																			},
																			"nativeSrc": "18052:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18052:79:1"
																		},
																		"nativeSrc": "18052:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "18052:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18025:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "18025:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18034:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18034:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18021:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18021:3:1"
																		},
																		"nativeSrc": "18021:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18021:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18046:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18046:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18017:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18017:3:1"
																},
																"nativeSrc": "18017:32:1",
																"nodeType": "YulFunctionCall",
																"src": "18017:32:1"
															},
															"nativeSrc": "18014:119:1",
															"nodeType": "YulIf",
															"src": "18014:119:1"
														},
														{
															"nativeSrc": "18143:117:1",
															"nodeType": "YulBlock",
															"src": "18143:117:1",
															"statements": [
																{
																	"nativeSrc": "18158:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18158:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18172:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18172:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18162:6:1",
																			"nodeType": "YulTypedName",
																			"src": "18162:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18187:63:1",
																	"nodeType": "YulAssignment",
																	"src": "18187:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18222:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "18222:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18233:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "18233:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18218:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "18218:3:1"
																				},
																				"nativeSrc": "18218:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "18218:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18242:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "18242:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18197:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "18197:20:1"
																		},
																		"nativeSrc": "18197:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18197:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18187:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "18187:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "17938:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17974:9:1",
														"nodeType": "YulTypedName",
														"src": "17974:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17985:7:1",
														"nodeType": "YulTypedName",
														"src": "17985:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17997:6:1",
														"nodeType": "YulTypedName",
														"src": "17997:6:1",
														"type": ""
													}
												],
												"src": "17938:329:1"
											},
											{
												"body": {
													"nativeSrc": "18301:152:1",
													"nodeType": "YulBlock",
													"src": "18301:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18318:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18318:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18321:77:1",
																		"nodeType": "YulLiteral",
																		"src": "18321:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18311:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18311:6:1"
																},
																"nativeSrc": "18311:88:1",
																"nodeType": "YulFunctionCall",
																"src": "18311:88:1"
															},
															"nativeSrc": "18311:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "18311:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18415:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18415:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18418:4:1",
																		"nodeType": "YulLiteral",
																		"src": "18418:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18408:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18408:6:1"
																},
																"nativeSrc": "18408:15:1",
																"nodeType": "YulFunctionCall",
																"src": "18408:15:1"
															},
															"nativeSrc": "18408:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "18408:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18439:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18439:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18442:4:1",
																		"nodeType": "YulLiteral",
																		"src": "18442:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18432:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18432:6:1"
																},
																"nativeSrc": "18432:15:1",
																"nodeType": "YulFunctionCall",
																"src": "18432:15:1"
															},
															"nativeSrc": "18432:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "18432:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "18273:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "18273:180:1"
											},
											{
												"body": {
													"nativeSrc": "18510:269:1",
													"nodeType": "YulBlock",
													"src": "18510:269:1",
													"statements": [
														{
															"nativeSrc": "18520:22:1",
															"nodeType": "YulAssignment",
															"src": "18520:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18534:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "18534:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18540:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18540:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18530:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18530:3:1"
																},
																"nativeSrc": "18530:12:1",
																"nodeType": "YulFunctionCall",
																"src": "18530:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18520:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18520:6:1"
																}
															]
														},
														{
															"nativeSrc": "18551:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "18551:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18581:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "18581:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18587:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18587:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18577:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18577:3:1"
																},
																"nativeSrc": "18577:12:1",
																"nodeType": "YulFunctionCall",
																"src": "18577:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "18555:18:1",
																	"nodeType": "YulTypedName",
																	"src": "18555:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18628:51:1",
																"nodeType": "YulBlock",
																"src": "18628:51:1",
																"statements": [
																	{
																		"nativeSrc": "18642:27:1",
																		"nodeType": "YulAssignment",
																		"src": "18642:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "18656:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "18656:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18664:4:1",
																					"nodeType": "YulLiteral",
																					"src": "18664:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "18652:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "18652:3:1"
																			},
																			"nativeSrc": "18652:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18652:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "18642:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "18642:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18608:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "18608:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18601:6:1"
																},
																"nativeSrc": "18601:26:1",
																"nodeType": "YulFunctionCall",
																"src": "18601:26:1"
															},
															"nativeSrc": "18598:81:1",
															"nodeType": "YulIf",
															"src": "18598:81:1"
														},
														{
															"body": {
																"nativeSrc": "18731:42:1",
																"nodeType": "YulBlock",
																"src": "18731:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "18745:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "18745:16:1"
																			},
																			"nativeSrc": "18745:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18745:18:1"
																		},
																		"nativeSrc": "18745:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "18745:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18695:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "18695:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18718:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "18718:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18726:2:1",
																				"nodeType": "YulLiteral",
																				"src": "18726:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "18715:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "18715:2:1"
																		},
																		"nativeSrc": "18715:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18715:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18692:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "18692:2:1"
																},
																"nativeSrc": "18692:38:1",
																"nodeType": "YulFunctionCall",
																"src": "18692:38:1"
															},
															"nativeSrc": "18689:84:1",
															"nodeType": "YulIf",
															"src": "18689:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "18459:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18494:4:1",
														"nodeType": "YulTypedName",
														"src": "18494:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18503:6:1",
														"nodeType": "YulTypedName",
														"src": "18503:6:1",
														"type": ""
													}
												],
												"src": "18459:320:1"
											},
											{
												"body": {
													"nativeSrc": "18911:206:1",
													"nodeType": "YulBlock",
													"src": "18911:206:1",
													"statements": [
														{
															"nativeSrc": "18921:26:1",
															"nodeType": "YulAssignment",
															"src": "18921:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18933:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "18933:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18944:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18944:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18929:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18929:3:1"
																},
																"nativeSrc": "18929:18:1",
																"nodeType": "YulFunctionCall",
																"src": "18929:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18921:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "18921:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19001:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19001:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19014:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19014:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19025:1:1",
																				"nodeType": "YulLiteral",
																				"src": "19025:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19010:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19010:3:1"
																		},
																		"nativeSrc": "19010:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19010:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18957:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18957:43:1"
																},
																"nativeSrc": "18957:71:1",
																"nodeType": "YulFunctionCall",
																"src": "18957:71:1"
															},
															"nativeSrc": "18957:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "18957:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19082:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19082:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19095:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19095:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19106:2:1",
																				"nodeType": "YulLiteral",
																				"src": "19106:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19091:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19091:3:1"
																		},
																		"nativeSrc": "19091:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19091:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19038:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "19038:43:1"
																},
																"nativeSrc": "19038:72:1",
																"nodeType": "YulFunctionCall",
																"src": "19038:72:1"
															},
															"nativeSrc": "19038:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "19038:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "18785:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18875:9:1",
														"nodeType": "YulTypedName",
														"src": "18875:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18887:6:1",
														"nodeType": "YulTypedName",
														"src": "18887:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18895:6:1",
														"nodeType": "YulTypedName",
														"src": "18895:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18906:4:1",
														"nodeType": "YulTypedName",
														"src": "18906:4:1",
														"type": ""
													}
												],
												"src": "18785:332:1"
											},
											{
												"body": {
													"nativeSrc": "19249:206:1",
													"nodeType": "YulBlock",
													"src": "19249:206:1",
													"statements": [
														{
															"nativeSrc": "19259:26:1",
															"nodeType": "YulAssignment",
															"src": "19259:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19271:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "19271:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19282:2:1",
																		"nodeType": "YulLiteral",
																		"src": "19282:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19267:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19267:3:1"
																},
																"nativeSrc": "19267:18:1",
																"nodeType": "YulFunctionCall",
																"src": "19267:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19259:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "19259:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19339:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19339:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19352:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19352:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19363:1:1",
																				"nodeType": "YulLiteral",
																				"src": "19363:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19348:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19348:3:1"
																		},
																		"nativeSrc": "19348:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19348:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19295:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "19295:43:1"
																},
																"nativeSrc": "19295:71:1",
																"nodeType": "YulFunctionCall",
																"src": "19295:71:1"
															},
															"nativeSrc": "19295:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "19295:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19420:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19420:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19433:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19433:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19444:2:1",
																				"nodeType": "YulLiteral",
																				"src": "19444:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19429:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19429:3:1"
																		},
																		"nativeSrc": "19429:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19429:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19376:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "19376:43:1"
																},
																"nativeSrc": "19376:72:1",
																"nodeType": "YulFunctionCall",
																"src": "19376:72:1"
															},
															"nativeSrc": "19376:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "19376:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19123:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19213:9:1",
														"nodeType": "YulTypedName",
														"src": "19213:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19225:6:1",
														"nodeType": "YulTypedName",
														"src": "19225:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19233:6:1",
														"nodeType": "YulTypedName",
														"src": "19233:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19244:4:1",
														"nodeType": "YulTypedName",
														"src": "19244:4:1",
														"type": ""
													}
												],
												"src": "19123:332:1"
											},
											{
												"body": {
													"nativeSrc": "19489:152:1",
													"nodeType": "YulBlock",
													"src": "19489:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19506:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19506:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19509:77:1",
																		"nodeType": "YulLiteral",
																		"src": "19509:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19499:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19499:6:1"
																},
																"nativeSrc": "19499:88:1",
																"nodeType": "YulFunctionCall",
																"src": "19499:88:1"
															},
															"nativeSrc": "19499:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "19499:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19603:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19603:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19606:4:1",
																		"nodeType": "YulLiteral",
																		"src": "19606:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19596:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19596:6:1"
																},
																"nativeSrc": "19596:15:1",
																"nodeType": "YulFunctionCall",
																"src": "19596:15:1"
															},
															"nativeSrc": "19596:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "19596:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19627:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19627:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19630:4:1",
																		"nodeType": "YulLiteral",
																		"src": "19630:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19620:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19620:6:1"
																},
																"nativeSrc": "19620:15:1",
																"nodeType": "YulFunctionCall",
																"src": "19620:15:1"
															},
															"nativeSrc": "19620:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "19620:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "19461:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "19461:180:1"
											},
											{
												"body": {
													"nativeSrc": "19829:371:1",
													"nodeType": "YulBlock",
													"src": "19829:371:1",
													"statements": [
														{
															"nativeSrc": "19839:27:1",
															"nodeType": "YulAssignment",
															"src": "19839:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19851:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "19851:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19862:3:1",
																		"nodeType": "YulLiteral",
																		"src": "19862:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19847:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19847:3:1"
																},
																"nativeSrc": "19847:19:1",
																"nodeType": "YulFunctionCall",
																"src": "19847:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19839:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "19839:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19920:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19920:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19933:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19933:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19944:1:1",
																				"nodeType": "YulLiteral",
																				"src": "19944:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19929:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19929:3:1"
																		},
																		"nativeSrc": "19929:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19929:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19876:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "19876:43:1"
																},
																"nativeSrc": "19876:71:1",
																"nodeType": "YulFunctionCall",
																"src": "19876:71:1"
															},
															"nativeSrc": "19876:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "19876:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20001:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20001:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20014:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20014:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20025:2:1",
																				"nodeType": "YulLiteral",
																				"src": "20025:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20010:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20010:3:1"
																		},
																		"nativeSrc": "20010:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20010:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19957:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "19957:43:1"
																},
																"nativeSrc": "19957:72:1",
																"nodeType": "YulFunctionCall",
																"src": "19957:72:1"
															},
															"nativeSrc": "19957:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "19957:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20083:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20083:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20096:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20096:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20107:2:1",
																				"nodeType": "YulLiteral",
																				"src": "20107:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20092:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20092:3:1"
																		},
																		"nativeSrc": "20092:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20092:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20039:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "20039:43:1"
																},
																"nativeSrc": "20039:72:1",
																"nodeType": "YulFunctionCall",
																"src": "20039:72:1"
															},
															"nativeSrc": "20039:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "20039:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20165:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20165:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20178:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20178:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20189:2:1",
																				"nodeType": "YulLiteral",
																				"src": "20189:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20174:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20174:3:1"
																		},
																		"nativeSrc": "20174:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20174:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20121:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "20121:43:1"
																},
																"nativeSrc": "20121:72:1",
																"nodeType": "YulFunctionCall",
																"src": "20121:72:1"
															},
															"nativeSrc": "20121:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "20121:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19647:553:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19777:9:1",
														"nodeType": "YulTypedName",
														"src": "19777:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19789:6:1",
														"nodeType": "YulTypedName",
														"src": "19789:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19797:6:1",
														"nodeType": "YulTypedName",
														"src": "19797:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19805:6:1",
														"nodeType": "YulTypedName",
														"src": "19805:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19813:6:1",
														"nodeType": "YulTypedName",
														"src": "19813:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19824:4:1",
														"nodeType": "YulTypedName",
														"src": "19824:4:1",
														"type": ""
													}
												],
												"src": "19647:553:1"
											},
											{
												"body": {
													"nativeSrc": "20234:152:1",
													"nodeType": "YulBlock",
													"src": "20234:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20251:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20251:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20254:77:1",
																		"nodeType": "YulLiteral",
																		"src": "20254:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20244:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20244:6:1"
																},
																"nativeSrc": "20244:88:1",
																"nodeType": "YulFunctionCall",
																"src": "20244:88:1"
															},
															"nativeSrc": "20244:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "20244:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20348:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20348:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20351:4:1",
																		"nodeType": "YulLiteral",
																		"src": "20351:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20341:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20341:6:1"
																},
																"nativeSrc": "20341:15:1",
																"nodeType": "YulFunctionCall",
																"src": "20341:15:1"
															},
															"nativeSrc": "20341:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "20341:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20372:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20372:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20375:4:1",
																		"nodeType": "YulLiteral",
																		"src": "20375:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20365:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20365:6:1"
																},
																"nativeSrc": "20365:15:1",
																"nodeType": "YulFunctionCall",
																"src": "20365:15:1"
															},
															"nativeSrc": "20365:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "20365:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "20206:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "20206:180:1"
											},
											{
												"body": {
													"nativeSrc": "20436:147:1",
													"nodeType": "YulBlock",
													"src": "20436:147:1",
													"statements": [
														{
															"nativeSrc": "20446:25:1",
															"nodeType": "YulAssignment",
															"src": "20446:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20469:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "20469:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20451:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "20451:17:1"
																},
																"nativeSrc": "20451:20:1",
																"nodeType": "YulFunctionCall",
																"src": "20451:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20446:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "20446:1:1"
																}
															]
														},
														{
															"nativeSrc": "20480:25:1",
															"nodeType": "YulAssignment",
															"src": "20480:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20503:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "20503:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20485:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "20485:17:1"
																},
																"nativeSrc": "20485:20:1",
																"nodeType": "YulFunctionCall",
																"src": "20485:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20480:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "20480:1:1"
																}
															]
														},
														{
															"nativeSrc": "20514:16:1",
															"nodeType": "YulAssignment",
															"src": "20514:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20525:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "20525:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20528:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "20528:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20521:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20521:3:1"
																},
																"nativeSrc": "20521:9:1",
																"nodeType": "YulFunctionCall",
																"src": "20521:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "20514:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20514:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20554:22:1",
																"nodeType": "YulBlock",
																"src": "20554:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20556:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "20556:16:1"
																			},
																			"nativeSrc": "20556:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "20556:18:1"
																		},
																		"nativeSrc": "20556:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "20556:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20546:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "20546:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "20549:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20549:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20543:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "20543:2:1"
																},
																"nativeSrc": "20543:10:1",
																"nodeType": "YulFunctionCall",
																"src": "20543:10:1"
															},
															"nativeSrc": "20540:36:1",
															"nodeType": "YulIf",
															"src": "20540:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "20392:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20423:1:1",
														"nodeType": "YulTypedName",
														"src": "20423:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20426:1:1",
														"nodeType": "YulTypedName",
														"src": "20426:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "20432:3:1",
														"nodeType": "YulTypedName",
														"src": "20432:3:1",
														"type": ""
													}
												],
												"src": "20392:191:1"
											},
											{
												"body": {
													"nativeSrc": "20815:408:1",
													"nodeType": "YulBlock",
													"src": "20815:408:1",
													"statements": [
														{
															"nativeSrc": "20825:26:1",
															"nodeType": "YulAssignment",
															"src": "20825:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20837:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "20837:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20848:2:1",
																		"nodeType": "YulLiteral",
																		"src": "20848:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20833:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20833:3:1"
																},
																"nativeSrc": "20833:18:1",
																"nodeType": "YulFunctionCall",
																"src": "20833:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20825:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "20825:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20872:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20872:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20883:1:1",
																				"nodeType": "YulLiteral",
																				"src": "20883:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20868:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20868:3:1"
																		},
																		"nativeSrc": "20868:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20868:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20891:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "20891:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20897:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20897:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20887:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20887:3:1"
																		},
																		"nativeSrc": "20887:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20887:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20861:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20861:6:1"
																},
																"nativeSrc": "20861:47:1",
																"nodeType": "YulFunctionCall",
																"src": "20861:47:1"
															},
															"nativeSrc": "20861:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "20861:47:1"
														},
														{
															"nativeSrc": "20917:116:1",
															"nodeType": "YulAssignment",
															"src": "20917:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21019:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21019:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21028:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "21028:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "20925:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "20925:93:1"
																},
																"nativeSrc": "20925:108:1",
																"nodeType": "YulFunctionCall",
																"src": "20925:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20917:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "20917:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21054:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21054:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21065:2:1",
																				"nodeType": "YulLiteral",
																				"src": "21065:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21050:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21050:3:1"
																		},
																		"nativeSrc": "21050:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21050:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21074:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "21074:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21080:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21080:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21070:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21070:3:1"
																		},
																		"nativeSrc": "21070:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21070:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21043:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21043:6:1"
																},
																"nativeSrc": "21043:48:1",
																"nodeType": "YulFunctionCall",
																"src": "21043:48:1"
															},
															"nativeSrc": "21043:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "21043:48:1"
														},
														{
															"nativeSrc": "21100:116:1",
															"nodeType": "YulAssignment",
															"src": "21100:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21202:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21202:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21211:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "21211:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "21108:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "21108:93:1"
																},
																"nativeSrc": "21108:108:1",
																"nodeType": "YulFunctionCall",
																"src": "21108:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21100:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "21100:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "20589:634:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20779:9:1",
														"nodeType": "YulTypedName",
														"src": "20779:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20791:6:1",
														"nodeType": "YulTypedName",
														"src": "20791:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20799:6:1",
														"nodeType": "YulTypedName",
														"src": "20799:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20810:4:1",
														"nodeType": "YulTypedName",
														"src": "20810:4:1",
														"type": ""
													}
												],
												"src": "20589:634:1"
											},
											{
												"body": {
													"nativeSrc": "21287:40:1",
													"nodeType": "YulBlock",
													"src": "21287:40:1",
													"statements": [
														{
															"nativeSrc": "21298:22:1",
															"nodeType": "YulAssignment",
															"src": "21298:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21314:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "21314:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21308:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "21308:5:1"
																},
																"nativeSrc": "21308:12:1",
																"nodeType": "YulFunctionCall",
																"src": "21308:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21298:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21298:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "21229:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21270:5:1",
														"nodeType": "YulTypedName",
														"src": "21270:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21280:6:1",
														"nodeType": "YulTypedName",
														"src": "21280:6:1",
														"type": ""
													}
												],
												"src": "21229:98:1"
											},
											{
												"body": {
													"nativeSrc": "21428:73:1",
													"nodeType": "YulBlock",
													"src": "21428:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21445:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21445:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21450:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21438:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21438:6:1"
																},
																"nativeSrc": "21438:19:1",
																"nodeType": "YulFunctionCall",
																"src": "21438:19:1"
															},
															"nativeSrc": "21438:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "21438:19:1"
														},
														{
															"nativeSrc": "21466:29:1",
															"nodeType": "YulAssignment",
															"src": "21466:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21485:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21485:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21490:4:1",
																		"nodeType": "YulLiteral",
																		"src": "21490:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21481:3:1"
																},
																"nativeSrc": "21481:14:1",
																"nodeType": "YulFunctionCall",
																"src": "21481:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21466:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "21466:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21333:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21400:3:1",
														"nodeType": "YulTypedName",
														"src": "21400:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21405:6:1",
														"nodeType": "YulTypedName",
														"src": "21405:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21416:11:1",
														"nodeType": "YulTypedName",
														"src": "21416:11:1",
														"type": ""
													}
												],
												"src": "21333:168:1"
											},
											{
												"body": {
													"nativeSrc": "21597:283:1",
													"nodeType": "YulBlock",
													"src": "21597:283:1",
													"statements": [
														{
															"nativeSrc": "21607:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "21607:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21653:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "21653:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "21621:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "21621:31:1"
																},
																"nativeSrc": "21621:38:1",
																"nodeType": "YulFunctionCall",
																"src": "21621:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21611:6:1",
																	"nodeType": "YulTypedName",
																	"src": "21611:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21668:77:1",
															"nodeType": "YulAssignment",
															"src": "21668:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21733:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21733:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21738:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21738:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21675:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "21675:57:1"
																},
																"nativeSrc": "21675:70:1",
																"nodeType": "YulFunctionCall",
																"src": "21675:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21668:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21668:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21793:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "21793:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21800:4:1",
																				"nodeType": "YulLiteral",
																				"src": "21800:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21789:3:1"
																		},
																		"nativeSrc": "21789:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21789:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21807:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21807:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21812:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21812:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21754:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "21754:34:1"
																},
																"nativeSrc": "21754:65:1",
																"nodeType": "YulFunctionCall",
																"src": "21754:65:1"
															},
															"nativeSrc": "21754:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "21754:65:1"
														},
														{
															"nativeSrc": "21828:46:1",
															"nodeType": "YulAssignment",
															"src": "21828:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21839:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21839:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21866:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "21866:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "21844:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "21844:21:1"
																		},
																		"nativeSrc": "21844:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21844:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21835:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21835:3:1"
																},
																"nativeSrc": "21835:39:1",
																"nodeType": "YulFunctionCall",
																"src": "21835:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21828:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21828:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21507:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21578:5:1",
														"nodeType": "YulTypedName",
														"src": "21578:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21585:3:1",
														"nodeType": "YulTypedName",
														"src": "21585:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21593:3:1",
														"nodeType": "YulTypedName",
														"src": "21593:3:1",
														"type": ""
													}
												],
												"src": "21507:373:1"
											},
											{
												"body": {
													"nativeSrc": "22114:523:1",
													"nodeType": "YulBlock",
													"src": "22114:523:1",
													"statements": [
														{
															"nativeSrc": "22124:27:1",
															"nodeType": "YulAssignment",
															"src": "22124:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22136:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "22136:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22147:3:1",
																		"nodeType": "YulLiteral",
																		"src": "22147:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22132:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22132:3:1"
																},
																"nativeSrc": "22132:19:1",
																"nodeType": "YulFunctionCall",
																"src": "22132:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22124:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "22124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22205:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22205:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22218:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22218:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22229:1:1",
																				"nodeType": "YulLiteral",
																				"src": "22229:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22214:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22214:3:1"
																		},
																		"nativeSrc": "22214:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22214:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22161:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "22161:43:1"
																},
																"nativeSrc": "22161:71:1",
																"nodeType": "YulFunctionCall",
																"src": "22161:71:1"
															},
															"nativeSrc": "22161:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "22161:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22286:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22286:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22299:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22299:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22310:2:1",
																				"nodeType": "YulLiteral",
																				"src": "22310:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22295:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22295:3:1"
																		},
																		"nativeSrc": "22295:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22295:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22242:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "22242:43:1"
																},
																"nativeSrc": "22242:72:1",
																"nodeType": "YulFunctionCall",
																"src": "22242:72:1"
															},
															"nativeSrc": "22242:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "22242:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22368:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22368:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22381:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22381:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22392:2:1",
																				"nodeType": "YulLiteral",
																				"src": "22392:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22377:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22377:3:1"
																		},
																		"nativeSrc": "22377:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22377:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22324:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "22324:43:1"
																},
																"nativeSrc": "22324:72:1",
																"nodeType": "YulFunctionCall",
																"src": "22324:72:1"
															},
															"nativeSrc": "22324:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "22324:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "22450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22450:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22463:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22463:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22474:2:1",
																				"nodeType": "YulLiteral",
																				"src": "22474:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22459:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22459:3:1"
																		},
																		"nativeSrc": "22459:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22459:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22406:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "22406:43:1"
																},
																"nativeSrc": "22406:72:1",
																"nodeType": "YulFunctionCall",
																"src": "22406:72:1"
															},
															"nativeSrc": "22406:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "22406:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22499:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22499:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22510:3:1",
																				"nodeType": "YulLiteral",
																				"src": "22510:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22495:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22495:3:1"
																		},
																		"nativeSrc": "22495:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22495:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22520:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "22520:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22526:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22526:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22516:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22516:3:1"
																		},
																		"nativeSrc": "22516:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22516:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22488:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22488:6:1"
																},
																"nativeSrc": "22488:49:1",
																"nodeType": "YulFunctionCall",
																"src": "22488:49:1"
															},
															"nativeSrc": "22488:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "22488:49:1"
														},
														{
															"nativeSrc": "22546:84:1",
															"nodeType": "YulAssignment",
															"src": "22546:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "22616:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22616:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22625:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "22625:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22554:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "22554:61:1"
																},
																"nativeSrc": "22554:76:1",
																"nodeType": "YulFunctionCall",
																"src": "22554:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22546:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "22546:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21886:751:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22054:9:1",
														"nodeType": "YulTypedName",
														"src": "22054:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "22066:6:1",
														"nodeType": "YulTypedName",
														"src": "22066:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22074:6:1",
														"nodeType": "YulTypedName",
														"src": "22074:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22082:6:1",
														"nodeType": "YulTypedName",
														"src": "22082:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22090:6:1",
														"nodeType": "YulTypedName",
														"src": "22090:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22098:6:1",
														"nodeType": "YulTypedName",
														"src": "22098:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22109:4:1",
														"nodeType": "YulTypedName",
														"src": "22109:4:1",
														"type": ""
													}
												],
												"src": "21886:751:1"
											},
											{
												"body": {
													"nativeSrc": "22705:79:1",
													"nodeType": "YulBlock",
													"src": "22705:79:1",
													"statements": [
														{
															"nativeSrc": "22715:22:1",
															"nodeType": "YulAssignment",
															"src": "22715:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "22730:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22730:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22724:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "22724:5:1"
																},
																"nativeSrc": "22724:13:1",
																"nodeType": "YulFunctionCall",
																"src": "22724:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22715:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "22715:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22772:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "22772:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "22746:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "22746:25:1"
																},
																"nativeSrc": "22746:32:1",
																"nodeType": "YulFunctionCall",
																"src": "22746:32:1"
															},
															"nativeSrc": "22746:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "22746:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "22643:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "22683:6:1",
														"nodeType": "YulTypedName",
														"src": "22683:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22691:3:1",
														"nodeType": "YulTypedName",
														"src": "22691:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "22699:5:1",
														"nodeType": "YulTypedName",
														"src": "22699:5:1",
														"type": ""
													}
												],
												"src": "22643:141:1"
											},
											{
												"body": {
													"nativeSrc": "22866:273:1",
													"nodeType": "YulBlock",
													"src": "22866:273:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "22912:83:1",
																"nodeType": "YulBlock",
																"src": "22912:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22914:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "22914:77:1"
																			},
																			"nativeSrc": "22914:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "22914:79:1"
																		},
																		"nativeSrc": "22914:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "22914:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22887:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "22887:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22896:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22896:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22883:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22883:3:1"
																		},
																		"nativeSrc": "22883:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22883:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22908:2:1",
																		"nodeType": "YulLiteral",
																		"src": "22908:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22879:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22879:3:1"
																},
																"nativeSrc": "22879:32:1",
																"nodeType": "YulFunctionCall",
																"src": "22879:32:1"
															},
															"nativeSrc": "22876:119:1",
															"nodeType": "YulIf",
															"src": "22876:119:1"
														},
														{
															"nativeSrc": "23005:127:1",
															"nodeType": "YulBlock",
															"src": "23005:127:1",
															"statements": [
																{
																	"nativeSrc": "23020:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "23020:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23034:1:1",
																		"nodeType": "YulLiteral",
																		"src": "23034:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "23024:6:1",
																			"nodeType": "YulTypedName",
																			"src": "23024:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23049:73:1",
																	"nodeType": "YulAssignment",
																	"src": "23049:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23094:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "23094:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23105:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "23105:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23090:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "23090:3:1"
																				},
																				"nativeSrc": "23090:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "23090:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23114:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "23114:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "23059:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "23059:30:1"
																		},
																		"nativeSrc": "23059:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "23059:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "23049:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "23049:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "22790:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22836:9:1",
														"nodeType": "YulTypedName",
														"src": "22836:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22847:7:1",
														"nodeType": "YulTypedName",
														"src": "22847:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22859:6:1",
														"nodeType": "YulTypedName",
														"src": "22859:6:1",
														"type": ""
													}
												],
												"src": "22790:349:1"
											},
											{
												"body": {
													"nativeSrc": "23473:725:1",
													"nodeType": "YulBlock",
													"src": "23473:725:1",
													"statements": [
														{
															"nativeSrc": "23483:27:1",
															"nodeType": "YulAssignment",
															"src": "23483:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23495:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "23495:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23506:3:1",
																		"nodeType": "YulLiteral",
																		"src": "23506:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23491:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "23491:3:1"
																},
																"nativeSrc": "23491:19:1",
																"nodeType": "YulFunctionCall",
																"src": "23491:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23483:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "23483:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23564:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "23564:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23577:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "23577:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23588:1:1",
																				"nodeType": "YulLiteral",
																				"src": "23588:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23573:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "23573:3:1"
																		},
																		"nativeSrc": "23573:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "23573:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23520:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "23520:43:1"
																},
																"nativeSrc": "23520:71:1",
																"nodeType": "YulFunctionCall",
																"src": "23520:71:1"
															},
															"nativeSrc": "23520:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "23520:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23645:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "23645:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23658:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "23658:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23669:2:1",
																				"nodeType": "YulLiteral",
																				"src": "23669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23654:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "23654:3:1"
																		},
																		"nativeSrc": "23654:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "23654:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23601:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "23601:43:1"
																},
																"nativeSrc": "23601:72:1",
																"nodeType": "YulFunctionCall",
																"src": "23601:72:1"
															},
															"nativeSrc": "23601:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "23601:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23694:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "23694:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23705:2:1",
																				"nodeType": "YulLiteral",
																				"src": "23705:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23690:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "23690:3:1"
																		},
																		"nativeSrc": "23690:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "23690:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23714:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "23714:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23720:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "23720:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23710:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "23710:3:1"
																		},
																		"nativeSrc": "23710:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "23710:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23683:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "23683:6:1"
																},
																"nativeSrc": "23683:48:1",
																"nodeType": "YulFunctionCall",
																"src": "23683:48:1"
															},
															"nativeSrc": "23683:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "23683:48:1"
														},
														{
															"nativeSrc": "23740:116:1",
															"nodeType": "YulAssignment",
															"src": "23740:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23842:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "23842:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23851:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "23851:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "23748:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "23748:93:1"
																},
																"nativeSrc": "23748:108:1",
																"nodeType": "YulFunctionCall",
																"src": "23748:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23740:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "23740:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23877:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "23877:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23888:2:1",
																				"nodeType": "YulLiteral",
																				"src": "23888:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23873:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "23873:3:1"
																		},
																		"nativeSrc": "23873:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "23873:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23897:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "23897:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23903:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "23903:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23893:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "23893:3:1"
																		},
																		"nativeSrc": "23893:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "23893:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23866:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "23866:6:1"
																},
																"nativeSrc": "23866:48:1",
																"nodeType": "YulFunctionCall",
																"src": "23866:48:1"
															},
															"nativeSrc": "23866:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "23866:48:1"
														},
														{
															"nativeSrc": "23923:116:1",
															"nodeType": "YulAssignment",
															"src": "23923:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "24025:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "24025:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "24034:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "24034:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "23931:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "23931:93:1"
																},
																"nativeSrc": "23931:108:1",
																"nodeType": "YulFunctionCall",
																"src": "23931:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23923:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "23923:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24060:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "24060:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24071:3:1",
																				"nodeType": "YulLiteral",
																				"src": "24071:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24056:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "24056:3:1"
																		},
																		"nativeSrc": "24056:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "24056:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24081:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "24081:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24087:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "24087:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24077:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "24077:3:1"
																		},
																		"nativeSrc": "24077:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "24077:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24049:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "24049:6:1"
																},
																"nativeSrc": "24049:49:1",
																"nodeType": "YulFunctionCall",
																"src": "24049:49:1"
															},
															"nativeSrc": "24049:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "24049:49:1"
														},
														{
															"nativeSrc": "24107:84:1",
															"nodeType": "YulAssignment",
															"src": "24107:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "24177:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "24177:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "24186:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "24186:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "24115:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "24115:61:1"
																},
																"nativeSrc": "24115:76:1",
																"nodeType": "YulFunctionCall",
																"src": "24115:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24107:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "24107:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "23145:1053:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23413:9:1",
														"nodeType": "YulTypedName",
														"src": "23413:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "23425:6:1",
														"nodeType": "YulTypedName",
														"src": "23425:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "23433:6:1",
														"nodeType": "YulTypedName",
														"src": "23433:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23441:6:1",
														"nodeType": "YulTypedName",
														"src": "23441:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23449:6:1",
														"nodeType": "YulTypedName",
														"src": "23449:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23457:6:1",
														"nodeType": "YulTypedName",
														"src": "23457:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23468:4:1",
														"nodeType": "YulTypedName",
														"src": "23468:4:1",
														"type": ""
													}
												],
												"src": "23145:1053:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b1575f3560e01c8063731133e91161006f578063731133e91461019b5780638da5cb5b146101b7578063a22cb465146101d5578063e985e9c5146101f1578063f242432a14610221578063f2fde38b1461023d576100b1565b8062fdd58e146100b557806301ffc9a7146100e55780630e89341c146101155780632eb2c2d6146101455780634e1273f414610161578063715018a614610191575b5f80fd5b6100cf60048036038101906100ca9190611633565b610259565b6040516100dc9190611680565b60405180910390f35b6100ff60048036038101906100fa91906116ee565b6102ae565b60405161010c9190611733565b60405180910390f35b61012f600480360381019061012a919061174c565b61038f565b60405161013c91906117e7565b60405180910390f35b61015f600480360381019061015a91906119f7565b610421565b005b61017b60048036038101906101769190611b82565b6104c8565b6040516101889190611caf565b60405180910390f35b6101996105cf565b005b6101b560048036038101906101b09190611ccf565b6105e2565b005b6101bf6105fc565b6040516101cc9190611d5e565b60405180910390f35b6101ef60048036038101906101ea9190611da1565b610624565b005b61020b60048036038101906102069190611ddf565b61063a565b6040516102189190611733565b60405180910390f35b61023b60048036038101906102369190611e1d565b6106c8565b005b61025760048036038101906102529190611eb0565b61076f565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037857507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103885750610387826107f3565b5b9050919050565b60606002805461039e90611f08565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca90611f08565b80156104155780601f106103ec57610100808354040283529160200191610415565b820191905f5260205f20905b8154815290600101906020018083116103f857829003601f168201915b50505050509050919050565b5f61042a61085c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561046f575061046d868261063a565b155b156104b35780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016104aa929190611f38565b60405180910390fd5b6104c08686868686610863565b505050505050565b6060815183511461051457815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161050b929190611f5f565b60405180910390fd5b5f835167ffffffffffffffff8111156105305761052f61180b565b5b60405190808252806020026020018201604052801561055e5781602001602082028036833780820191505090505b5090505f5b84518110156105c45761059a610582828761095790919063ffffffff16565b610595838761096a90919063ffffffff16565b610259565b8282815181106105ad576105ac611f86565b5b602002602001018181525050806001019050610563565b508091505092915050565b6105d761097d565b6105e05f610a04565b565b6105ea61097d565b6105f684848484610ac7565b50505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61063661062f61085c565b8383610b5c565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6106d161085c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156107165750610714868261063a565b155b1561075a5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610751929190611f38565b60405180910390fd5b6107678686868686610cc5565b505050505050565b61077761097d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107e7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107de9190611d5e565b60405180910390fd5b6107f081610a04565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108d3575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016108ca9190611d5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610943575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161093a9190611d5e565b60405180910390fd5b6109508585858585610dcb565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b61098561085c565b73ffffffffffffffffffffffffffffffffffffffff166109a36105fc565b73ffffffffffffffffffffffffffffffffffffffff1614610a02576109c661085c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109f99190611d5e565b60405180910390fd5b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b37575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b2e9190611d5e565b60405180910390fd5b5f80610b438585610e77565b91509150610b545f87848487610dcb565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bcc575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610bc39190611d5e565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cb89190611733565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d35575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610d2c9190611d5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610da5575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610d9c9190611d5e565b60405180910390fd5b5f80610db18585610e77565b91509150610dc28787848487610dcb565b50505050505050565b610dd785858585610ea7565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610e70575f610e1361085c565b90506001845103610e5f575f610e325f8661096a90919063ffffffff16565b90505f610e485f8661096a90919063ffffffff16565b9050610e58838989858589611237565b5050610e6e565b610e6d8187878787876113e6565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610ef157815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ee8929190611f5f565b60405180910390fd5b5f610efa61085c565b90505f5b83518110156110f6575f610f1b828661096a90919063ffffffff16565b90505f610f31838661096a90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611054575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561100057888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610ff79493929190611fb3565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146110e957805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110e19190612023565b925050819055505b5050806001019050610efe565b5060018351036111b1575f6111145f8561096a90919063ffffffff16565b90505f61112a5f8561096a90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516111a2929190611f5f565b60405180910390a45050611230565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611227929190612056565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156113de578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016112979594939291906120dd565b6020604051808303815f875af19250505080156112d257506040513d601f19601f820116820180604052508101906112cf9190612149565b60015b611353573d805f8114611300576040519150601f19603f3d011682016040523d82523d5f602084013e611305565b606091505b505f81510361134b57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113429190611d5e565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113dc57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113d39190611d5e565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561158d578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611446959493929190612174565b6020604051808303815f875af192505050801561148157506040513d601f19601f8201168201806040525081019061147e9190612149565b60015b611502573d805f81146114af576040519150601f19603f3d011682016040523d82523d5f602084013e6114b4565b606091505b505f8151036114fa57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114f19190611d5e565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461158b57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115829190611d5e565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115cf826115a6565b9050919050565b6115df816115c5565b81146115e9575f80fd5b50565b5f813590506115fa816115d6565b92915050565b5f819050919050565b61161281611600565b811461161c575f80fd5b50565b5f8135905061162d81611609565b92915050565b5f80604083850312156116495761164861159e565b5b5f611656858286016115ec565b92505060206116678582860161161f565b9150509250929050565b61167a81611600565b82525050565b5f6020820190506116935f830184611671565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116cd81611699565b81146116d7575f80fd5b50565b5f813590506116e8816116c4565b92915050565b5f602082840312156117035761170261159e565b5b5f611710848285016116da565b91505092915050565b5f8115159050919050565b61172d81611719565b82525050565b5f6020820190506117465f830184611724565b92915050565b5f602082840312156117615761176061159e565b5b5f61176e8482850161161f565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117b982611777565b6117c38185611781565b93506117d3818560208601611791565b6117dc8161179f565b840191505092915050565b5f6020820190508181035f8301526117ff81846117af565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6118418261179f565b810181811067ffffffffffffffff821117156118605761185f61180b565b5b80604052505050565b5f611872611595565b905061187e8282611838565b919050565b5f67ffffffffffffffff82111561189d5761189c61180b565b5b602082029050602081019050919050565b5f80fd5b5f6118c46118bf84611883565b611869565b905080838252602082019050602084028301858111156118e7576118e66118ae565b5b835b8181101561191057806118fc888261161f565b8452602084019350506020810190506118e9565b5050509392505050565b5f82601f83011261192e5761192d611807565b5b813561193e8482602086016118b2565b91505092915050565b5f80fd5b5f67ffffffffffffffff8211156119655761196461180b565b5b61196e8261179f565b9050602081019050919050565b828183375f83830152505050565b5f61199b6119968461194b565b611869565b9050828152602081018484840111156119b7576119b6611947565b5b6119c284828561197b565b509392505050565b5f82601f8301126119de576119dd611807565b5b81356119ee848260208601611989565b91505092915050565b5f805f805f60a08688031215611a1057611a0f61159e565b5b5f611a1d888289016115ec565b9550506020611a2e888289016115ec565b945050604086013567ffffffffffffffff811115611a4f57611a4e6115a2565b5b611a5b8882890161191a565b935050606086013567ffffffffffffffff811115611a7c57611a7b6115a2565b5b611a888882890161191a565b925050608086013567ffffffffffffffff811115611aa957611aa86115a2565b5b611ab5888289016119ca565b9150509295509295909350565b5f67ffffffffffffffff821115611adc57611adb61180b565b5b602082029050602081019050919050565b5f611aff611afa84611ac2565b611869565b90508083825260208201905060208402830185811115611b2257611b216118ae565b5b835b81811015611b4b5780611b3788826115ec565b845260208401935050602081019050611b24565b5050509392505050565b5f82601f830112611b6957611b68611807565b5b8135611b79848260208601611aed565b91505092915050565b5f8060408385031215611b9857611b9761159e565b5b5f83013567ffffffffffffffff811115611bb557611bb46115a2565b5b611bc185828601611b55565b925050602083013567ffffffffffffffff811115611be257611be16115a2565b5b611bee8582860161191a565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611c2a81611600565b82525050565b5f611c3b8383611c21565b60208301905092915050565b5f602082019050919050565b5f611c5d82611bf8565b611c678185611c02565b9350611c7283611c12565b805f5b83811015611ca2578151611c898882611c30565b9750611c9483611c47565b925050600181019050611c75565b5085935050505092915050565b5f6020820190508181035f830152611cc78184611c53565b905092915050565b5f805f8060808587031215611ce757611ce661159e565b5b5f611cf4878288016115ec565b9450506020611d058782880161161f565b9350506040611d168782880161161f565b925050606085013567ffffffffffffffff811115611d3757611d366115a2565b5b611d43878288016119ca565b91505092959194509250565b611d58816115c5565b82525050565b5f602082019050611d715f830184611d4f565b92915050565b611d8081611719565b8114611d8a575f80fd5b50565b5f81359050611d9b81611d77565b92915050565b5f8060408385031215611db757611db661159e565b5b5f611dc4858286016115ec565b9250506020611dd585828601611d8d565b9150509250929050565b5f8060408385031215611df557611df461159e565b5b5f611e02858286016115ec565b9250506020611e13858286016115ec565b9150509250929050565b5f805f805f60a08688031215611e3657611e3561159e565b5b5f611e43888289016115ec565b9550506020611e54888289016115ec565b9450506040611e658882890161161f565b9350506060611e768882890161161f565b925050608086013567ffffffffffffffff811115611e9757611e966115a2565b5b611ea3888289016119ca565b9150509295509295909350565b5f60208284031215611ec557611ec461159e565b5b5f611ed2848285016115ec565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f1f57607f821691505b602082108103611f3257611f31611edb565b5b50919050565b5f604082019050611f4b5f830185611d4f565b611f586020830184611d4f565b9392505050565b5f604082019050611f725f830185611671565b611f7f6020830184611671565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f608082019050611fc65f830187611d4f565b611fd36020830186611671565b611fe06040830185611671565b611fed6060830184611671565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61202d82611600565b915061203883611600565b92508282019050808211156120505761204f611ff6565b5b92915050565b5f6040820190508181035f83015261206e8185611c53565b905081810360208301526120828184611c53565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6120af8261208b565b6120b98185612095565b93506120c9818560208601611791565b6120d28161179f565b840191505092915050565b5f60a0820190506120f05f830188611d4f565b6120fd6020830187611d4f565b61210a6040830186611671565b6121176060830185611671565b818103608083015261212981846120a5565b90509695505050505050565b5f81519050612143816116c4565b92915050565b5f6020828403121561215e5761215d61159e565b5b5f61216b84828501612135565b91505092915050565b5f60a0820190506121875f830188611d4f565b6121946020830187611d4f565b81810360408301526121a68186611c53565b905081810360608301526121ba8185611c53565b905081810360808301526121ce81846120a5565b9050969550505050505056fea2646970667358221220196ba38f7cc4b4525a926acf6ca645f00c5a5ddb99bf7bed9940d6f1314fa5e464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23D JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x17E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x5CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x378 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x388 JUMPI POP PUSH2 0x387 DUP3 PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42A PUSH2 0x85C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI POP PUSH2 0x46D DUP7 DUP3 PUSH2 0x63A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x4B3 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C0 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x863 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x514 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP3 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x530 JUMPI PUSH2 0x52F PUSH2 0x180B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x55E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH2 0x59A PUSH2 0x582 DUP3 DUP8 PUSH2 0x957 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x595 DUP4 DUP8 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5AD JUMPI PUSH2 0x5AC PUSH2 0x1F86 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x563 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x5E0 PUSH0 PUSH2 0xA04 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x97D JUMP JUMPDEST PUSH2 0x5F6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAC7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x636 PUSH2 0x62F PUSH2 0x85C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB5C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6D1 PUSH2 0x85C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI POP PUSH2 0x714 DUP7 DUP3 PUSH2 0x63A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x75A JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x767 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xCC5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x777 PUSH2 0x97D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F0 DUP2 PUSH2 0xA04 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x943 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x950 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xDCB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x985 PUSH2 0x85C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9A3 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA02 JUMPI PUSH2 0x9C6 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xB43 DUP6 DUP6 PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xB54 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xDCB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9C SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xDB1 DUP6 DUP6 PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDC2 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xDCB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDD7 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEA7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE70 JUMPI PUSH0 PUSH2 0xE13 PUSH2 0x85C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xE5F JUMPI PUSH0 PUSH2 0xE32 PUSH0 DUP7 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE48 PUSH0 DUP7 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE58 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1237 JUMP JUMPDEST POP POP PUSH2 0xE6E JUMP JUMPDEST PUSH2 0xE6D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x13E6 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xEF1 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xEFA PUSH2 0x85C JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x10F6 JUMPI PUSH0 PUSH2 0xF1B DUP3 DUP7 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF31 DUP4 DUP7 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1054 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1000 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E9 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x2023 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xEFE JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x11B1 JUMPI PUSH0 PUSH2 0x1114 PUSH0 DUP6 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x112A PUSH0 DUP6 PUSH2 0x96A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x11A2 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1230 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1227 SWAP3 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13DE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12CF SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1353 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1300 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x134B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13DC JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x158D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1446 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1481 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x147E SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1502 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x14FA JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x158B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1582 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15CF DUP3 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DF DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FA DUP2 PUSH2 0x15D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1612 DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP2 EQ PUSH2 0x161C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x1609 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1656 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1667 DUP6 DUP3 DUP7 ADD PUSH2 0x161F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x167A DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1693 PUSH0 DUP4 ADD DUP5 PUSH2 0x1671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CD DUP2 PUSH2 0x1699 JUMP JUMPDEST DUP2 EQ PUSH2 0x16D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E8 DUP2 PUSH2 0x16C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1710 DUP5 DUP3 DUP6 ADD PUSH2 0x16DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172D DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1746 PUSH0 DUP4 ADD DUP5 PUSH2 0x1724 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176E DUP5 DUP3 DUP6 ADD PUSH2 0x161F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B9 DUP3 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x17C3 DUP2 DUP6 PUSH2 0x1781 JUMP JUMPDEST SWAP4 POP PUSH2 0x17D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x17DC DUP2 PUSH2 0x179F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17FF DUP2 DUP5 PUSH2 0x17AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1841 DUP3 PUSH2 0x179F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x180B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1872 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP PUSH2 0x187E DUP3 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x180B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x18C4 PUSH2 0x18BF DUP5 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x1869 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18E7 JUMPI PUSH2 0x18E6 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1910 JUMPI DUP1 PUSH2 0x18FC DUP9 DUP3 PUSH2 0x161F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18E9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x1807 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x193E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1965 JUMPI PUSH2 0x1964 PUSH2 0x180B JUMP JUMPDEST JUMPDEST PUSH2 0x196E DUP3 PUSH2 0x179F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x199B PUSH2 0x1996 DUP5 PUSH2 0x194B JUMP JUMPDEST PUSH2 0x1869 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19B7 JUMPI PUSH2 0x19B6 PUSH2 0x1947 JUMP JUMPDEST JUMPDEST PUSH2 0x19C2 DUP5 DUP3 DUP6 PUSH2 0x197B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19DE JUMPI PUSH2 0x19DD PUSH2 0x1807 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1D DUP9 DUP3 DUP10 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A2E DUP9 DUP3 DUP10 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1A5B DUP9 DUP3 DUP10 ADD PUSH2 0x191A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A7C JUMPI PUSH2 0x1A7B PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1A88 DUP9 DUP3 DUP10 ADD PUSH2 0x191A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1AB5 DUP9 DUP3 DUP10 ADD PUSH2 0x19CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ADC JUMPI PUSH2 0x1ADB PUSH2 0x180B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFF PUSH2 0x1AFA DUP5 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x1869 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B22 JUMPI PUSH2 0x1B21 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B4B JUMPI DUP1 PUSH2 0x1B37 DUP9 DUP3 PUSH2 0x15EC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B24 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B69 JUMPI PUSH2 0x1B68 PUSH2 0x1807 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B79 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B98 JUMPI PUSH2 0x1B97 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB5 JUMPI PUSH2 0x1BB4 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1BC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BE2 JUMPI PUSH2 0x1BE1 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1BEE DUP6 DUP3 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2A DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3B DUP4 DUP4 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5D DUP3 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x1C67 DUP2 DUP6 PUSH2 0x1C02 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C72 DUP4 PUSH2 0x1C12 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CA2 JUMPI DUP2 MLOAD PUSH2 0x1C89 DUP9 DUP3 PUSH2 0x1C30 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C94 DUP4 PUSH2 0x1C47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C75 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC7 DUP2 DUP5 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE7 JUMPI PUSH2 0x1CE6 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF4 DUP8 DUP3 DUP9 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D05 DUP8 DUP3 DUP9 ADD PUSH2 0x161F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D16 DUP8 DUP3 DUP9 ADD PUSH2 0x161F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D37 JUMPI PUSH2 0x1D36 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1D43 DUP8 DUP3 DUP9 ADD PUSH2 0x19CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1D58 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D71 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9B DUP2 PUSH2 0x1D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB7 JUMPI PUSH2 0x1DB6 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC4 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD5 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF5 JUMPI PUSH2 0x1DF4 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E02 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E13 DUP6 DUP3 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E36 JUMPI PUSH2 0x1E35 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E43 DUP9 DUP3 DUP10 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E54 DUP9 DUP3 DUP10 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E65 DUP9 DUP3 DUP10 ADD PUSH2 0x161F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1E76 DUP9 DUP3 DUP10 ADD PUSH2 0x161F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E97 JUMPI PUSH2 0x1E96 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST PUSH2 0x1EA3 DUP9 DUP3 DUP10 ADD PUSH2 0x19CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED2 DUP5 DUP3 DUP6 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F1F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x1EDB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F4B PUSH0 DUP4 ADD DUP6 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1F58 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F72 PUSH0 DUP4 ADD DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1F7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1671 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FC6 PUSH0 DUP4 ADD DUP8 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1FD3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1FE0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1FED PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1671 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x202D DUP3 PUSH2 0x1600 JUMP JUMPDEST SWAP2 POP PUSH2 0x2038 DUP4 PUSH2 0x1600 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2050 JUMPI PUSH2 0x204F PUSH2 0x1FF6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x206E DUP2 DUP6 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2082 DUP2 DUP5 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20AF DUP3 PUSH2 0x208B JUMP JUMPDEST PUSH2 0x20B9 DUP2 DUP6 PUSH2 0x2095 JUMP JUMPDEST SWAP4 POP PUSH2 0x20C9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x20D2 DUP2 PUSH2 0x179F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x20F0 PUSH0 DUP4 ADD DUP9 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x20FD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x210A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x2117 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1671 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2129 DUP2 DUP5 PUSH2 0x20A5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2143 DUP2 PUSH2 0x16C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215E JUMPI PUSH2 0x215D PUSH2 0x159E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x216B DUP5 DUP3 DUP6 ADD PUSH2 0x2135 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2187 PUSH0 DUP4 ADD DUP9 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x2194 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D4F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x21A6 DUP2 DUP7 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x21BA DUP2 DUP6 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x21CE DUP2 DUP5 PUSH2 0x20A5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH12 0xA38F7CC4B4525A926ACF6CA6 GASLIMIT CREATE 0xC GAS TSTORE 0xDB SWAP10 0xBF PUSH28 0xED9940D6F1314FA5E464736F6C634300081A00330000000000000000 ",
							"sourceMap": "60961:300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43130:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42263:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42967:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;44897:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;43419:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60085:101;;;:::i;:::-;;61095:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;59430:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;44039:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;44250:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;44474:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;60335:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;43130:132;43207:7;43233:9;:13;43243:2;43233:13;;;;;;;;;;;:22;43247:7;43233:22;;;;;;;;;;;;;;;;43226:29;;43130:132;;;;:::o;42263:305::-;42365:4;42415:26;42400:41;;;:11;:41;;;;:109;;;;42472:37;42457:52;;;:11;:52;;;;42400:109;:161;;;;42525:36;42549:11;42525:23;:36::i;:::-;42400:161;42381:180;;42263:305;;;:::o;42967:103::-;43027:13;43059:4;43052:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42967:103;;;:::o;44897:429::-;45091:14;45108:12;:10;:12::i;:::-;45091:29;;45142:6;45134:14;;:4;:14;;;;:49;;;;;45153:30;45170:4;45176:6;45153:16;:30::i;:::-;45152:31;45134:49;45130:129;;;45235:6;45243:4;45206:42;;;;;;;;;;;;:::i;:::-;;;;;;;;45130:129;45268:51;45291:4;45297:2;45301:3;45306:6;45314:4;45268:22;:51::i;:::-;45081:245;44897:429;;;;;:::o;43419:552::-;43543:16;43594:3;:10;43575:8;:15;:29;43571:121;;43653:3;:10;43665:8;:15;43627:54;;;;;;;;;;;;:::i;:::-;;;;;;;;43571:121;43702:30;43749:8;:15;43735:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43702:63;;43781:9;43776:158;43800:8;:15;43796:1;:19;43776:158;;;43855:68;43865:30;43893:1;43865:8;:27;;:30;;;;:::i;:::-;43897:25;43920:1;43897:3;:22;;:25;;;;:::i;:::-;43855:9;:68::i;:::-;43836:13;43850:1;43836:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;43817:3;;;;;43776:158;;;;43951:13;43944:20;;;43419:552;;;;:::o;60085:101::-;59323:13;:11;:13::i;:::-;60149:30:::1;60176:1;60149:18;:30::i;:::-;60085:101::o:0;61095:164::-;59323:13;:11;:13::i;:::-;61220:32:::1;61226:7;61235:2;61239:6;61247:4;61220:5;:32::i;:::-;61095:164:::0;;;;:::o;59430:85::-;59476:7;59502:6;;;;;;;;;;;59495:13;;59430:85;:::o;44039:144::-;44124:52;44143:12;:10;:12::i;:::-;44157:8;44167;44124:18;:52::i;:::-;44039:144;;:::o;44250:157::-;44340:4;44363:18;:27;44382:7;44363:27;;;;;;;;;;;;;;;:37;44391:8;44363:37;;;;;;;;;;;;;;;;;;;;;;;;;44356:44;;44250:157;;;;:::o;44474:351::-;44597:14;44614:12;:10;:12::i;:::-;44597:29;;44648:6;44640:14;;:4;:14;;;;:49;;;;;44659:30;44676:4;44682:6;44659:16;:30::i;:::-;44658:31;44640:49;44636:129;;;44741:6;44749:4;44712:42;;;;;;;;;;;;:::i;:::-;;;;;;;;44636:129;44774:44;44792:4;44798:2;44802;44806:5;44813:4;44774:17;:44::i;:::-;44587:238;44474:351;;;;;:::o;60335:215::-;59323:13;:11;:13::i;:::-;60439:1:::1;60419:22;;:8;:22;;::::0;60415:91:::1;;60492:1;60464:31;;;;;;;;;;;:::i;:::-;;;;;;;;60415:91;60515:28;60534:8;60515:18;:28::i;:::-;60335:215:::0;:::o;10699:146::-;10775:4;10813:25;10798:40;;;:11;:40;;;;10791:47;;10699:146;;;:::o;9634:96::-;9687:7;9713:10;9706:17;;9634:96;:::o;49898:445::-;50105:1;50091:16;;:2;:16;;;50087:88;;50161:1;50130:34;;;;;;;;;;;:::i;:::-;;;;;;;;50087:88;50204:1;50188:18;;:4;:18;;;50184:88;;50258:1;50229:32;;;;;;;;;;;:::i;:::-;;;;;;;;50184:88;50281:55;50308:4;50314:2;50318:3;50323:6;50331:4;50281:26;:55::i;:::-;49898:445;;;;;:::o;34487:197::-;34573:11;34661:4;34656:3;34652:14;34645:4;34640:3;34636:14;34632:35;34626:42;34619:49;;34487:197;;;;:::o;34088:::-;34174:11;34262:4;34257:3;34253:14;34246:4;34241:3;34237:14;34233:35;34227:42;34220:49;;34088:197;;;;:::o;59588:162::-;59658:12;:10;:12::i;:::-;59647:23;;:7;:5;:7::i;:::-;:23;;;59643:101;;59720:12;:10;:12::i;:::-;59693:40;;;;;;;;;;;:::i;:::-;;;;;;;;59643:101;59588:162::o;60704:187::-;60777:16;60796:6;;;;;;;;;;;60777:25;;60821:8;60812:6;;:17;;;;;;;;;;;;;;;;;;60875:8;60844:40;;60865:8;60844:40;;;;;;;;;;;;60767:124;60704:187;:::o;51629:346::-;51739:1;51725:16;;:2;:16;;;51721:88;;51795:1;51764:34;;;;;;;;;;;:::i;:::-;;;;;;;;51721:88;51819:20;51841:23;51868:29;51887:2;51891:5;51868:18;:29::i;:::-;51818:79;;;;51907:61;51942:1;51946:2;51950:3;51955:6;51963:4;51907:26;:61::i;:::-;51711:264;;51629:346;;;;:::o;54151:315::-;54278:1;54258:22;;:8;:22;;;54254:94;;54334:1;54303:34;;;;;;;;;;;:::i;:::-;;;;;;;;54254:94;54395:8;54357:18;:25;54376:5;54357:25;;;;;;;;;;;;;;;:35;54383:8;54357:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;54440:8;54418:41;;54433:5;54418:41;;;54450:8;54418:41;;;;;;:::i;:::-;;;;;;;;54151:315;;;:::o;49034:463::-;49170:1;49156:16;;:2;:16;;;49152:88;;49226:1;49195:34;;;;;;;;;;;:::i;:::-;;;;;;;;49152:88;49269:1;49253:18;;:4;:18;;;49249:88;;49323:1;49294:32;;;;;;;;;;;:::i;:::-;;;;;;;;49249:88;49347:20;49369:23;49396:29;49415:2;49419:5;49396:18;:29::i;:::-;49346:79;;;;49435:55;49462:4;49468:2;49472:3;49477:6;49485:4;49435:26;:55::i;:::-;49142:355;;49034:463;;;;;:::o;47887:690::-;48088:30;48096:4;48102:2;48106:3;48111:6;48088:7;:30::i;:::-;48146:1;48132:16;;:2;:16;;;48128:443;;48164:16;48183:12;:10;:12::i;:::-;48164:31;;48227:1;48213:3;:10;:15;48209:352;;48248:10;48261:25;48284:1;48261:3;:22;;:25;;;;:::i;:::-;48248:38;;48304:13;48320:28;48346:1;48320:6;:25;;:28;;;;:::i;:::-;48304:44;;48366:67;48397:8;48407:4;48413:2;48417;48421:5;48428:4;48366:30;:67::i;:::-;48230:218;;48209:352;;;48472:74;48508:8;48518:4;48524:2;48528:3;48533:6;48541:4;48472:35;:74::i;:::-;48209:352;48150:421;48128:443;47887:690;;;;;:::o;56963:849::-;57071:23;57096;57257:4;57251:11;57241:21;;57327:1;57319:6;57312:17;57465:8;57458:4;57450:6;57446:17;57439:35;57587:4;57579:6;57575:17;57565:27;;57620:1;57612:6;57605:17;57661:8;57654:4;57646:6;57642:17;57635:35;57790:4;57782:6;57778:17;57772:4;57765:31;56963:849;;;;;:::o;46027:1281::-;46162:6;:13;46148:3;:10;:27;46144:117;;46224:3;:10;46236:6;:13;46198:52;;;;;;;;;;;;:::i;:::-;;;;;;;;46144:117;46271:16;46290:12;:10;:12::i;:::-;46271:31;;46318:9;46313:691;46337:3;:10;46333:1;:14;46313:691;;;46368:10;46381:25;46404:1;46381:3;:22;;:25;;;;:::i;:::-;46368:38;;46420:13;46436:28;46462:1;46436:6;:25;;:28;;;;:::i;:::-;46420:44;;46499:1;46483:18;;:4;:18;;;46479:420;;46521:19;46543:9;:13;46553:2;46543:13;;;;;;;;;;;:19;46557:4;46543:19;;;;;;;;;;;;;;;;46521:41;;46598:5;46584:11;:19;46580:129;;;46661:4;46667:11;46680:5;46687:2;46634:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;46580:129;46861:5;46847:11;:19;46825:9;:13;46835:2;46825:13;;;;;;;;;;;:19;46839:4;46825:19;;;;;;;;;;;;;;;:41;;;;46503:396;46479:420;46931:1;46917:16;;:2;:16;;;46913:81;;46974:5;46953:9;:13;46963:2;46953:13;;;;;;;;;;;:17;46967:2;46953:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;46913:81;46354:650;;46349:3;;;;;46313:691;;;;47032:1;47018:3;:10;:15;47014:288;;47049:10;47062:25;47085:1;47062:3;:22;;:25;;;;:::i;:::-;47049:38;;47101:13;47117:28;47143:1;47117:6;:25;;:28;;;;:::i;:::-;47101:44;;47195:2;47164:45;;47189:4;47164:45;;47179:8;47164:45;;;47199:2;47203:5;47164:45;;;;;;;:::i;:::-;;;;;;;;47035:185;;47014:288;;;47275:2;47245:46;;47269:4;47245:46;;47259:8;47245:46;;;47279:3;47284:6;47245:46;;;;;;;:::i;:::-;;;;;;;;47014:288;46134:1174;46027:1281;;;;:::o;54644:974::-;54867:1;54850:2;:14;;;:18;54846:766;;;54905:2;54888:38;;;54927:8;54937:4;54943:2;54947:5;54954:4;54888:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;54884:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55260:1;55243:6;:13;:18;55239:349;;55370:2;55347:26;;;;;;;;;;;:::i;:::-;;;;;;;;55239:349;55540:6;55534:13;55525:6;55521:2;55517:15;55510:38;54884:718;55020:43;;;55008:55;;;:8;:55;;;;55004:174;;55156:2;55133:26;;;;;;;;;;;:::i;:::-;;;;;;;;55004:174;54960:232;54846:766;54644:974;;;;;;:::o;55806:1041::-;56054:1;56037:2;:14;;;:18;56033:808;;;56092:2;56075:43;;;56119:8;56129:4;56135:3;56140:6;56148:4;56075:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;56071:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56489:1;56472:6;:13;:18;56468:349;;56599:2;56576:26;;;;;;;;;;;:::i;:::-;;;;;;;;56468:349;56769:6;56763:13;56754:6;56750:2;56746:15;56739:38;56071:760;56244:48;;;56232:60;;;:8;:60;;;;56228:179;;56385:2;56362:26;;;;;;;;;;;:::i;:::-;;;;;;;;56228:179;56154:267;56033:808;55806:1041;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:139::-;3917:6;3912:3;3907;3901:23;3958:1;3949:6;3944:3;3940:16;3933:27;3828:139;;;:::o;3973:102::-;4014:6;4065:2;4061:7;4056:2;4049:5;4045:14;4041:28;4031:38;;3973:102;;;:::o;4081:377::-;4169:3;4197:39;4230:5;4197:39;:::i;:::-;4252:71;4316:6;4311:3;4252:71;:::i;:::-;4245:78;;4332:65;4390:6;4385:3;4378:4;4371:5;4367:16;4332:65;:::i;:::-;4422:29;4444:6;4422:29;:::i;:::-;4417:3;4413:39;4406:46;;4173:285;4081:377;;;;:::o;4464:313::-;4577:4;4615:2;4604:9;4600:18;4592:26;;4664:9;4658:4;4654:20;4650:1;4639:9;4635:17;4628:47;4692:78;4765:4;4756:6;4692:78;:::i;:::-;4684:86;;4464:313;;;;:::o;4783:117::-;4892:1;4889;4882:12;4906:180;4954:77;4951:1;4944:88;5051:4;5048:1;5041:15;5075:4;5072:1;5065:15;5092:281;5175:27;5197:4;5175:27;:::i;:::-;5167:6;5163:40;5305:6;5293:10;5290:22;5269:18;5257:10;5254:34;5251:62;5248:88;;;5316:18;;:::i;:::-;5248:88;5356:10;5352:2;5345:22;5135:238;5092:281;;:::o;5379:129::-;5413:6;5440:20;;:::i;:::-;5430:30;;5469:33;5497:4;5489:6;5469:33;:::i;:::-;5379:129;;;:::o;5514:311::-;5591:4;5681:18;5673:6;5670:30;5667:56;;;5703:18;;:::i;:::-;5667:56;5753:4;5745:6;5741:17;5733:25;;5813:4;5807;5803:15;5795:23;;5514:311;;;:::o;5831:117::-;5940:1;5937;5930:12;5971:710;6067:5;6092:81;6108:64;6165:6;6108:64;:::i;:::-;6092:81;:::i;:::-;6083:90;;6193:5;6222:6;6215:5;6208:21;6256:4;6249:5;6245:16;6238:23;;6309:4;6301:6;6297:17;6289:6;6285:30;6338:3;6330:6;6327:15;6324:122;;;6357:79;;:::i;:::-;6324:122;6472:6;6455:220;6489:6;6484:3;6481:15;6455:220;;;6564:3;6593:37;6626:3;6614:10;6593:37;:::i;:::-;6588:3;6581:50;6660:4;6655:3;6651:14;6644:21;;6531:144;6515:4;6510:3;6506:14;6499:21;;6455:220;;;6459:21;6073:608;;5971:710;;;;;:::o;6704:370::-;6775:5;6824:3;6817:4;6809:6;6805:17;6801:27;6791:122;;6832:79;;:::i;:::-;6791:122;6949:6;6936:20;6974:94;7064:3;7056:6;7049:4;7041:6;7037:17;6974:94;:::i;:::-;6965:103;;6781:293;6704:370;;;;:::o;7080:117::-;7189:1;7186;7179:12;7203:307;7264:4;7354:18;7346:6;7343:30;7340:56;;;7376:18;;:::i;:::-;7340:56;7414:29;7436:6;7414:29;:::i;:::-;7406:37;;7498:4;7492;7488:15;7480:23;;7203:307;;;:::o;7516:148::-;7614:6;7609:3;7604;7591:30;7655:1;7646:6;7641:3;7637:16;7630:27;7516:148;;;:::o;7670:423::-;7747:5;7772:65;7788:48;7829:6;7788:48;:::i;:::-;7772:65;:::i;:::-;7763:74;;7860:6;7853:5;7846:21;7898:4;7891:5;7887:16;7936:3;7927:6;7922:3;7918:16;7915:25;7912:112;;;7943:79;;:::i;:::-;7912:112;8033:54;8080:6;8075:3;8070;8033:54;:::i;:::-;7753:340;7670:423;;;;;:::o;8112:338::-;8167:5;8216:3;8209:4;8201:6;8197:17;8193:27;8183:122;;8224:79;;:::i;:::-;8183:122;8341:6;8328:20;8366:78;8440:3;8432:6;8425:4;8417:6;8413:17;8366:78;:::i;:::-;8357:87;;8173:277;8112:338;;;;:::o;8456:1509::-;8610:6;8618;8626;8634;8642;8691:3;8679:9;8670:7;8666:23;8662:33;8659:120;;;8698:79;;:::i;:::-;8659:120;8818:1;8843:53;8888:7;8879:6;8868:9;8864:22;8843:53;:::i;:::-;8833:63;;8789:117;8945:2;8971:53;9016:7;9007:6;8996:9;8992:22;8971:53;:::i;:::-;8961:63;;8916:118;9101:2;9090:9;9086:18;9073:32;9132:18;9124:6;9121:30;9118:117;;;9154:79;;:::i;:::-;9118:117;9259:78;9329:7;9320:6;9309:9;9305:22;9259:78;:::i;:::-;9249:88;;9044:303;9414:2;9403:9;9399:18;9386:32;9445:18;9437:6;9434:30;9431:117;;;9467:79;;:::i;:::-;9431:117;9572:78;9642:7;9633:6;9622:9;9618:22;9572:78;:::i;:::-;9562:88;;9357:303;9727:3;9716:9;9712:19;9699:33;9759:18;9751:6;9748:30;9745:117;;;9781:79;;:::i;:::-;9745:117;9886:62;9940:7;9931:6;9920:9;9916:22;9886:62;:::i;:::-;9876:72;;9670:288;8456:1509;;;;;;;;:::o;9971:311::-;10048:4;10138:18;10130:6;10127:30;10124:56;;;10160:18;;:::i;:::-;10124:56;10210:4;10202:6;10198:17;10190:25;;10270:4;10264;10260:15;10252:23;;9971:311;;;:::o;10305:710::-;10401:5;10426:81;10442:64;10499:6;10442:64;:::i;:::-;10426:81;:::i;:::-;10417:90;;10527:5;10556:6;10549:5;10542:21;10590:4;10583:5;10579:16;10572:23;;10643:4;10635:6;10631:17;10623:6;10619:30;10672:3;10664:6;10661:15;10658:122;;;10691:79;;:::i;:::-;10658:122;10806:6;10789:220;10823:6;10818:3;10815:15;10789:220;;;10898:3;10927:37;10960:3;10948:10;10927:37;:::i;:::-;10922:3;10915:50;10994:4;10989:3;10985:14;10978:21;;10865:144;10849:4;10844:3;10840:14;10833:21;;10789:220;;;10793:21;10407:608;;10305:710;;;;;:::o;11038:370::-;11109:5;11158:3;11151:4;11143:6;11139:17;11135:27;11125:122;;11166:79;;:::i;:::-;11125:122;11283:6;11270:20;11308:94;11398:3;11390:6;11383:4;11375:6;11371:17;11308:94;:::i;:::-;11299:103;;11115:293;11038:370;;;;:::o;11414:894::-;11532:6;11540;11589:2;11577:9;11568:7;11564:23;11560:32;11557:119;;;11595:79;;:::i;:::-;11557:119;11743:1;11732:9;11728:17;11715:31;11773:18;11765:6;11762:30;11759:117;;;11795:79;;:::i;:::-;11759:117;11900:78;11970:7;11961:6;11950:9;11946:22;11900:78;:::i;:::-;11890:88;;11686:302;12055:2;12044:9;12040:18;12027:32;12086:18;12078:6;12075:30;12072:117;;;12108:79;;:::i;:::-;12072:117;12213:78;12283:7;12274:6;12263:9;12259:22;12213:78;:::i;:::-;12203:88;;11998:303;11414:894;;;;;:::o;12314:114::-;12381:6;12415:5;12409:12;12399:22;;12314:114;;;:::o;12434:184::-;12533:11;12567:6;12562:3;12555:19;12607:4;12602:3;12598:14;12583:29;;12434:184;;;;:::o;12624:132::-;12691:4;12714:3;12706:11;;12744:4;12739:3;12735:14;12727:22;;12624:132;;;:::o;12762:108::-;12839:24;12857:5;12839:24;:::i;:::-;12834:3;12827:37;12762:108;;:::o;12876:179::-;12945:10;12966:46;13008:3;13000:6;12966:46;:::i;:::-;13044:4;13039:3;13035:14;13021:28;;12876:179;;;;:::o;13061:113::-;13131:4;13163;13158:3;13154:14;13146:22;;13061:113;;;:::o;13210:732::-;13329:3;13358:54;13406:5;13358:54;:::i;:::-;13428:86;13507:6;13502:3;13428:86;:::i;:::-;13421:93;;13538:56;13588:5;13538:56;:::i;:::-;13617:7;13648:1;13633:284;13658:6;13655:1;13652:13;13633:284;;;13734:6;13728:13;13761:63;13820:3;13805:13;13761:63;:::i;:::-;13754:70;;13847:60;13900:6;13847:60;:::i;:::-;13837:70;;13693:224;13680:1;13677;13673:9;13668:14;;13633:284;;;13637:14;13933:3;13926:10;;13334:608;;;13210:732;;;;:::o;13948:373::-;14091:4;14129:2;14118:9;14114:18;14106:26;;14178:9;14172:4;14168:20;14164:1;14153:9;14149:17;14142:47;14206:108;14309:4;14300:6;14206:108;:::i;:::-;14198:116;;13948:373;;;;:::o;14327:943::-;14422:6;14430;14438;14446;14495:3;14483:9;14474:7;14470:23;14466:33;14463:120;;;14502:79;;:::i;:::-;14463:120;14622:1;14647:53;14692:7;14683:6;14672:9;14668:22;14647:53;:::i;:::-;14637:63;;14593:117;14749:2;14775:53;14820:7;14811:6;14800:9;14796:22;14775:53;:::i;:::-;14765:63;;14720:118;14877:2;14903:53;14948:7;14939:6;14928:9;14924:22;14903:53;:::i;:::-;14893:63;;14848:118;15033:2;15022:9;15018:18;15005:32;15064:18;15056:6;15053:30;15050:117;;;15086:79;;:::i;:::-;15050:117;15191:62;15245:7;15236:6;15225:9;15221:22;15191:62;:::i;:::-;15181:72;;14976:287;14327:943;;;;;;;:::o;15276:118::-;15363:24;15381:5;15363:24;:::i;:::-;15358:3;15351:37;15276:118;;:::o;15400:222::-;15493:4;15531:2;15520:9;15516:18;15508:26;;15544:71;15612:1;15601:9;15597:17;15588:6;15544:71;:::i;:::-;15400:222;;;;:::o;15628:116::-;15698:21;15713:5;15698:21;:::i;:::-;15691:5;15688:32;15678:60;;15734:1;15731;15724:12;15678:60;15628:116;:::o;15750:133::-;15793:5;15831:6;15818:20;15809:29;;15847:30;15871:5;15847:30;:::i;:::-;15750:133;;;;:::o;15889:468::-;15954:6;15962;16011:2;15999:9;15990:7;15986:23;15982:32;15979:119;;;16017:79;;:::i;:::-;15979:119;16137:1;16162:53;16207:7;16198:6;16187:9;16183:22;16162:53;:::i;:::-;16152:63;;16108:117;16264:2;16290:50;16332:7;16323:6;16312:9;16308:22;16290:50;:::i;:::-;16280:60;;16235:115;15889:468;;;;;:::o;16363:474::-;16431:6;16439;16488:2;16476:9;16467:7;16463:23;16459:32;16456:119;;;16494:79;;:::i;:::-;16456:119;16614:1;16639:53;16684:7;16675:6;16664:9;16660:22;16639:53;:::i;:::-;16629:63;;16585:117;16741:2;16767:53;16812:7;16803:6;16792:9;16788:22;16767:53;:::i;:::-;16757:63;;16712:118;16363:474;;;;;:::o;16843:1089::-;16947:6;16955;16963;16971;16979;17028:3;17016:9;17007:7;17003:23;16999:33;16996:120;;;17035:79;;:::i;:::-;16996:120;17155:1;17180:53;17225:7;17216:6;17205:9;17201:22;17180:53;:::i;:::-;17170:63;;17126:117;17282:2;17308:53;17353:7;17344:6;17333:9;17329:22;17308:53;:::i;:::-;17298:63;;17253:118;17410:2;17436:53;17481:7;17472:6;17461:9;17457:22;17436:53;:::i;:::-;17426:63;;17381:118;17538:2;17564:53;17609:7;17600:6;17589:9;17585:22;17564:53;:::i;:::-;17554:63;;17509:118;17694:3;17683:9;17679:19;17666:33;17726:18;17718:6;17715:30;17712:117;;;17748:79;;:::i;:::-;17712:117;17853:62;17907:7;17898:6;17887:9;17883:22;17853:62;:::i;:::-;17843:72;;17637:288;16843:1089;;;;;;;;:::o;17938:329::-;17997:6;18046:2;18034:9;18025:7;18021:23;18017:32;18014:119;;;18052:79;;:::i;:::-;18014:119;18172:1;18197:53;18242:7;18233:6;18222:9;18218:22;18197:53;:::i;:::-;18187:63;;18143:117;17938:329;;;;:::o;18273:180::-;18321:77;18318:1;18311:88;18418:4;18415:1;18408:15;18442:4;18439:1;18432:15;18459:320;18503:6;18540:1;18534:4;18530:12;18520:22;;18587:1;18581:4;18577:12;18608:18;18598:81;;18664:4;18656:6;18652:17;18642:27;;18598:81;18726:2;18718:6;18715:14;18695:18;18692:38;18689:84;;18745:18;;:::i;:::-;18689:84;18510:269;18459:320;;;:::o;18785:332::-;18906:4;18944:2;18933:9;18929:18;18921:26;;18957:71;19025:1;19014:9;19010:17;19001:6;18957:71;:::i;:::-;19038:72;19106:2;19095:9;19091:18;19082:6;19038:72;:::i;:::-;18785:332;;;;;:::o;19123:::-;19244:4;19282:2;19271:9;19267:18;19259:26;;19295:71;19363:1;19352:9;19348:17;19339:6;19295:71;:::i;:::-;19376:72;19444:2;19433:9;19429:18;19420:6;19376:72;:::i;:::-;19123:332;;;;;:::o;19461:180::-;19509:77;19506:1;19499:88;19606:4;19603:1;19596:15;19630:4;19627:1;19620:15;19647:553;19824:4;19862:3;19851:9;19847:19;19839:27;;19876:71;19944:1;19933:9;19929:17;19920:6;19876:71;:::i;:::-;19957:72;20025:2;20014:9;20010:18;20001:6;19957:72;:::i;:::-;20039;20107:2;20096:9;20092:18;20083:6;20039:72;:::i;:::-;20121;20189:2;20178:9;20174:18;20165:6;20121:72;:::i;:::-;19647:553;;;;;;;:::o;20206:180::-;20254:77;20251:1;20244:88;20351:4;20348:1;20341:15;20375:4;20372:1;20365:15;20392:191;20432:3;20451:20;20469:1;20451:20;:::i;:::-;20446:25;;20485:20;20503:1;20485:20;:::i;:::-;20480:25;;20528:1;20525;20521:9;20514:16;;20549:3;20546:1;20543:10;20540:36;;;20556:18;;:::i;:::-;20540:36;20392:191;;;;:::o;20589:634::-;20810:4;20848:2;20837:9;20833:18;20825:26;;20897:9;20891:4;20887:20;20883:1;20872:9;20868:17;20861:47;20925:108;21028:4;21019:6;20925:108;:::i;:::-;20917:116;;21080:9;21074:4;21070:20;21065:2;21054:9;21050:18;21043:48;21108:108;21211:4;21202:6;21108:108;:::i;:::-;21100:116;;20589:634;;;;;:::o;21229:98::-;21280:6;21314:5;21308:12;21298:22;;21229:98;;;:::o;21333:168::-;21416:11;21450:6;21445:3;21438:19;21490:4;21485:3;21481:14;21466:29;;21333:168;;;;:::o;21507:373::-;21593:3;21621:38;21653:5;21621:38;:::i;:::-;21675:70;21738:6;21733:3;21675:70;:::i;:::-;21668:77;;21754:65;21812:6;21807:3;21800:4;21793:5;21789:16;21754:65;:::i;:::-;21844:29;21866:6;21844:29;:::i;:::-;21839:3;21835:39;21828:46;;21597:283;21507:373;;;;:::o;21886:751::-;22109:4;22147:3;22136:9;22132:19;22124:27;;22161:71;22229:1;22218:9;22214:17;22205:6;22161:71;:::i;:::-;22242:72;22310:2;22299:9;22295:18;22286:6;22242:72;:::i;:::-;22324;22392:2;22381:9;22377:18;22368:6;22324:72;:::i;:::-;22406;22474:2;22463:9;22459:18;22450:6;22406:72;:::i;:::-;22526:9;22520:4;22516:20;22510:3;22499:9;22495:19;22488:49;22554:76;22625:4;22616:6;22554:76;:::i;:::-;22546:84;;21886:751;;;;;;;;:::o;22643:141::-;22699:5;22730:6;22724:13;22715:22;;22746:32;22772:5;22746:32;:::i;:::-;22643:141;;;;:::o;22790:349::-;22859:6;22908:2;22896:9;22887:7;22883:23;22879:32;22876:119;;;22914:79;;:::i;:::-;22876:119;23034:1;23059:63;23114:7;23105:6;23094:9;23090:22;23059:63;:::i;:::-;23049:73;;23005:127;22790:349;;;;:::o;23145:1053::-;23468:4;23506:3;23495:9;23491:19;23483:27;;23520:71;23588:1;23577:9;23573:17;23564:6;23520:71;:::i;:::-;23601:72;23669:2;23658:9;23654:18;23645:6;23601:72;:::i;:::-;23720:9;23714:4;23710:20;23705:2;23694:9;23690:18;23683:48;23748:108;23851:4;23842:6;23748:108;:::i;:::-;23740:116;;23903:9;23897:4;23893:20;23888:2;23877:9;23873:18;23866:48;23931:108;24034:4;24025:6;23931:108;:::i;:::-;23923:116;;24087:9;24081:4;24077:20;24071:3;24060:9;24056:19;24049:49;24115:76;24186:4;24177:6;24115:76;:::i;:::-;24107:84;;23145:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1744000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "786",
								"transferOwnership(address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60961,
									"end": 61261,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 61019,
									"end": 61089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61073,
									"end": 61085,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42176,
									"end": 42189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 42184,
									"end": 42188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42176,
									"end": 42183,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 42176,
									"end": 42183,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 42176,
									"end": 42183,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 42176,
									"end": 42189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 42176,
									"end": 42189,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 42176,
									"end": 42189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 42176,
									"end": 42189,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 42176,
									"end": 42189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42134,
									"end": 42196,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59089,
									"end": 59090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59065,
									"end": 59091,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 59065,
									"end": 59091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 59065,
									"end": 59077,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59065,
									"end": 59091,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 59065,
									"end": 59091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 59065,
									"end": 59091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 59061,
									"end": 59156,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 59061,
									"end": 59156,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59142,
									"end": 59143,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 59114,
									"end": 59145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59114,
									"end": 59145,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 59061,
									"end": 59156,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 59061,
									"end": 59156,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59165,
									"end": 59197,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 59184,
									"end": 59196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59165,
									"end": 59183,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 59165,
									"end": 59183,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 59165,
									"end": 59183,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 59165,
									"end": 59197,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 59165,
									"end": 59197,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 59165,
									"end": 59197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 59165,
									"end": 59197,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 59165,
									"end": 59197,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59017,
									"end": 59204,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61019,
									"end": 61089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 51165,
									"end": 51251,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 51165,
									"end": 51251,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 51238,
									"end": 51244,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 51231,
									"end": 51235,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 51231,
									"end": 51244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 51231,
									"end": 51244,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 51231,
									"end": 51244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 51231,
									"end": 51244,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 51231,
									"end": 51244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 51231,
									"end": 51244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 51231,
									"end": 51244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 51231,
									"end": 51244,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 51231,
									"end": 51244,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 51231,
									"end": 51244,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51165,
									"end": 51251,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51165,
									"end": 51251,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 60704,
									"end": 60891,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 60704,
									"end": 60891,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60777,
									"end": 60793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 60796,
									"end": 60802,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60777,
									"end": 60802,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60777,
									"end": 60802,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60821,
									"end": 60829,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60818,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 60812,
									"end": 60818,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 60812,
									"end": 60829,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60875,
									"end": 60883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60865,
									"end": 60873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60844,
									"end": 60884,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 60767,
									"end": 60891,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60704,
									"end": 60891,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60704,
									"end": 60891,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1606,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1640,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1634,
									"end": 1646,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1784,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1704,
									"end": 1705,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1697,
									"end": 1785,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1804,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1801,
									"end": 1802,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1794,
									"end": 1809,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1832,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1818,
									"end": 1833,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1893,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1883,
									"end": 1971,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1990,
									"end": 1994,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1987,
									"end": 1988,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 1995,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2014,
									"end": 2018,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2011,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2019,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2112,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2106,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2102,
									"end": 2114,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2160,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2153,
									"end": 2157,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2149,
									"end": 2161,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2180,
									"end": 2198,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2224,
									"end": 2241,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2298,
									"end": 2300,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2287,
									"end": 2301,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2267,
									"end": 2285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2264,
									"end": 2302,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2317,
									"end": 2335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2082,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2351,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2432,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2455,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2442,
									"end": 2456,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2486,
									"end": 2490,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2473,
									"end": 2491,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2498,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2588,
									"end": 2590,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2583,
									"end": 2585,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2576,
									"end": 2581,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2568,
									"end": 2591,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2597,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2647,
									"end": 2655,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2702,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2691,
									"end": 2695,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 2703,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2603,
									"end": 2710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2785,
									"end": 2791,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2835,
									"end": 2836,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2823,
									"end": 2833,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2819,
									"end": 2837,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2888,
									"end": 2954,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2877,
									"end": 2886,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2858,
									"end": 2955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3006,
									"end": 3014,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3004,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2976,
									"end": 3015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3048,
									"end": 3052,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3053,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3037,
									"end": 3042,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3033,
									"end": 3054,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3097,
									"end": 3101,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3087,
									"end": 3095,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3102,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3076,
									"end": 3081,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3103,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 3109,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3181,
									"end": 3186,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3226,
									"end": 3229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3247,
									"end": 3252,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3198,
									"end": 3258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3314,
									"end": 3323,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3392,
									"end": 3397,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3374,
									"end": 3398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3365,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3347,
									"end": 3400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3264,
									"end": 3406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3455,
									"end": 3458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3476,
									"end": 3481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3634,
									"end": 3641,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3603,
									"end": 3642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3737,
									"end": 3753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3713,
									"end": 3754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3702,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3692,
									"end": 3703,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3664,
									"end": 3755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3651,
									"end": 3756,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3569,
									"end": 3762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3493,
									"end": 3762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3813,
									"end": 3816,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3924,
									"end": 3956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4023,
									"end": 4029,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4015,
									"end": 4021,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4009,
									"end": 4013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3965,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3900,
									"end": 4036,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3847,
									"end": 4036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4119,
									"end": 4122,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4109,
									"end": 4123,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4210,
									"end": 4211,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4173,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4146,
									"end": 4147,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4139,
									"end": 4144,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4135,
									"end": 4148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4042,
									"end": 4228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 4337,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4330,
									"end": 4333,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4327,
									"end": 4338,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 4401,
									"end": 4406,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 4369,
									"end": 4407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4471,
									"end": 4481,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 4453,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4439,
									"end": 4483,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4636,
									"end": 4638,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4624,
									"end": 4634,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4621,
									"end": 4639,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4657,
									"end": 4665,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 4754,
									"end": 4757,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 4736,
									"end": 4758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4726,
									"end": 4734,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4722,
									"end": 4759,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4709,
									"end": 4720,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4680,
									"end": 4760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4234,
									"end": 4777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4837,
									"end": 4845,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4887,
									"end": 4892,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4881,
									"end": 4885,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4877,
									"end": 4893,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4783,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5031,
									"end": 5032,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5027,
									"end": 5033,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5019,
									"end": 5024,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5016,
									"end": 5017,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 4983,
									"end": 5034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4979,
									"end": 5035,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5064,
									"end": 5068,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5058,
									"end": 5062,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5054,
									"end": 5069,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4957,
									"end": 5075,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4906,
									"end": 5075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5156,
									"end": 5160,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5327,
									"end": 5330,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5321,
									"end": 5325,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5302,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5364,
									"end": 5367,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5361,
									"end": 5362,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5357,
									"end": 5368,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 5351,
									"end": 5355,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5348,
									"end": 5369,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5080,
									"end": 5375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5530,
									"end": 5533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 5497,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5599,
									"end": 5617,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5591,
									"end": 5597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5588,
									"end": 5618,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5621,
									"end": 5639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5697,
									"end": 5701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5691,
									"end": 5702,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 5665,
									"end": 5703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5810,
									"end": 5816,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5802,
									"end": 5808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5796,
									"end": 5800,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 5750,
									"end": 5817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5844,
									"end": 5845,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5868,
									"end": 5872,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5900,
									"end": 5902,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5892,
									"end": 5898,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5889,
									"end": 5903,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5917,
									"end": 5918,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6574,
									"end": 6575,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6591,
									"end": 6597,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6640,
									"end": 6649,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6635,
									"end": 6638,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6631,
									"end": 6650,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6625,
									"end": 6651,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6751,
									"end": 6757,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6744,
									"end": 6749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 6691,
									"end": 6758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6685,
									"end": 6689,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6678,
									"end": 6759,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6547,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5964,
									"end": 5968,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5960,
									"end": 5969,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5952,
									"end": 5958,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5948,
									"end": 5970,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 5998,
									"end": 6035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6057,
									"end": 6058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6083,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6079,
									"end": 6093,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6164,
									"end": 6173,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6159,
									"end": 6162,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6174,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6134,
									"end": 6176,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6215,
									"end": 6216,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6207,
									"end": 6213,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6203,
									"end": 6217,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6262,
									"end": 6264,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6251,
									"end": 6260,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6247,
									"end": 6265,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6108,
									"end": 6112,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6105,
									"end": 6106,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6101,
									"end": 6113,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6313,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6298,
									"end": 6305,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6365,
									"end": 6374,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6363,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6375,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6376,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 6450,
									"end": 6454,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6442,
									"end": 6448,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6438,
									"end": 6455,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6427,
									"end": 6436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 6408,
									"end": 6456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6400,
									"end": 6406,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6457,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6517,
									"end": 6518,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6513,
									"end": 6514,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6505,
									"end": 6511,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6501,
									"end": 6515,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6497,
									"end": 6519,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6484,
									"end": 6520,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60961,
									"end": 61261,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220196ba38f7cc4b4525a926acf6ca645f00c5a5ddb99bf7bed9940d6f1314fa5e464736f6c634300081a0033",
									".code": [
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "731133E9"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "731133E9"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60961,
											"end": 61261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 43130,
											"end": 43262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 43130,
											"end": 43262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 43130,
											"end": 43262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 42263,
											"end": 42568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42263,
											"end": 42568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 42263,
											"end": 42568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 42967,
											"end": 43070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 42967,
											"end": 43070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 42967,
											"end": 43070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 44897,
											"end": 45326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 44897,
											"end": 45326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43419,
											"end": 43971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 43419,
											"end": 43971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 43419,
											"end": 43971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60085,
											"end": 60186,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60085,
											"end": 60186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60085,
											"end": 60186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60085,
											"end": 60186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 60085,
											"end": 60186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60085,
											"end": 60186,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60085,
											"end": 60186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60085,
											"end": 60186,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 61095,
											"end": 61259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 61095,
											"end": 61259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 59430,
											"end": 59515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 59430,
											"end": 59515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 44039,
											"end": 44183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 44039,
											"end": 44183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44250,
											"end": 44407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 44250,
											"end": 44407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 44250,
											"end": 44407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 44474,
											"end": 44825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 44474,
											"end": 44825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 60335,
											"end": 60550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 60335,
											"end": 60550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43207,
											"end": 43214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43233,
											"end": 43242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43243,
											"end": 43245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43233,
											"end": 43246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43247,
											"end": 43254,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43233,
											"end": 43255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43226,
											"end": 43255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43226,
											"end": 43255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43130,
											"end": 43262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42365,
											"end": 42369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42415,
											"end": 42441,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42400,
											"end": 42441,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42400,
											"end": 42441,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42441,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42400,
											"end": 42441,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 42400,
											"end": 42509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42472,
											"end": 42509,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42457,
											"end": 42509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42457,
											"end": 42509,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42457,
											"end": 42509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42457,
											"end": 42468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42457,
											"end": 42509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42457,
											"end": 42509,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42457,
											"end": 42509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42457,
											"end": 42509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42509,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 42400,
											"end": 42509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 42400,
											"end": 42561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 42549,
											"end": 42560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 42525,
											"end": 42561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42561,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 42525,
											"end": 42561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42561,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 42400,
											"end": 42561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42381,
											"end": 42561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42381,
											"end": 42561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43027,
											"end": 43040,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43059,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43052,
											"end": 43063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43052,
											"end": 43063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42967,
											"end": 43070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45091,
											"end": 45105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45108,
											"end": 45120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 45108,
											"end": 45118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 45108,
											"end": 45120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45108,
											"end": 45120,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 45108,
											"end": 45120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45091,
											"end": 45120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45091,
											"end": 45120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45142,
											"end": 45148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45134,
											"end": 45148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45138,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45134,
											"end": 45148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45183,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 45134,
											"end": 45183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45153,
											"end": 45183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 45170,
											"end": 45174,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45176,
											"end": 45182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45153,
											"end": 45169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 45153,
											"end": 45183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45153,
											"end": 45183,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 45153,
											"end": 45183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45152,
											"end": 45183,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45134,
											"end": 45183,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 45134,
											"end": 45183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45130,
											"end": 45259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45130,
											"end": 45259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 45130,
											"end": 45259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45235,
											"end": 45241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45243,
											"end": 45247,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "PUSH",
											"source": 0,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 45206,
											"end": 45248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45206,
											"end": 45248,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45130,
											"end": 45259,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 45130,
											"end": 45259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45268,
											"end": 45319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 45291,
											"end": 45295,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45297,
											"end": 45299,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45301,
											"end": 45304,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45306,
											"end": 45312,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45314,
											"end": 45318,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45268,
											"end": 45290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 45268,
											"end": 45319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45268,
											"end": 45319,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 45268,
											"end": 45319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45081,
											"end": 45326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44897,
											"end": 45326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43543,
											"end": 43559,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43594,
											"end": 43597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43594,
											"end": 43604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43575,
											"end": 43583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43575,
											"end": 43590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43575,
											"end": 43604,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43571,
											"end": 43692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43571,
											"end": 43692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43653,
											"end": 43656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43653,
											"end": 43663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43665,
											"end": 43673,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43665,
											"end": 43680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "PUSH",
											"source": 0,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 43627,
											"end": 43681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43627,
											"end": 43681,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43571,
											"end": 43692,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43571,
											"end": 43692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43702,
											"end": 43732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43749,
											"end": 43757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43749,
											"end": 43764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43735,
											"end": 43765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43735,
											"end": 43765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43702,
											"end": 43765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43702,
											"end": 43765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43781,
											"end": 43790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43800,
											"end": 43808,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43800,
											"end": 43815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43796,
											"end": 43797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43796,
											"end": 43815,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43855,
											"end": 43923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 43865,
											"end": 43895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 43893,
											"end": 43894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43873,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 43865,
											"end": 43892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 43865,
											"end": 43895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43895,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 43865,
											"end": 43895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43897,
											"end": 43922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 43920,
											"end": 43921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43897,
											"end": 43900,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43897,
											"end": 43919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 43897,
											"end": 43919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43897,
											"end": 43922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43897,
											"end": 43922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43897,
											"end": 43922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 43897,
											"end": 43922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43897,
											"end": 43922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43897,
											"end": 43922,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 43897,
											"end": 43922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43855,
											"end": 43864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 43855,
											"end": 43923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43855,
											"end": 43923,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 43855,
											"end": 43923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43850,
											"end": 43851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 43836,
											"end": 43852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43836,
											"end": 43923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43817,
											"end": 43820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43817,
											"end": 43820,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43817,
											"end": 43820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43817,
											"end": 43820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43817,
											"end": 43820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43776,
											"end": 43934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43951,
											"end": 43964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43944,
											"end": 43964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43944,
											"end": 43964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43944,
											"end": 43964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43419,
											"end": 43971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60085,
											"end": 60186,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 60085,
											"end": 60186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59323,
											"end": 59336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 59323,
											"end": 59334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 59323,
											"end": 59336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59323,
											"end": 59336,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 59323,
											"end": 59336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60149,
											"end": 60179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 60176,
											"end": 60177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60149,
											"end": 60167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 60149,
											"end": 60179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60149,
											"end": 60179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 60149,
											"end": 60179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60085,
											"end": 60186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59323,
											"end": 59336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 59323,
											"end": 59334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 59323,
											"end": 59336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59323,
											"end": 59336,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 59323,
											"end": 59336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61220,
											"end": 61252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 61226,
											"end": 61233,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61235,
											"end": 61237,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61239,
											"end": 61245,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61247,
											"end": 61251,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61220,
											"end": 61225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 61220,
											"end": 61252,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61220,
											"end": 61252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 61220,
											"end": 61252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59502,
											"end": 59508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59495,
											"end": 59508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59495,
											"end": 59508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44124,
											"end": 44176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 44143,
											"end": 44155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 44143,
											"end": 44153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 44143,
											"end": 44155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44143,
											"end": 44155,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 44143,
											"end": 44155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44157,
											"end": 44165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44167,
											"end": 44175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44124,
											"end": 44142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 44124,
											"end": 44176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44124,
											"end": 44176,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 44124,
											"end": 44176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44340,
											"end": 44344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44363,
											"end": 44381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44382,
											"end": 44389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44363,
											"end": 44390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44391,
											"end": 44399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 44363,
											"end": 44400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44356,
											"end": 44400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44356,
											"end": 44400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44250,
											"end": 44407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44597,
											"end": 44611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44614,
											"end": 44626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 44614,
											"end": 44624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 44614,
											"end": 44626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44614,
											"end": 44626,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 44614,
											"end": 44626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44597,
											"end": 44626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44597,
											"end": 44626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44648,
											"end": 44654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44640,
											"end": 44654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44644,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44640,
											"end": 44654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 44640,
											"end": 44689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44659,
											"end": 44689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 44676,
											"end": 44680,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44682,
											"end": 44688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44659,
											"end": 44675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 44659,
											"end": 44689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44659,
											"end": 44689,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 44659,
											"end": 44689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44658,
											"end": 44689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44689,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 44640,
											"end": 44689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44636,
											"end": 44765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44636,
											"end": 44765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 44636,
											"end": 44765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44741,
											"end": 44747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44749,
											"end": 44753,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "PUSH",
											"source": 0,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 44712,
											"end": 44754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44712,
											"end": 44754,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44636,
											"end": 44765,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 44636,
											"end": 44765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44774,
											"end": 44818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 44792,
											"end": 44796,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44798,
											"end": 44800,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44802,
											"end": 44804,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44806,
											"end": 44811,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44813,
											"end": 44817,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44774,
											"end": 44791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 44774,
											"end": 44818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44774,
											"end": 44818,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 44774,
											"end": 44818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44587,
											"end": 44825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44474,
											"end": 44825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59323,
											"end": 59336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 59323,
											"end": 59334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 59323,
											"end": 59336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59323,
											"end": 59336,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 59323,
											"end": 59336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60439,
											"end": 60440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60419,
											"end": 60441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60419,
											"end": 60441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60419,
											"end": 60427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60419,
											"end": 60441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60419,
											"end": 60441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60419,
											"end": 60441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60415,
											"end": 60506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 60415,
											"end": 60506,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60492,
											"end": 60493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 60464,
											"end": 60495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60464,
											"end": 60495,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60415,
											"end": 60506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 60415,
											"end": 60506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60515,
											"end": 60543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 60534,
											"end": 60542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60515,
											"end": 60533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 60515,
											"end": 60543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60515,
											"end": 60543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 60515,
											"end": 60543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60335,
											"end": 60550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10699,
											"end": 10845,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10699,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10813,
											"end": 10838,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10798,
											"end": 10838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10798,
											"end": 10838,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10798,
											"end": 10838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10798,
											"end": 10838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10798,
											"end": 10838,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10798,
											"end": 10838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10798,
											"end": 10838,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10699,
											"end": 10845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10699,
											"end": 10845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10699,
											"end": 10845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10699,
											"end": 10845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9730,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9634,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9687,
											"end": 9694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9723,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49898,
											"end": 50343,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 49898,
											"end": 50343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50105,
											"end": 50106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50091,
											"end": 50107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50091,
											"end": 50107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50091,
											"end": 50107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50087,
											"end": 50175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 50087,
											"end": 50175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50161,
											"end": 50162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 50130,
											"end": 50164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50130,
											"end": 50164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50087,
											"end": 50175,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 50087,
											"end": 50175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50204,
											"end": 50205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50188,
											"end": 50206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50188,
											"end": 50206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50188,
											"end": 50192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50188,
											"end": 50206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50188,
											"end": 50206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50188,
											"end": 50206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50184,
											"end": 50272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 50184,
											"end": 50272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50258,
											"end": 50259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "PUSH",
											"source": 0,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 50229,
											"end": 50261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50229,
											"end": 50261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50184,
											"end": 50272,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 50184,
											"end": 50272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 50308,
											"end": 50312,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50314,
											"end": 50316,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50318,
											"end": 50321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50323,
											"end": 50329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50331,
											"end": 50335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 50281,
											"end": 50336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50336,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 50281,
											"end": 50336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49898,
											"end": 50343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49898,
											"end": 50343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49898,
											"end": 50343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49898,
											"end": 50343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49898,
											"end": 50343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49898,
											"end": 50343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34487,
											"end": 34684,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 34487,
											"end": 34684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34573,
											"end": 34584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34661,
											"end": 34665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34656,
											"end": 34659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34652,
											"end": 34666,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34645,
											"end": 34649,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34640,
											"end": 34643,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34636,
											"end": 34650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34632,
											"end": 34667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34626,
											"end": 34668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34619,
											"end": 34668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34619,
											"end": 34668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34487,
											"end": 34684,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34487,
											"end": 34684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34487,
											"end": 34684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34487,
											"end": 34684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34487,
											"end": 34684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34285,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 34088,
											"end": 34285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34262,
											"end": 34266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34257,
											"end": 34260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34253,
											"end": 34267,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34246,
											"end": 34250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34241,
											"end": 34244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34237,
											"end": 34251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34233,
											"end": 34268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34220,
											"end": 34269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34220,
											"end": 34269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34285,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59588,
											"end": 59750,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 59588,
											"end": 59750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59658,
											"end": 59670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 59658,
											"end": 59668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 59658,
											"end": 59670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59658,
											"end": 59670,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 59658,
											"end": 59670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59647,
											"end": 59670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59647,
											"end": 59670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59647,
											"end": 59654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 59647,
											"end": 59652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 59647,
											"end": 59654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59647,
											"end": 59654,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 59647,
											"end": 59654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59647,
											"end": 59670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59647,
											"end": 59670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59647,
											"end": 59670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59643,
											"end": 59744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 59643,
											"end": 59744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59720,
											"end": 59732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 59720,
											"end": 59730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 59720,
											"end": 59732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59720,
											"end": 59732,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 59720,
											"end": 59732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 59693,
											"end": 59733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59693,
											"end": 59733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59643,
											"end": 59744,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 59643,
											"end": 59744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59588,
											"end": 59750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60704,
											"end": 60891,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 60704,
											"end": 60891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60777,
											"end": 60793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60796,
											"end": 60802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60777,
											"end": 60802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60777,
											"end": 60802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60821,
											"end": 60829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60818,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60812,
											"end": 60818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60812,
											"end": 60829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60875,
											"end": 60883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60865,
											"end": 60873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60844,
											"end": 60884,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 60767,
											"end": 60891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60704,
											"end": 60891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60704,
											"end": 60891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51629,
											"end": 51975,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 51629,
											"end": 51975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51739,
											"end": 51740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51725,
											"end": 51741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51725,
											"end": 51741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51725,
											"end": 51727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51725,
											"end": 51741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51725,
											"end": 51741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51725,
											"end": 51741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51721,
											"end": 51809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 51721,
											"end": 51809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51795,
											"end": 51796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 51764,
											"end": 51798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51764,
											"end": 51798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51721,
											"end": 51809,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 51721,
											"end": 51809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51819,
											"end": 51839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51841,
											"end": 51864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 51887,
											"end": 51889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51891,
											"end": 51896,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 51868,
											"end": 51897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51897,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 51868,
											"end": 51897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51818,
											"end": 51897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51818,
											"end": 51897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51818,
											"end": 51897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51818,
											"end": 51897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 51942,
											"end": 51943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51946,
											"end": 51948,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51955,
											"end": 51961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51963,
											"end": 51967,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 51907,
											"end": 51968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51968,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 51907,
											"end": 51968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51711,
											"end": 51975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51711,
											"end": 51975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51629,
											"end": 51975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51629,
											"end": 51975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51629,
											"end": 51975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51629,
											"end": 51975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51629,
											"end": 51975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54151,
											"end": 54466,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 54151,
											"end": 54466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54278,
											"end": 54279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54258,
											"end": 54280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54258,
											"end": 54280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54258,
											"end": 54266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54258,
											"end": 54280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54258,
											"end": 54280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54258,
											"end": 54280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54254,
											"end": 54348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 54254,
											"end": 54348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54334,
											"end": 54335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 54303,
											"end": 54337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54303,
											"end": 54337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54254,
											"end": 54348,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 54254,
											"end": 54348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54395,
											"end": 54403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54376,
											"end": 54381,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54357,
											"end": 54382,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54383,
											"end": 54391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54357,
											"end": 54403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54440,
											"end": 54448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54433,
											"end": 54438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 54450,
											"end": 54458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 54418,
											"end": 54459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54418,
											"end": 54459,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 54151,
											"end": 54466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54151,
											"end": 54466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54151,
											"end": 54466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54151,
											"end": 54466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49034,
											"end": 49497,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 49034,
											"end": 49497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49170,
											"end": 49171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49156,
											"end": 49172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49156,
											"end": 49172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49158,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49156,
											"end": 49172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49152,
											"end": 49240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 49152,
											"end": 49240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49226,
											"end": 49227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 49195,
											"end": 49229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49195,
											"end": 49229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49152,
											"end": 49240,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 49152,
											"end": 49240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49269,
											"end": 49270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49253,
											"end": 49271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49253,
											"end": 49271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49253,
											"end": 49257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49253,
											"end": 49271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49253,
											"end": 49271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49253,
											"end": 49271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49249,
											"end": 49337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 49249,
											"end": 49337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49323,
											"end": 49324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "PUSH",
											"source": 0,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 49294,
											"end": 49326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49294,
											"end": 49326,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49249,
											"end": 49337,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 49249,
											"end": 49337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49347,
											"end": 49367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49369,
											"end": 49392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49396,
											"end": 49425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 49415,
											"end": 49417,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49419,
											"end": 49424,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49396,
											"end": 49414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 49396,
											"end": 49425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49396,
											"end": 49425,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 49396,
											"end": 49425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49346,
											"end": 49425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49346,
											"end": 49425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49346,
											"end": 49425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49346,
											"end": 49425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49435,
											"end": 49490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 49462,
											"end": 49466,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49468,
											"end": 49470,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49472,
											"end": 49475,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49477,
											"end": 49483,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49485,
											"end": 49489,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49435,
											"end": 49461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 49435,
											"end": 49490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49435,
											"end": 49490,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 49435,
											"end": 49490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49142,
											"end": 49497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49142,
											"end": 49497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49034,
											"end": 49497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49034,
											"end": 49497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49034,
											"end": 49497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49034,
											"end": 49497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49034,
											"end": 49497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49034,
											"end": 49497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 48577,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 47887,
											"end": 48577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48088,
											"end": 48118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 48096,
											"end": 48100,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48102,
											"end": 48104,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48106,
											"end": 48109,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48111,
											"end": 48117,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48088,
											"end": 48095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 48088,
											"end": 48118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48088,
											"end": 48118,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 48088,
											"end": 48118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48146,
											"end": 48147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48132,
											"end": 48148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48132,
											"end": 48148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48132,
											"end": 48134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48132,
											"end": 48148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48132,
											"end": 48148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48132,
											"end": 48148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48128,
											"end": 48571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 48128,
											"end": 48571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48164,
											"end": 48180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48183,
											"end": 48195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 48183,
											"end": 48193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 48183,
											"end": 48195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48183,
											"end": 48195,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 48183,
											"end": 48195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48164,
											"end": 48195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48164,
											"end": 48195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48227,
											"end": 48228,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48213,
											"end": 48216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48213,
											"end": 48223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48213,
											"end": 48228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48209,
											"end": 48561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 48209,
											"end": 48561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48248,
											"end": 48258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48261,
											"end": 48286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48284,
											"end": 48285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48261,
											"end": 48264,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48261,
											"end": 48283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 48261,
											"end": 48283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48261,
											"end": 48286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48261,
											"end": 48286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48261,
											"end": 48286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 48261,
											"end": 48286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48261,
											"end": 48286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48261,
											"end": 48286,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48261,
											"end": 48286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48248,
											"end": 48286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48248,
											"end": 48286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48304,
											"end": 48317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48320,
											"end": 48348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 48346,
											"end": 48347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48320,
											"end": 48326,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48320,
											"end": 48345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 48320,
											"end": 48345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48320,
											"end": 48348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48320,
											"end": 48348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48320,
											"end": 48348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 48320,
											"end": 48348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48320,
											"end": 48348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48320,
											"end": 48348,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 48320,
											"end": 48348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48304,
											"end": 48348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48304,
											"end": 48348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48366,
											"end": 48433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 48397,
											"end": 48405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48407,
											"end": 48411,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 48413,
											"end": 48415,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 48417,
											"end": 48419,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48421,
											"end": 48426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48428,
											"end": 48432,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 48366,
											"end": 48396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 48366,
											"end": 48433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48366,
											"end": 48433,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 48366,
											"end": 48433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48230,
											"end": 48448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48230,
											"end": 48448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48209,
											"end": 48561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 48209,
											"end": 48561,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48209,
											"end": 48561,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 48209,
											"end": 48561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48472,
											"end": 48546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 48508,
											"end": 48516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48518,
											"end": 48522,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48524,
											"end": 48526,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48531,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48533,
											"end": 48539,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48541,
											"end": 48545,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48472,
											"end": 48507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 48472,
											"end": 48546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48472,
											"end": 48546,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 48472,
											"end": 48546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48209,
											"end": 48561,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 48209,
											"end": 48561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48150,
											"end": 48571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48128,
											"end": 48571,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 48128,
											"end": 48571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 48577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 48577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 48577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 48577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 48577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 48577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56963,
											"end": 57812,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 56963,
											"end": 57812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57071,
											"end": 57094,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57096,
											"end": 57119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57257,
											"end": 57261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57251,
											"end": 57262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57241,
											"end": 57262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57241,
											"end": 57262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57327,
											"end": 57328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57319,
											"end": 57325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57312,
											"end": 57329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57465,
											"end": 57473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57450,
											"end": 57456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57446,
											"end": 57463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57439,
											"end": 57474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57587,
											"end": 57591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57579,
											"end": 57585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57575,
											"end": 57592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57565,
											"end": 57592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57565,
											"end": 57592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57620,
											"end": 57621,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57612,
											"end": 57618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57605,
											"end": 57622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57661,
											"end": 57669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57654,
											"end": 57658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57646,
											"end": 57652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57642,
											"end": 57659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57635,
											"end": 57670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57790,
											"end": 57794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57782,
											"end": 57788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57778,
											"end": 57795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57772,
											"end": 57776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57765,
											"end": 57796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56963,
											"end": 57812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56963,
											"end": 57812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56963,
											"end": 57812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56963,
											"end": 57812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56963,
											"end": 57812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56963,
											"end": 57812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46027,
											"end": 47308,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 46027,
											"end": 47308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46162,
											"end": 46168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46162,
											"end": 46175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46148,
											"end": 46151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46148,
											"end": 46158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46148,
											"end": 46175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46144,
											"end": 46261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 46144,
											"end": 46261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46224,
											"end": 46227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46224,
											"end": 46234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46236,
											"end": 46242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46236,
											"end": 46249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "PUSH",
											"source": 0,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 46198,
											"end": 46250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46144,
											"end": 46261,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 46144,
											"end": 46261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46271,
											"end": 46287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46290,
											"end": 46302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 46290,
											"end": 46300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 46290,
											"end": 46302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46290,
											"end": 46302,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 46290,
											"end": 46302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46271,
											"end": 46302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46271,
											"end": 46302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46318,
											"end": 46327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46337,
											"end": 46340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46337,
											"end": 46347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46333,
											"end": 46334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46333,
											"end": 46347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46381,
											"end": 46406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 46404,
											"end": 46405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46384,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 46381,
											"end": 46403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 46381,
											"end": 46406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46381,
											"end": 46406,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 46381,
											"end": 46406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46420,
											"end": 46433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46436,
											"end": 46464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 46462,
											"end": 46463,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46436,
											"end": 46442,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46436,
											"end": 46461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 46436,
											"end": 46461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46436,
											"end": 46464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46436,
											"end": 46464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46436,
											"end": 46464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 46436,
											"end": 46464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46436,
											"end": 46464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46436,
											"end": 46464,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 46436,
											"end": 46464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46420,
											"end": 46464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46420,
											"end": 46464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46499,
											"end": 46500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46483,
											"end": 46501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46483,
											"end": 46501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46483,
											"end": 46487,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46483,
											"end": 46501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46483,
											"end": 46501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46483,
											"end": 46501,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46479,
											"end": 46899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 46479,
											"end": 46899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46521,
											"end": 46540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46543,
											"end": 46552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46553,
											"end": 46555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46543,
											"end": 46556,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46557,
											"end": 46561,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46543,
											"end": 46562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46521,
											"end": 46562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46521,
											"end": 46562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46598,
											"end": 46603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46584,
											"end": 46595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46584,
											"end": 46603,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46580,
											"end": 46709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46580,
											"end": 46709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 46580,
											"end": 46709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46661,
											"end": 46665,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46667,
											"end": 46678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46680,
											"end": 46685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46687,
											"end": 46689,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "PUSH",
											"source": 0,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 46634,
											"end": 46690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46580,
											"end": 46709,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 46580,
											"end": 46709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46861,
											"end": 46866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46847,
											"end": 46858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46847,
											"end": 46866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46835,
											"end": 46837,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46825,
											"end": 46838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46839,
											"end": 46843,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46825,
											"end": 46844,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46866,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46825,
											"end": 46866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46503,
											"end": 46899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46479,
											"end": 46899,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 46479,
											"end": 46899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46931,
											"end": 46932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46917,
											"end": 46933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46917,
											"end": 46933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46917,
											"end": 46919,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46917,
											"end": 46933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46917,
											"end": 46933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46917,
											"end": 46933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46913,
											"end": 46994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 46913,
											"end": 46994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46974,
											"end": 46979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46963,
											"end": 46965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46953,
											"end": 46966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46967,
											"end": 46969,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 46953,
											"end": 46979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46953,
											"end": 46979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46913,
											"end": 46994,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 46913,
											"end": 46994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46354,
											"end": 47004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46354,
											"end": 47004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46349,
											"end": 46352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46349,
											"end": 46352,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46349,
											"end": 46352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46349,
											"end": 46352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46349,
											"end": 46352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46313,
											"end": 47004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47032,
											"end": 47033,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47018,
											"end": 47021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47018,
											"end": 47028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47018,
											"end": 47033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47014,
											"end": 47302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 47014,
											"end": 47302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47049,
											"end": 47059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47062,
											"end": 47087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 47085,
											"end": 47086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47062,
											"end": 47065,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 47062,
											"end": 47084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47062,
											"end": 47087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47087,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 47062,
											"end": 47087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47049,
											"end": 47087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47049,
											"end": 47087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47101,
											"end": 47114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47117,
											"end": 47145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 47143,
											"end": 47144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47117,
											"end": 47123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47117,
											"end": 47142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 47117,
											"end": 47142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47117,
											"end": 47145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47117,
											"end": 47145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47117,
											"end": 47145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47117,
											"end": 47145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47117,
											"end": 47145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47117,
											"end": 47145,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 47117,
											"end": 47145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47101,
											"end": 47145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47101,
											"end": 47145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47195,
											"end": 47197,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47189,
											"end": 47193,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47179,
											"end": 47187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 47199,
											"end": 47201,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47203,
											"end": 47208,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 47164,
											"end": 47209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47164,
											"end": 47209,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 47035,
											"end": 47220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47035,
											"end": 47220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47014,
											"end": 47302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 47014,
											"end": 47302,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47014,
											"end": 47302,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 47014,
											"end": 47302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47275,
											"end": 47277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47269,
											"end": 47273,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47259,
											"end": 47267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 47279,
											"end": 47282,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47284,
											"end": 47290,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 47245,
											"end": 47291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47245,
											"end": 47291,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 47014,
											"end": 47302,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 47014,
											"end": 47302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46134,
											"end": 47308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46027,
											"end": 47308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46027,
											"end": 47308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46027,
											"end": 47308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46027,
											"end": 47308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46027,
											"end": 47308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54644,
											"end": 55618,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 54644,
											"end": 55618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54867,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54850,
											"end": 54852,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54850,
											"end": 54864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54850,
											"end": 54864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54850,
											"end": 54864,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 54850,
											"end": 54868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54846,
											"end": 55612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54846,
											"end": 55612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 54846,
											"end": 55612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54905,
											"end": 54907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54888,
											"end": 54926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54926,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 54927,
											"end": 54935,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54937,
											"end": 54941,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54943,
											"end": 54945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54947,
											"end": 54952,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54954,
											"end": 54958,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54888,
											"end": 54959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 54888,
											"end": 54959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54888,
											"end": 54959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55260,
											"end": 55261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55243,
											"end": 55249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55243,
											"end": 55256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55243,
											"end": 55261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55239,
											"end": 55588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 55239,
											"end": 55588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55372,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 55347,
											"end": 55373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55373,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55239,
											"end": 55588,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 55239,
											"end": 55588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55540,
											"end": 55546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55534,
											"end": 55547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55525,
											"end": 55531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55521,
											"end": 55523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55517,
											"end": 55532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 54884,
											"end": 55602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55020,
											"end": 55063,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 55020,
											"end": 55063,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55020,
											"end": 55063,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55008,
											"end": 55063,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55008,
											"end": 55063,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55063,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55004,
											"end": 55178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55156,
											"end": 55158,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 55133,
											"end": 55159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55133,
											"end": 55159,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55178,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55004,
											"end": 55178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54960,
											"end": 55192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54846,
											"end": 55612,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 54846,
											"end": 55612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54644,
											"end": 55618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54644,
											"end": 55618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54644,
											"end": 55618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54644,
											"end": 55618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54644,
											"end": 55618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54644,
											"end": 55618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54644,
											"end": 55618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55806,
											"end": 56847,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 55806,
											"end": 56847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56054,
											"end": 56055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56037,
											"end": 56039,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56037,
											"end": 56051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56037,
											"end": 56051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56037,
											"end": 56051,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 56037,
											"end": 56055,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56033,
											"end": 56841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56033,
											"end": 56841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 56033,
											"end": 56841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56092,
											"end": 56094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56118,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56075,
											"end": 56118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56118,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 56119,
											"end": 56127,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56133,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56135,
											"end": 56138,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56140,
											"end": 56146,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56148,
											"end": 56152,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 56075,
											"end": 56153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 56075,
											"end": 56153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 56075,
											"end": 56153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56472,
											"end": 56478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56472,
											"end": 56485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56472,
											"end": 56490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56468,
											"end": 56817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 56468,
											"end": 56817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56599,
											"end": 56601,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 56576,
											"end": 56602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56576,
											"end": 56602,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56468,
											"end": 56817,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 56468,
											"end": 56817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56769,
											"end": 56775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 56776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56754,
											"end": 56760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56750,
											"end": 56752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56746,
											"end": 56761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56739,
											"end": 56777,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 56071,
											"end": 56831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56244,
											"end": 56292,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 56244,
											"end": 56292,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56244,
											"end": 56292,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 56232,
											"end": 56292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56232,
											"end": 56292,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56232,
											"end": 56292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56232,
											"end": 56240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56232,
											"end": 56292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56232,
											"end": 56292,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56232,
											"end": 56292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56232,
											"end": 56292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 56228,
											"end": 56407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56385,
											"end": 56387,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 56362,
											"end": 56388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56362,
											"end": 56388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56407,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 56228,
											"end": 56407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56154,
											"end": 56421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56033,
											"end": 56841,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 56033,
											"end": 56841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55806,
											"end": 56847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55806,
											"end": 56847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55806,
											"end": 56847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55806,
											"end": 56847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55806,
											"end": 56847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55806,
											"end": 56847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55806,
											"end": 56847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3910,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3924,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 3958,
											"end": 3959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3933,
											"end": 3960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4061,
											"end": 4068,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4058,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4069,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 4075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4197,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 4316,
											"end": 4322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4252,
											"end": 4323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4323,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4390,
											"end": 4396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4388,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4371,
											"end": 4376,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4332,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4422,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4420,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4756,
											"end": 4762,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4692,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4900,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4783,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4894,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 5086,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4906,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5031,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 5032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5051,
											"end": 5055,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5048,
											"end": 5049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5079,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5080,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5373,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5092,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5197,
											"end": 5201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 5175,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5202,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5175,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5293,
											"end": 5303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5312,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5257,
											"end": 5267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5288,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5316,
											"end": 5334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5354,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5345,
											"end": 5367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5440,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5440,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5460,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5440,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5497,
											"end": 5501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5469,
											"end": 5502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5502,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5469,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5673,
											"end": 5679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5703,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5753,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5741,
											"end": 5758,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5948,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5831,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5937,
											"end": 5938,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5930,
											"end": 5942,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 6108,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6165,
											"end": 6171,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 6108,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6172,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6108,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6092,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6092,
											"end": 6173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6092,
											"end": 6173,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 6092,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6083,
											"end": 6173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6083,
											"end": 6173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6193,
											"end": 6198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6222,
											"end": 6228,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 6220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6245,
											"end": 6261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6301,
											"end": 6307,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6297,
											"end": 6314,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6338,
											"end": 6341,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6330,
											"end": 6336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6327,
											"end": 6342,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6357,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6481,
											"end": 6496,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6626,
											"end": 6629,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6614,
											"end": 6624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 6593,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6630,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6593,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6655,
											"end": 6658,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6651,
											"end": 6665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6510,
											"end": 6513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6459,
											"end": 6480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6809,
											"end": 6815,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6828,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 6791,
											"end": 6913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6832,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 6832,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 6832,
											"end": 6911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6832,
											"end": 6911,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 6832,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6913,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 6791,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6956,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 7064,
											"end": 7067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7041,
											"end": 7047,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6974,
											"end": 7068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6974,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 7068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 7068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 7074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 7074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7197,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 7080,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7186,
											"end": 7187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7373,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7376,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7414,
											"end": 7443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7498,
											"end": 7502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7492,
											"end": 7496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7604,
											"end": 7607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7621,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7652,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7644,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 7788,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 7829,
											"end": 7835,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7788,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 7788,
											"end": 7836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7788,
											"end": 7836,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 7788,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 7772,
											"end": 7837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7837,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 7772,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7846,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7898,
											"end": 7902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7891,
											"end": 7896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7922,
											"end": 7925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7940,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7943,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 7943,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 7943,
											"end": 8022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7943,
											"end": 8022,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 7943,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 8080,
											"end": 8086,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8033,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8087,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 8033,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7753,
											"end": 8093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 8093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8167,
											"end": 8172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8193,
											"end": 8220,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 8183,
											"end": 8305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 8224,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 8224,
											"end": 8303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8303,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 8224,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8305,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 8183,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8328,
											"end": 8348,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 8440,
											"end": 8443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8425,
											"end": 8429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8417,
											"end": 8423,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 8366,
											"end": 8444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8444,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 8366,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8610,
											"end": 8616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8626,
											"end": 8632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8694,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8679,
											"end": 8688,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8670,
											"end": 8677,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8666,
											"end": 8689,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8695,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 8698,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8818,
											"end": 8819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 8888,
											"end": 8895,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8877,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 8843,
											"end": 8896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 8896,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 8843,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8833,
											"end": 8896,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8833,
											"end": 8896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8945,
											"end": 8947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8971,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 9016,
											"end": 9023,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9007,
											"end": 9013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 9005,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8992,
											"end": 9014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 8971,
											"end": 9024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 9024,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8971,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8961,
											"end": 9024,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8961,
											"end": 9024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8916,
											"end": 9034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9101,
											"end": 9103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9099,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9086,
											"end": 9104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9105,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9150,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9124,
											"end": 9130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9121,
											"end": 9151,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9154,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 9154,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 9154,
											"end": 9233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9154,
											"end": 9233,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 9154,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 9329,
											"end": 9336,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9320,
											"end": 9326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 9318,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 9259,
											"end": 9337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9337,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 9259,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9337,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9044,
											"end": 9347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9414,
											"end": 9416,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9403,
											"end": 9412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9386,
											"end": 9418,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9437,
											"end": 9443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9464,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9467,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 9467,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 9467,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9467,
											"end": 9546,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 9467,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9572,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 9642,
											"end": 9649,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9572,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 9572,
											"end": 9650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9572,
											"end": 9650,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 9572,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9562,
											"end": 9650,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9562,
											"end": 9650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9357,
											"end": 9660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9727,
											"end": 9730,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9716,
											"end": 9725,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9712,
											"end": 9731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9699,
											"end": 9732,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9751,
											"end": 9757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9748,
											"end": 9778,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 9781,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 9781,
											"end": 9860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9860,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 9781,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 9940,
											"end": 9947,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 9886,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 9948,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 9886,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9670,
											"end": 9958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 9965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10048,
											"end": 10052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10156,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10157,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10160,
											"end": 10178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10210,
											"end": 10214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10215,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10270,
											"end": 10274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10264,
											"end": 10268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10401,
											"end": 10406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10426,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 10442,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 10499,
											"end": 10505,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10442,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 10442,
											"end": 10506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10442,
											"end": 10506,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 10442,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10426,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10426,
											"end": 10507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10426,
											"end": 10507,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 10426,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10417,
											"end": 10507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10417,
											"end": 10507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10527,
											"end": 10532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10556,
											"end": 10562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10542,
											"end": 10563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10583,
											"end": 10588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10641,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10631,
											"end": 10648,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10629,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10675,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10661,
											"end": 10676,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 10691,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 10691,
											"end": 10770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10770,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 10691,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10823,
											"end": 10829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10815,
											"end": 10830,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10898,
											"end": 10901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 10960,
											"end": 10963,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10948,
											"end": 10958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 10927,
											"end": 10964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10964,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 10927,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10922,
											"end": 10925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 10998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10989,
											"end": 10992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 10999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10978,
											"end": 10999,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10978,
											"end": 10999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 11009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10844,
											"end": 10847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10793,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 11015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 11015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 11015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11109,
											"end": 11114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11158,
											"end": 11161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11151,
											"end": 11155,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11143,
											"end": 11149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11162,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11125,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 11125,
											"end": 11247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 11166,
											"end": 11245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11125,
											"end": 11247,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 11125,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11283,
											"end": 11289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11290,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 11398,
											"end": 11401,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11390,
											"end": 11396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11387,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11375,
											"end": 11381,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 11308,
											"end": 11402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11402,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 11308,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11299,
											"end": 11402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11299,
											"end": 11402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11532,
											"end": 11538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11540,
											"end": 11546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11577,
											"end": 11586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 11575,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11560,
											"end": 11592,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 11595,
											"end": 11674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 11744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11732,
											"end": 11741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11728,
											"end": 11745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11715,
											"end": 11746,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11773,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11765,
											"end": 11771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11762,
											"end": 11792,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 11795,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 11970,
											"end": 11977,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11961,
											"end": 11967,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 11959,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11946,
											"end": 11968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 11900,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11978,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 11900,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 11978,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 11978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11686,
											"end": 11988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12055,
											"end": 12057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12044,
											"end": 12053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12059,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12078,
											"end": 12084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12075,
											"end": 12105,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 12108,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 12108,
											"end": 12187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12187,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 12108,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12213,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 12283,
											"end": 12290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12274,
											"end": 12280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12272,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12259,
											"end": 12281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12213,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 12213,
											"end": 12291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12213,
											"end": 12291,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 12213,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12203,
											"end": 12291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12203,
											"end": 12291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11998,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 12308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12381,
											"end": 12387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12567,
											"end": 12573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12562,
											"end": 12565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12555,
											"end": 12574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12602,
											"end": 12605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12598,
											"end": 12612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12691,
											"end": 12695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12706,
											"end": 12717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12706,
											"end": 12717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12744,
											"end": 12748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12739,
											"end": 12742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 12749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12727,
											"end": 12749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12727,
											"end": 12749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12762,
											"end": 12870,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 12762,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 12857,
											"end": 12862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 12839,
											"end": 12863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12863,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 12839,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12827,
											"end": 12864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12762,
											"end": 12870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12762,
											"end": 12870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12762,
											"end": 12870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12945,
											"end": 12955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 13008,
											"end": 13011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13000,
											"end": 13006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12966,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 12966,
											"end": 13012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12966,
											"end": 13012,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 12966,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13044,
											"end": 13048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13039,
											"end": 13042,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13021,
											"end": 13049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13021,
											"end": 13049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 13055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13131,
											"end": 13135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13163,
											"end": 13167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13158,
											"end": 13161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13154,
											"end": 13168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13329,
											"end": 13332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13358,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 13406,
											"end": 13411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13358,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 13358,
											"end": 13412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13358,
											"end": 13412,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 13358,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 13507,
											"end": 13513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13502,
											"end": 13505,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 13428,
											"end": 13514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13514,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 13428,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13421,
											"end": 13514,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13421,
											"end": 13514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13538,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 13588,
											"end": 13593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13538,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 13538,
											"end": 13594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13538,
											"end": 13594,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 13538,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13617,
											"end": 13624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13648,
											"end": 13649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13658,
											"end": 13664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13655,
											"end": 13656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13652,
											"end": 13665,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13734,
											"end": 13740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 13820,
											"end": 13823,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13805,
											"end": 13818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 13761,
											"end": 13824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 13824,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 13761,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13754,
											"end": 13824,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 13754,
											"end": 13824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 13900,
											"end": 13906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 13847,
											"end": 13907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13907,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 13847,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13837,
											"end": 13907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13837,
											"end": 13907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13680,
											"end": 13681,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13677,
											"end": 13678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13673,
											"end": 13682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13668,
											"end": 13682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13668,
											"end": 13682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13637,
											"end": 13651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13926,
											"end": 13936,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13926,
											"end": 13936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14091,
											"end": 14095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14118,
											"end": 14127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14114,
											"end": 14132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14106,
											"end": 14132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14106,
											"end": 14132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14178,
											"end": 14187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14172,
											"end": 14176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14168,
											"end": 14188,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14164,
											"end": 14165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14153,
											"end": 14162,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14149,
											"end": 14166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14142,
											"end": 14189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14206,
											"end": 14314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 14309,
											"end": 14313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14300,
											"end": 14306,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14206,
											"end": 14314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 14206,
											"end": 14314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14206,
											"end": 14314,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 14206,
											"end": 14314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14198,
											"end": 14314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14198,
											"end": 14314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 14327,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14422,
											"end": 14428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14430,
											"end": 14436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14438,
											"end": 14444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14446,
											"end": 14452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14498,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14483,
											"end": 14492,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14474,
											"end": 14481,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14470,
											"end": 14493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14466,
											"end": 14499,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14463,
											"end": 14583,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14463,
											"end": 14583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 14463,
											"end": 14583,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14502,
											"end": 14581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 14502,
											"end": 14581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 14502,
											"end": 14581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14502,
											"end": 14581,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 14502,
											"end": 14581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14463,
											"end": 14583,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 14463,
											"end": 14583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14622,
											"end": 14623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14647,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 14692,
											"end": 14699,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14683,
											"end": 14689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14672,
											"end": 14681,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14668,
											"end": 14690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 14647,
											"end": 14700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 14700,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 14647,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14637,
											"end": 14700,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14637,
											"end": 14700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14749,
											"end": 14751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14775,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 14820,
											"end": 14827,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14811,
											"end": 14817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14800,
											"end": 14809,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14796,
											"end": 14818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14775,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 14775,
											"end": 14828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14775,
											"end": 14828,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 14775,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14765,
											"end": 14828,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14765,
											"end": 14828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 14838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14877,
											"end": 14879,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14903,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 14948,
											"end": 14955,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14939,
											"end": 14945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14928,
											"end": 14937,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 14946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14903,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 14903,
											"end": 14956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14903,
											"end": 14956,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 14903,
											"end": 14956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14956,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15033,
											"end": 15035,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15022,
											"end": 15031,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15018,
											"end": 15036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15005,
											"end": 15037,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 15064,
											"end": 15082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15056,
											"end": 15062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15053,
											"end": 15083,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15050,
											"end": 15167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15050,
											"end": 15167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 15050,
											"end": 15167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 15086,
											"end": 15165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 15086,
											"end": 15165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15165,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 15086,
											"end": 15165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15050,
											"end": 15167,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 15050,
											"end": 15167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15191,
											"end": 15253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 15245,
											"end": 15252,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15234,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15221,
											"end": 15243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15191,
											"end": 15253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 15191,
											"end": 15253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15191,
											"end": 15253,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 15191,
											"end": 15253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15181,
											"end": 15253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15181,
											"end": 15253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14976,
											"end": 15263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 15270,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 15270,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 15270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15276,
											"end": 15394,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 15276,
											"end": 15394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15363,
											"end": 15387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 15381,
											"end": 15386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15363,
											"end": 15387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 15363,
											"end": 15387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15363,
											"end": 15387,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 15363,
											"end": 15387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15358,
											"end": 15361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15351,
											"end": 15388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15276,
											"end": 15394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15276,
											"end": 15394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15276,
											"end": 15394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15400,
											"end": 15622,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 15400,
											"end": 15622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15493,
											"end": 15497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15531,
											"end": 15533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15520,
											"end": 15529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15516,
											"end": 15534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15508,
											"end": 15534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15508,
											"end": 15534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 15612,
											"end": 15613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15601,
											"end": 15610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15597,
											"end": 15614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15588,
											"end": 15594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 15544,
											"end": 15615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15615,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 15544,
											"end": 15615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15400,
											"end": 15622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15400,
											"end": 15622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15400,
											"end": 15622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15400,
											"end": 15622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15400,
											"end": 15622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15744,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 15628,
											"end": 15744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 15713,
											"end": 15718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 15698,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15719,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 15698,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15691,
											"end": 15696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15688,
											"end": 15720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15678,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 15678,
											"end": 15738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15734,
											"end": 15735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15731,
											"end": 15732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15736,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15678,
											"end": 15738,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 15678,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15750,
											"end": 15883,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 15750,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15831,
											"end": 15837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15818,
											"end": 15838,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 15809,
											"end": 15838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15809,
											"end": 15838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15847,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 15871,
											"end": 15876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15847,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 15847,
											"end": 15877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15847,
											"end": 15877,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 15847,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15750,
											"end": 15883,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15750,
											"end": 15883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15750,
											"end": 15883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15750,
											"end": 15883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15750,
											"end": 15883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 16357,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 15889,
											"end": 16357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15954,
											"end": 15960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15962,
											"end": 15968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16011,
											"end": 16013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15999,
											"end": 16008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15990,
											"end": 15997,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15986,
											"end": 16009,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15982,
											"end": 16014,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 15979,
											"end": 16098,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15979,
											"end": 16098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 15979,
											"end": 16098,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16017,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 16017,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 16017,
											"end": 16096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16017,
											"end": 16096,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 16017,
											"end": 16096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15979,
											"end": 16098,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 15979,
											"end": 16098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16137,
											"end": 16138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16162,
											"end": 16215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 16207,
											"end": 16214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16198,
											"end": 16204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16187,
											"end": 16196,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16183,
											"end": 16205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16162,
											"end": 16215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 16162,
											"end": 16215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16162,
											"end": 16215,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 16162,
											"end": 16215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16152,
											"end": 16215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16152,
											"end": 16215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16108,
											"end": 16225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16264,
											"end": 16266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16290,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16323,
											"end": 16329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16312,
											"end": 16321,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16308,
											"end": 16330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16290,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 16290,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16290,
											"end": 16340,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 16290,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16280,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16280,
											"end": 16340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16235,
											"end": 16350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 16357,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 16357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 16357,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 16357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 16357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 16357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16837,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16363,
											"end": 16837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16431,
											"end": 16437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16439,
											"end": 16445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16488,
											"end": 16490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16476,
											"end": 16485,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16467,
											"end": 16474,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16486,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16459,
											"end": 16491,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16575,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 16456,
											"end": 16575,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 16494,
											"end": 16573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 16494,
											"end": 16573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16573,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 16494,
											"end": 16573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16575,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 16456,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16614,
											"end": 16615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16639,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 16684,
											"end": 16691,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16675,
											"end": 16681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16664,
											"end": 16673,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16660,
											"end": 16682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16639,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 16639,
											"end": 16692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16639,
											"end": 16692,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 16639,
											"end": 16692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16629,
											"end": 16692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16629,
											"end": 16692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16585,
											"end": 16702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16741,
											"end": 16743,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16767,
											"end": 16820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 16812,
											"end": 16819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16803,
											"end": 16809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16792,
											"end": 16801,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16788,
											"end": 16810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 16767,
											"end": 16820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16820,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 16767,
											"end": 16820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16712,
											"end": 16830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16947,
											"end": 16953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16955,
											"end": 16961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16971,
											"end": 16977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16979,
											"end": 16985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17028,
											"end": 17031,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17016,
											"end": 17025,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17007,
											"end": 17014,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17003,
											"end": 17026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16999,
											"end": 17032,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 16996,
											"end": 17116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16996,
											"end": 17116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 16996,
											"end": 17116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17035,
											"end": 17114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 17035,
											"end": 17114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 17035,
											"end": 17114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17035,
											"end": 17114,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 17035,
											"end": 17114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16996,
											"end": 17116,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 16996,
											"end": 17116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17155,
											"end": 17156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17180,
											"end": 17233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 17225,
											"end": 17232,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17216,
											"end": 17222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17205,
											"end": 17214,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17201,
											"end": 17223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17180,
											"end": 17233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 17180,
											"end": 17233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17180,
											"end": 17233,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 17180,
											"end": 17233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17170,
											"end": 17233,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 17170,
											"end": 17233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17126,
											"end": 17243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17308,
											"end": 17361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 17353,
											"end": 17360,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17344,
											"end": 17350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17333,
											"end": 17342,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17329,
											"end": 17351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17308,
											"end": 17361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 17308,
											"end": 17361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17308,
											"end": 17361,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 17308,
											"end": 17361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17298,
											"end": 17361,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17298,
											"end": 17361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17253,
											"end": 17371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17410,
											"end": 17412,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17436,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 17481,
											"end": 17488,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17472,
											"end": 17478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17461,
											"end": 17470,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17457,
											"end": 17479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 17436,
											"end": 17489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17489,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 17436,
											"end": 17489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17426,
											"end": 17489,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17426,
											"end": 17489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17538,
											"end": 17540,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17564,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 17609,
											"end": 17616,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17600,
											"end": 17606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17589,
											"end": 17598,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17585,
											"end": 17607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17564,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 17564,
											"end": 17617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17564,
											"end": 17617,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 17564,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17554,
											"end": 17617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17554,
											"end": 17617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17509,
											"end": 17627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17694,
											"end": 17697,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17683,
											"end": 17692,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17679,
											"end": 17698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17666,
											"end": 17699,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 17726,
											"end": 17744,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17718,
											"end": 17724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17715,
											"end": 17745,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17712,
											"end": 17829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17712,
											"end": 17829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 17712,
											"end": 17829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 17748,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 17748,
											"end": 17827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17827,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 17748,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17712,
											"end": 17829,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 17712,
											"end": 17829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17853,
											"end": 17915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 17907,
											"end": 17914,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17898,
											"end": 17904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17883,
											"end": 17905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17853,
											"end": 17915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 17853,
											"end": 17915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17853,
											"end": 17915,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 17853,
											"end": 17915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17843,
											"end": 17915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17843,
											"end": 17915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17637,
											"end": 17925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 17932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17938,
											"end": 18267,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 17938,
											"end": 18267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17997,
											"end": 18003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18046,
											"end": 18048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18034,
											"end": 18043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18025,
											"end": 18032,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18021,
											"end": 18044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18017,
											"end": 18049,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 18014,
											"end": 18133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18014,
											"end": 18133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 18014,
											"end": 18133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18052,
											"end": 18131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 18052,
											"end": 18131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 18052,
											"end": 18131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18052,
											"end": 18131,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 18052,
											"end": 18131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18014,
											"end": 18133,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 18014,
											"end": 18133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18172,
											"end": 18173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18197,
											"end": 18250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 18242,
											"end": 18249,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18233,
											"end": 18239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18231,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18218,
											"end": 18240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 18197,
											"end": 18250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18250,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 18197,
											"end": 18250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18187,
											"end": 18250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18187,
											"end": 18250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18143,
											"end": 18260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17938,
											"end": 18267,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17938,
											"end": 18267,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17938,
											"end": 18267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17938,
											"end": 18267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17938,
											"end": 18267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18273,
											"end": 18453,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 18273,
											"end": 18453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18321,
											"end": 18398,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18318,
											"end": 18319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18311,
											"end": 18399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18418,
											"end": 18422,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 18415,
											"end": 18416,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18408,
											"end": 18423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18442,
											"end": 18446,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18439,
											"end": 18440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18432,
											"end": 18447,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18779,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 18459,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18503,
											"end": 18509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18540,
											"end": 18541,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18534,
											"end": 18538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18530,
											"end": 18542,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18520,
											"end": 18542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18520,
											"end": 18542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18587,
											"end": 18588,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18581,
											"end": 18585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 18589,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18608,
											"end": 18626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18598,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 18598,
											"end": 18679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18664,
											"end": 18668,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 18656,
											"end": 18662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18652,
											"end": 18669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18642,
											"end": 18669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18642,
											"end": 18669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18598,
											"end": 18679,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 18598,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18726,
											"end": 18728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18718,
											"end": 18724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18715,
											"end": 18729,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18695,
											"end": 18713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18692,
											"end": 18730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 18689,
											"end": 18773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 18745,
											"end": 18763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18773,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 18689,
											"end": 18773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18510,
											"end": 18779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18785,
											"end": 19117,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 18785,
											"end": 19117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18906,
											"end": 18910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18944,
											"end": 18946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18933,
											"end": 18942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18929,
											"end": 18947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18921,
											"end": 18947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18921,
											"end": 18947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18957,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 19025,
											"end": 19026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19010,
											"end": 19027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19001,
											"end": 19007,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18957,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 18957,
											"end": 19028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18957,
											"end": 19028,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 18957,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19038,
											"end": 19110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 19106,
											"end": 19108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19095,
											"end": 19104,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19091,
											"end": 19109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19082,
											"end": 19088,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19038,
											"end": 19110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 19038,
											"end": 19110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19038,
											"end": 19110,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 19038,
											"end": 19110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18785,
											"end": 19117,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18785,
											"end": 19117,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18785,
											"end": 19117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18785,
											"end": 19117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18785,
											"end": 19117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18785,
											"end": 19117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19123,
											"end": 19455,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 19123,
											"end": 19455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19244,
											"end": 19248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19282,
											"end": 19284,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19271,
											"end": 19280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19267,
											"end": 19285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19259,
											"end": 19285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19259,
											"end": 19285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19295,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 19363,
											"end": 19364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19352,
											"end": 19361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19348,
											"end": 19365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19339,
											"end": 19345,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19295,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 19295,
											"end": 19366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19295,
											"end": 19366,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 19295,
											"end": 19366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19376,
											"end": 19448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 19444,
											"end": 19446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19433,
											"end": 19442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19429,
											"end": 19447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19420,
											"end": 19426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19376,
											"end": 19448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 19376,
											"end": 19448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19376,
											"end": 19448,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 19376,
											"end": 19448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19123,
											"end": 19455,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19123,
											"end": 19455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19123,
											"end": 19455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19123,
											"end": 19455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19123,
											"end": 19455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19123,
											"end": 19455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19461,
											"end": 19641,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 19461,
											"end": 19641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19509,
											"end": 19586,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19506,
											"end": 19507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19499,
											"end": 19587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19606,
											"end": 19610,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 19603,
											"end": 19604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19596,
											"end": 19611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19630,
											"end": 19634,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19627,
											"end": 19628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19620,
											"end": 19635,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 20200,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 19647,
											"end": 20200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19824,
											"end": 19828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19862,
											"end": 19865,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 19851,
											"end": 19860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19847,
											"end": 19866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19839,
											"end": 19866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19839,
											"end": 19866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 19944,
											"end": 19945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19933,
											"end": 19942,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19929,
											"end": 19946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19920,
											"end": 19926,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 19876,
											"end": 19947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19947,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 19876,
											"end": 19947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19957,
											"end": 20029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 20025,
											"end": 20027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20014,
											"end": 20023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20010,
											"end": 20028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20001,
											"end": 20007,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19957,
											"end": 20029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 19957,
											"end": 20029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19957,
											"end": 20029,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 19957,
											"end": 20029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20039,
											"end": 20111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 20107,
											"end": 20109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20096,
											"end": 20105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20092,
											"end": 20110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20083,
											"end": 20089,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20039,
											"end": 20111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 20039,
											"end": 20111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20039,
											"end": 20111,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 20039,
											"end": 20111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20121,
											"end": 20193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 20189,
											"end": 20191,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 20178,
											"end": 20187,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20174,
											"end": 20192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20165,
											"end": 20171,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20121,
											"end": 20193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 20121,
											"end": 20193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20121,
											"end": 20193,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 20121,
											"end": 20193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 20200,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 20200,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 20200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 20200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 20200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 20200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 20200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 20200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20206,
											"end": 20386,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 20206,
											"end": 20386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20254,
											"end": 20331,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20251,
											"end": 20252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20244,
											"end": 20332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20351,
											"end": 20355,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 20348,
											"end": 20349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20341,
											"end": 20356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20375,
											"end": 20379,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20372,
											"end": 20373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20365,
											"end": 20380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20392,
											"end": 20583,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 20392,
											"end": 20583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20432,
											"end": 20435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20451,
											"end": 20471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 20469,
											"end": 20470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20451,
											"end": 20471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 20451,
											"end": 20471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20451,
											"end": 20471,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 20451,
											"end": 20471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20446,
											"end": 20471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20446,
											"end": 20471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20485,
											"end": 20505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 20503,
											"end": 20504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20485,
											"end": 20505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 20485,
											"end": 20505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20485,
											"end": 20505,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 20485,
											"end": 20505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20480,
											"end": 20505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20480,
											"end": 20505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20528,
											"end": 20529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20525,
											"end": 20526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20521,
											"end": 20530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20514,
											"end": 20530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20514,
											"end": 20530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20549,
											"end": 20552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20546,
											"end": 20547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20543,
											"end": 20553,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20540,
											"end": 20576,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20540,
											"end": 20576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 20540,
											"end": 20576,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20556,
											"end": 20574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 20556,
											"end": 20574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 20556,
											"end": 20574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20556,
											"end": 20574,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 20556,
											"end": 20574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20540,
											"end": 20576,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 20540,
											"end": 20576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20392,
											"end": 20583,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20392,
											"end": 20583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20392,
											"end": 20583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20392,
											"end": 20583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20392,
											"end": 20583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20589,
											"end": 21223,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 20589,
											"end": 21223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20810,
											"end": 20814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20848,
											"end": 20850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20837,
											"end": 20846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20833,
											"end": 20851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20825,
											"end": 20851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20825,
											"end": 20851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20897,
											"end": 20906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20891,
											"end": 20895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20887,
											"end": 20907,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20883,
											"end": 20884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20872,
											"end": 20881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20868,
											"end": 20885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20861,
											"end": 20908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20925,
											"end": 21033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 21028,
											"end": 21032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21019,
											"end": 21025,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20925,
											"end": 21033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 20925,
											"end": 21033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20925,
											"end": 21033,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 20925,
											"end": 21033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20917,
											"end": 21033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20917,
											"end": 21033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21080,
											"end": 21089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21074,
											"end": 21078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21070,
											"end": 21090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21065,
											"end": 21067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21054,
											"end": 21063,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21050,
											"end": 21068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21043,
											"end": 21091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21108,
											"end": 21216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 21211,
											"end": 21215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21202,
											"end": 21208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21108,
											"end": 21216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 21108,
											"end": 21216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21108,
											"end": 21216,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 21108,
											"end": 21216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21100,
											"end": 21216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21100,
											"end": 21216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20589,
											"end": 21223,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 20589,
											"end": 21223,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20589,
											"end": 21223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20589,
											"end": 21223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20589,
											"end": 21223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20589,
											"end": 21223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21327,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 21229,
											"end": 21327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21280,
											"end": 21286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21314,
											"end": 21319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21308,
											"end": 21320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21333,
											"end": 21501,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 21333,
											"end": 21501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21416,
											"end": 21427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21450,
											"end": 21456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21445,
											"end": 21448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21438,
											"end": 21457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21490,
											"end": 21494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21485,
											"end": 21488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21481,
											"end": 21495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21466,
											"end": 21495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21466,
											"end": 21495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21333,
											"end": 21501,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21333,
											"end": 21501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21333,
											"end": 21501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21333,
											"end": 21501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21333,
											"end": 21501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21507,
											"end": 21880,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 21507,
											"end": 21880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21593,
											"end": 21596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21621,
											"end": 21659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 21653,
											"end": 21658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21621,
											"end": 21659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 21621,
											"end": 21659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21621,
											"end": 21659,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 21621,
											"end": 21659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21675,
											"end": 21745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 21738,
											"end": 21744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21733,
											"end": 21736,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21675,
											"end": 21745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 21675,
											"end": 21745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21675,
											"end": 21745,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 21675,
											"end": 21745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21668,
											"end": 21745,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21668,
											"end": 21745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21754,
											"end": 21819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 21812,
											"end": 21818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21807,
											"end": 21810,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21800,
											"end": 21804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21798,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21789,
											"end": 21805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21754,
											"end": 21819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 21754,
											"end": 21819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21754,
											"end": 21819,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 21754,
											"end": 21819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 21873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 21866,
											"end": 21872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 21873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 21844,
											"end": 21873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 21873,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 21844,
											"end": 21873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21839,
											"end": 21842,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21835,
											"end": 21874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21828,
											"end": 21874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21828,
											"end": 21874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21597,
											"end": 21880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21507,
											"end": 21880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21507,
											"end": 21880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21507,
											"end": 21880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21507,
											"end": 21880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21507,
											"end": 21880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22109,
											"end": 22113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22147,
											"end": 22150,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 22136,
											"end": 22145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22132,
											"end": 22151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22124,
											"end": 22151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22124,
											"end": 22151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22161,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 22229,
											"end": 22230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22218,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22205,
											"end": 22211,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 22161,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 22161,
											"end": 22232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22161,
											"end": 22232,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 22161,
											"end": 22232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22242,
											"end": 22314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 22310,
											"end": 22312,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22299,
											"end": 22308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22295,
											"end": 22313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22286,
											"end": 22292,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22242,
											"end": 22314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 22242,
											"end": 22314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22242,
											"end": 22314,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 22242,
											"end": 22314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22324,
											"end": 22396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 22392,
											"end": 22394,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22381,
											"end": 22390,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22377,
											"end": 22395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22368,
											"end": 22374,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22324,
											"end": 22396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 22324,
											"end": 22396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22324,
											"end": 22396,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 22324,
											"end": 22396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 22474,
											"end": 22476,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 22463,
											"end": 22472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22459,
											"end": 22477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22450,
											"end": 22456,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 22406,
											"end": 22478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22478,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 22406,
											"end": 22478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22520,
											"end": 22524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22516,
											"end": 22536,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22510,
											"end": 22513,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 22499,
											"end": 22508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22495,
											"end": 22514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22488,
											"end": 22537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22554,
											"end": 22630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 22625,
											"end": 22629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22616,
											"end": 22622,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22554,
											"end": 22630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 22554,
											"end": 22630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22554,
											"end": 22630,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 22554,
											"end": 22630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22546,
											"end": 22630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22546,
											"end": 22630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21886,
											"end": 22637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22643,
											"end": 22784,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 22643,
											"end": 22784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22730,
											"end": 22736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22724,
											"end": 22737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22715,
											"end": 22737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22715,
											"end": 22737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22746,
											"end": 22778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 22772,
											"end": 22777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22746,
											"end": 22778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 22746,
											"end": 22778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22746,
											"end": 22778,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 22746,
											"end": 22778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22643,
											"end": 22784,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22643,
											"end": 22784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22643,
											"end": 22784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22643,
											"end": 22784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22643,
											"end": 22784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22790,
											"end": 23139,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 22790,
											"end": 23139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22859,
											"end": 22865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22908,
											"end": 22910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22896,
											"end": 22905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22887,
											"end": 22894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22883,
											"end": 22906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22879,
											"end": 22911,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 22876,
											"end": 22995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22876,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 22876,
											"end": 22995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22914,
											"end": 22993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 22914,
											"end": 22993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 22914,
											"end": 22993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22914,
											"end": 22993,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 22914,
											"end": 22993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22876,
											"end": 22995,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 22876,
											"end": 22995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23034,
											"end": 23035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23059,
											"end": 23122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 23114,
											"end": 23121,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23105,
											"end": 23111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23094,
											"end": 23103,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23090,
											"end": 23112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23059,
											"end": 23122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 23059,
											"end": 23122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23059,
											"end": 23122,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 23059,
											"end": 23122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23005,
											"end": 23132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22790,
											"end": 23139,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22790,
											"end": 23139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22790,
											"end": 23139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22790,
											"end": 23139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22790,
											"end": 23139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23468,
											"end": 23472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23506,
											"end": 23509,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 23495,
											"end": 23504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23491,
											"end": 23510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23483,
											"end": 23510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23483,
											"end": 23510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 23588,
											"end": 23589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23577,
											"end": 23586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23573,
											"end": 23590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23564,
											"end": 23570,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 23520,
											"end": 23591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23520,
											"end": 23591,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 23520,
											"end": 23591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 23669,
											"end": 23671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23658,
											"end": 23667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23654,
											"end": 23672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 23601,
											"end": 23673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23601,
											"end": 23673,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 23601,
											"end": 23673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23720,
											"end": 23729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23710,
											"end": 23730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23705,
											"end": 23707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23694,
											"end": 23703,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23690,
											"end": 23708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23683,
											"end": 23731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23748,
											"end": 23856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 23851,
											"end": 23855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23842,
											"end": 23848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23748,
											"end": 23856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 23748,
											"end": 23856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23748,
											"end": 23856,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 23748,
											"end": 23856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23740,
											"end": 23856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23740,
											"end": 23856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23903,
											"end": 23912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23897,
											"end": 23901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23893,
											"end": 23913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23888,
											"end": 23890,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 23877,
											"end": 23886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23873,
											"end": 23891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23866,
											"end": 23914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23931,
											"end": 24039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 24034,
											"end": 24038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24025,
											"end": 24031,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23931,
											"end": 24039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 23931,
											"end": 24039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23931,
											"end": 24039,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 23931,
											"end": 24039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23923,
											"end": 24039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23923,
											"end": 24039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24087,
											"end": 24096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24081,
											"end": 24085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24077,
											"end": 24097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24074,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 24060,
											"end": 24069,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24056,
											"end": 24075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24049,
											"end": 24098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24115,
											"end": 24191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 24186,
											"end": 24190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24177,
											"end": 24183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24115,
											"end": 24191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 24115,
											"end": 24191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24115,
											"end": 24191,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 24115,
											"end": 24191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24107,
											"end": 24191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24107,
											"end": 24191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23145,
											"end": 24198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"VolunteerCollectionNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerCollectionNFT_flattened.sol\":\"VolunteerCollectionNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerCollectionNFT_flattened.sol\":{\"keccak256\":\"0x2f39e3848213c7743ae1446a76a44866b9caee4f532ff5f24dc66523cbf0c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7c26e03c68809e00dc44b12b6a283f7d66bbe4d654c3e1fb1a2d0f1e794ee6\",\"dweb:/ipfs/QmTFtkh5JRjqggsGMXJ6CBVsHwWYyPS8BZVqXBAXFiBLA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1735,
								"contract": "VolunteerCollectionNFT_flattened.sol:VolunteerCollectionNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1741,
								"contract": "VolunteerCollectionNFT_flattened.sol:VolunteerCollectionNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1743,
								"contract": "VolunteerCollectionNFT_flattened.sol:VolunteerCollectionNFT",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 2750,
								"contract": "VolunteerCollectionNFT_flattened.sol:VolunteerCollectionNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"VolunteerCollectionNFT_flattened.sol": {
				"ast": {
					"absolutePath": "VolunteerCollectionNFT_flattened.sol",
					"exportedSymbols": {
						"Arrays": [
							1573
						],
						"Context": [
							212
						],
						"ERC1155": [
							2744
						],
						"ERC165": [
							233
						],
						"IERC1155": [
							131
						],
						"IERC1155Errors": [
							1709
						],
						"IERC1155MetadataURI": [
							183
						],
						"IERC1155Receiver": [
							170
						],
						"IERC165": [
							11
						],
						"IERC20Errors": [
							1614
						],
						"IERC721Errors": [
							1662
						],
						"Math": [
							1395
						],
						"Ownable": [
							2889
						],
						"StorageSlot": [
							342
						],
						"VolunteerCollectionNFT": [
							2928
						]
					},
					"id": 2929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "182:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "208:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "498:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "512:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "866:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "891:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "884:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "884:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "927:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "927:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:6:0"
									},
									"scope": 11,
									"src": "857:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2929,
							"src": "488:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 12,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1077:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 14,
										"name": "IERC165",
										"nameLocations": [
											"1262:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1262:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "1262:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 13,
								"nodeType": "StructuredDocumentation",
								"src": "1104:135:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								11
							],
							"name": "IERC1155",
							"nameLocation": "1250:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "1276:125:0",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 28,
									"name": "TransferSingle",
									"nameLocation": "1412:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1443:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1427:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1469:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1453:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1491:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1475:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1503:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1495:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1515:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:95:0"
									},
									"src": "1406:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1528:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 43,
									"name": "TransferBatch",
									"nameLocation": "1683:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1722:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1706:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1756:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1740:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1786:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1770:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1808:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1798:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 36,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 37,
													"nodeType": "ArrayTypeName",
													"src": "1798:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1831:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1821:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 39,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 40,
													"nodeType": "ArrayTypeName",
													"src": "1821:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1696:147:0"
									},
									"src": "1677:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1850:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 52,
									"name": "ApprovalForAll",
									"nameLocation": "2008:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2039:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2023:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2064:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2048:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2079:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2074:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 49,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:66:0"
									},
									"src": "2002:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2095:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 59,
									"name": "URI",
									"nameLocation": "2449:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2460:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2453:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 54,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2453:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2483:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2467:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2452:34:0"
									},
									"src": "2443:44:0"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2493:172:0",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2679:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2697:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2689:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2714:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2706:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:29:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2741:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:9:0"
									},
									"scope": 131,
									"src": "2670:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2756:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2958:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "3001:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2982:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 71,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2982:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 72,
													"nodeType": "ArrayTypeName",
													"src": "2982:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3038:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3019:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 74,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 75,
													"nodeType": "ArrayTypeName",
													"src": "3019:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2972:75:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3071:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 78,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3071:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 79,
													"nodeType": "ArrayTypeName",
													"src": "3071:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3070:18:0"
									},
									"scope": 131,
									"src": "2949:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3095:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3357:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3383:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3375:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3398:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3393:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 86,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3393:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3374:33:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3416:0:0"
									},
									"scope": 131,
									"src": "3348:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3423:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3572:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3597:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3589:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3614:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3606:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3588:35:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3647:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 97,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:6:0"
									},
									"scope": 131,
									"src": "3563:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "3659:910:0",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4583:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4608:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4600:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4622:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4614:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4634:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4626:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4646:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4638:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4668:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4653:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4599:74:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4682:0:0"
									},
									"scope": 131,
									"src": "4574:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "4689:814:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "5517:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5556:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5548:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5578:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5570:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5609:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5590:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 121,
													"nodeType": "ArrayTypeName",
													"src": "5590:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5641:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5622:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 123,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5622:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 124,
													"nodeType": "ArrayTypeName",
													"src": "5622:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5672:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5657:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5538:144:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5691:0:0"
									},
									"scope": 131,
									"src": "5508:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2929,
							"src": "1240:4454:0",
							"usedErrors": [],
							"usedEvents": [
								28,
								43,
								52,
								59
							]
						},
						{
							"id": 132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "5852:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 134,
										"name": "IERC165",
										"nameLocations": [
											"6028:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "6028:7:0"
									},
									"id": 135,
									"nodeType": "InheritanceSpecifier",
									"src": "6028:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 133,
								"nodeType": "StructuredDocumentation",
								"src": "5879:118:0",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 170,
							"linearizedBaseContracts": [
								170,
								11
							],
							"name": "IERC1155Receiver",
							"nameLocation": "6008:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "6042:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "6882:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6917:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "6909:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6943:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "6935:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6965:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "6957:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6985:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "6977:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7015:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "7000:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7000:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:126:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "7044:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 148,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7043:8:0"
									},
									"scope": 170,
									"src": "6873:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "7058:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "8066:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8106:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8098:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8132:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8124:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "8165:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8146:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 157,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 158,
													"nodeType": "ArrayTypeName",
													"src": "8146:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "8197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8178:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 160,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8178:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 161,
													"nodeType": "ArrayTypeName",
													"src": "8178:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8228:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8213:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8213:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:150:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8257:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 166,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "8257:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8256:8:0"
									},
									"scope": 170,
									"src": "8057:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2929,
							"src": "5998:2269:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "8453:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 173,
										"name": "IERC1155",
										"nameLocations": [
											"8678:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "8678:8:0"
									},
									"id": 174,
									"nodeType": "InheritanceSpecifier",
									"src": "8678:8:0"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "8480:164:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 183,
							"linearizedBaseContracts": [
								183,
								131,
								11
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "8655:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "8693:192:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "8899:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8911:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "8903:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8902:12:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "8938:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 179,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8937:15:0"
									},
									"scope": 183,
									"src": "8890:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2929,
							"src": "8645:310:0",
							"usedErrors": [],
							"usedEvents": [
								28,
								43,
								52,
								59
							]
						},
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "9079:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "9105:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "Context",
							"nameLocation": "9620:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "9696:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 190,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9713:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9717:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9713:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 189,
												"id": 192,
												"nodeType": "Return",
												"src": "9706:17:0"
											}
										]
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "9643:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9653:2:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "9687:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9686:9:0"
									},
									"scope": 212,
									"src": "9634:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "9803:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 199,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9820:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9824:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "9820:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 198,
												"id": 201,
												"nodeType": "Return",
												"src": "9813:15:0"
											}
										]
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "9745:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9753:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "9787:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9787:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9786:16:0"
									},
									"scope": 212,
									"src": "9736:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "9913:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9930:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 207,
												"id": 209,
												"nodeType": "Return",
												"src": "9923:8:0"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "9850:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9870:2:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "9904:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:9:0"
									},
									"scope": 212,
									"src": "9841:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2929,
							"src": "9602:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 213,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10090:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 215,
										"name": "IERC165",
										"nameLocations": [
											"10624:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "10624:7:0"
									},
									"id": 216,
									"nodeType": "InheritanceSpecifier",
									"src": "10624:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 214,
								"nodeType": "StructuredDocumentation",
								"src": "10117:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								11
							],
							"name": "ERC165",
							"nameLocation": "10614:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "10781:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 224,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "10798:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 226,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "10818:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 225,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10813:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10813:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10827:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "10813:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "10798:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 223,
												"id": 230,
												"nodeType": "Return",
												"src": "10791:47:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "10638:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "10708:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "10733:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "10726:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 218,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "10726:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10725:20:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "10775:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10775:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10774:6:0"
									},
									"scope": 233,
									"src": "10699:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2929,
							"src": "10596:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11067:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 235,
								"nodeType": "StructuredDocumentation",
								"src": "11093:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342
							],
							"name": "StorageSlot",
							"nameLocation": "12127:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 238,
									"members": [
										{
											"constant": false,
											"id": 237,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "12182:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 238,
											"src": "12174:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 236,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12174:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "12152:11:0",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "12145:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 241,
									"members": [
										{
											"constant": false,
											"id": 240,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "12234:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "12229:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 239,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "12229:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "12207:11:0",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "12200:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 244,
									"members": [
										{
											"constant": false,
											"id": 243,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "12289:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "12281:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 242,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "12281:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "12259:11:0",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "12252:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 247,
									"members": [
										{
											"constant": false,
											"id": 246,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "12344:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 247,
											"src": "12336:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 245,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12336:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "12314:11:0",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "12307:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 250,
									"members": [
										{
											"constant": false,
											"id": 249,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "12397:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 250,
											"src": "12390:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 248,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "12390:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "12369:10:0",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "12362:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 253,
									"members": [
										{
											"constant": false,
											"id": 252,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "12448:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 253,
											"src": "12442:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 251,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "12442:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "12422:9:0",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "12415:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "12642:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "12704:38:0",
													"nodeType": "YulBlock",
													"src": "12704:38:0",
													"statements": [
														{
															"nativeSrc": "12718:14:0",
															"nodeType": "YulAssignment",
															"src": "12718:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "12728:4:0",
																"nodeType": "YulIdentifier",
																"src": "12728:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "12718:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "12718:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 260,
														"isOffset": false,
														"isSlot": true,
														"src": "12718:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 256,
														"isOffset": false,
														"isSlot": false,
														"src": "12728:4:0",
														"valueSize": 1
													}
												],
												"id": 262,
												"nodeType": "InlineAssembly",
												"src": "12695:47:0"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "12466:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "12567:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "12590:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "12582:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 255,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12581:14:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "12639:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "12619:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$238_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 258,
														"name": "AddressSlot",
														"nameLocations": [
															"12619:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 238,
														"src": "12619:11:0"
													},
													"referencedDeclaration": 238,
													"src": "12619:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$238_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12618:23:0"
									},
									"scope": 342,
									"src": "12558:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "12930:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "12992:38:0",
													"nodeType": "YulBlock",
													"src": "12992:38:0",
													"statements": [
														{
															"nativeSrc": "13006:14:0",
															"nodeType": "YulAssignment",
															"src": "13006:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "13016:4:0",
																"nodeType": "YulIdentifier",
																"src": "13016:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "13006:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "13006:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": true,
														"src": "13006:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 267,
														"isOffset": false,
														"isSlot": false,
														"src": "13016:4:0",
														"valueSize": 1
													}
												],
												"id": 273,
												"nodeType": "InlineAssembly",
												"src": "12983:47:0"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "12754:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "12855:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "12878:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "12870:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12869:14:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "12927:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "12907:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$241_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 269,
														"name": "BooleanSlot",
														"nameLocations": [
															"12907:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 241,
														"src": "12907:11:0"
													},
													"referencedDeclaration": 241,
													"src": "12907:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$241_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12906:23:0"
									},
									"scope": 342,
									"src": "12846:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "13218:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "13280:38:0",
													"nodeType": "YulBlock",
													"src": "13280:38:0",
													"statements": [
														{
															"nativeSrc": "13294:14:0",
															"nodeType": "YulAssignment",
															"src": "13294:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "13304:4:0",
																"nodeType": "YulIdentifier",
																"src": "13304:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "13294:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "13294:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 282,
														"isOffset": false,
														"isSlot": true,
														"src": "13294:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 278,
														"isOffset": false,
														"isSlot": false,
														"src": "13304:4:0",
														"valueSize": 1
													}
												],
												"id": 284,
												"nodeType": "InlineAssembly",
												"src": "13271:47:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "13042:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "13143:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "13166:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "13158:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13157:14:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "13215:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "13195:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$244_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 280,
														"name": "Bytes32Slot",
														"nameLocations": [
															"13195:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "13195:11:0"
													},
													"referencedDeclaration": 244,
													"src": "13195:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$244_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13194:23:0"
									},
									"scope": 342,
									"src": "13134:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "13506:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "13568:38:0",
													"nodeType": "YulBlock",
													"src": "13568:38:0",
													"statements": [
														{
															"nativeSrc": "13582:14:0",
															"nodeType": "YulAssignment",
															"src": "13582:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "13592:4:0",
																"nodeType": "YulIdentifier",
																"src": "13592:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "13582:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "13582:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 293,
														"isOffset": false,
														"isSlot": true,
														"src": "13582:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 289,
														"isOffset": false,
														"isSlot": false,
														"src": "13592:4:0",
														"valueSize": 1
													}
												],
												"id": 295,
												"nodeType": "InlineAssembly",
												"src": "13559:47:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "13330:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "13431:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "13454:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "13446:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13445:14:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "13503:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "13483:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$247_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 291,
														"name": "Uint256Slot",
														"nameLocations": [
															"13483:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 247,
														"src": "13483:11:0"
													},
													"referencedDeclaration": 247,
													"src": "13483:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$247_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13482:23:0"
									},
									"scope": 342,
									"src": "13422:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "13791:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "13853:38:0",
													"nodeType": "YulBlock",
													"src": "13853:38:0",
													"statements": [
														{
															"nativeSrc": "13867:14:0",
															"nodeType": "YulAssignment",
															"src": "13867:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "13877:4:0",
																"nodeType": "YulIdentifier",
																"src": "13877:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "13867:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "13867:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 304,
														"isOffset": false,
														"isSlot": true,
														"src": "13867:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 300,
														"isOffset": false,
														"isSlot": false,
														"src": "13877:4:0",
														"valueSize": 1
													}
												],
												"id": 306,
												"nodeType": "InlineAssembly",
												"src": "13844:47:0"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "13618:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "13718:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "13740:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "13732:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13731:14:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "13788:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "13769:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$250_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 303,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 302,
														"name": "StringSlot",
														"nameLocations": [
															"13769:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "13769:10:0"
													},
													"referencedDeclaration": 250,
													"src": "13769:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$250_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13768:22:0"
									},
									"scope": 342,
									"src": "13709:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "14099:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "14161:44:0",
													"nodeType": "YulBlock",
													"src": "14161:44:0",
													"statements": [
														{
															"nativeSrc": "14175:20:0",
															"nodeType": "YulAssignment",
															"src": "14175:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "14185:10:0",
																"nodeType": "YulIdentifier",
																"src": "14185:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "14175:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "14175:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 315,
														"isOffset": false,
														"isSlot": true,
														"src": "14175:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 311,
														"isOffset": false,
														"isSlot": true,
														"src": "14185:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 317,
												"nodeType": "InlineAssembly",
												"src": "14152:53:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "13903:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "14018:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "14047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "14032:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14032:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14031:22:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "14096:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "14077:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$250_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "StringSlot",
														"nameLocations": [
															"14077:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "14077:10:0"
													},
													"referencedDeclaration": 250,
													"src": "14077:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$250_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14076:22:0"
									},
									"scope": 342,
									"src": "14009:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "14387:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "14449:38:0",
													"nodeType": "YulBlock",
													"src": "14449:38:0",
													"statements": [
														{
															"nativeSrc": "14463:14:0",
															"nodeType": "YulAssignment",
															"src": "14463:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "14473:4:0",
																"nodeType": "YulIdentifier",
																"src": "14473:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "14463:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "14463:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 326,
														"isOffset": false,
														"isSlot": true,
														"src": "14463:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 322,
														"isOffset": false,
														"isSlot": false,
														"src": "14473:4:0",
														"valueSize": 1
													}
												],
												"id": 328,
												"nodeType": "InlineAssembly",
												"src": "14440:47:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "14217:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "14316:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "14337:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "14329:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 321,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14328:14:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "14384:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "14366:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$253_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 324,
														"name": "BytesSlot",
														"nameLocations": [
															"14366:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 253,
														"src": "14366:9:0"
													},
													"referencedDeclaration": 253,
													"src": "14366:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$253_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14365:21:0"
									},
									"scope": 342,
									"src": "14307:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "14690:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "14752:44:0",
													"nodeType": "YulBlock",
													"src": "14752:44:0",
													"statements": [
														{
															"nativeSrc": "14766:20:0",
															"nodeType": "YulAssignment",
															"src": "14766:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "14776:10:0",
																"nodeType": "YulIdentifier",
																"src": "14776:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "14766:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "14766:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 337,
														"isOffset": false,
														"isSlot": true,
														"src": "14766:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 333,
														"isOffset": false,
														"isSlot": true,
														"src": "14776:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 339,
												"nodeType": "InlineAssembly",
												"src": "14743:53:0"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "14499:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "14612:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "14639:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "14625:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14625:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14624:21:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "14687:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "14669:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$253_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 335,
														"name": "BytesSlot",
														"nameLocations": [
															"14669:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 253,
														"src": "14669:9:0"
													},
													"referencedDeclaration": 253,
													"src": "14669:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$253_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14668:21:0"
									},
									"scope": 342,
									"src": "14603:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2929,
							"src": "12119:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "14932:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 344,
								"nodeType": "StructuredDocumentation",
								"src": "14958:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1395,
							"linearizedBaseContracts": [
								1395
							],
							"name": "Math",
							"nameLocation": "15040:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "15051:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 347,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "15112:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15132:2:0"
									},
									"src": "15106:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 352,
									"members": [
										{
											"id": 348,
											"name": "Floor",
											"nameLocation": "15165:5:0",
											"nodeType": "EnumValue",
											"src": "15165:5:0"
										},
										{
											"id": 349,
											"name": "Ceil",
											"nameLocation": "15208:4:0",
											"nodeType": "EnumValue",
											"src": "15208:4:0"
										},
										{
											"id": 350,
											"name": "Trunc",
											"nameLocation": "15250:5:0",
											"nodeType": "EnumValue",
											"src": "15250:5:0"
										},
										{
											"id": 351,
											"name": "Expand",
											"nameLocation": "15280:6:0",
											"nodeType": "EnumValue",
											"src": "15280:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "15146:8:0",
									"nodeType": "EnumDefinition",
									"src": "15141:169:0"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "15490:140:0",
										"statements": [
											{
												"id": 382,
												"nodeType": "UncheckedBlock",
												"src": "15500:124:0",
												"statements": [
													{
														"assignments": [
															365
														],
														"declarations": [
															{
																"constant": false,
																"id": 365,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "15532:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 382,
																"src": "15524:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 364,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15524:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 369,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 366,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "15536:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 367,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "15540:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15536:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15524:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 370,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "15559:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 371,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "15563:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15559:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 377,
														"nodeType": "IfStatement",
														"src": "15555:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15574:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15581:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15573:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 363,
															"id": 376,
															"nodeType": "Return",
															"src": "15566:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15605:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 379,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "15611:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 380,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15604:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 363,
														"id": 381,
														"nodeType": "Return",
														"src": "15597:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "15316:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "15423:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15438:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "15430:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15449:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "15441:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15429:22:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "15475:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15475:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "15481:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15474:15:0"
									},
									"scope": 1395,
									"src": "15414:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "15813:113:0",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "15823:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 396,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "15851:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 397,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "15855:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15851:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 403,
														"nodeType": "IfStatement",
														"src": "15847:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15866:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15873:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 401,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15865:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 395,
															"id": 402,
															"nodeType": "Return",
															"src": "15858:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15897:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 405,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "15903:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 406,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 389,
																		"src": "15907:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15903:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 408,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15896:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 395,
														"id": 409,
														"nodeType": "Return",
														"src": "15889:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "15636:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "15746:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15761:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "15753:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15772:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "15764:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15752:22:0"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "15798:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "15804:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15797:15:0"
									},
									"scope": 1395,
									"src": "15737:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "16112:417:0",
										"statements": [
											{
												"id": 452,
												"nodeType": "UncheckedBlock",
												"src": "16122:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 424,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "16380:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16385:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16380:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 431,
														"nodeType": "IfStatement",
														"src": "16376:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16396:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16402:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 429,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16395:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 423,
															"id": 430,
															"nodeType": "Return",
															"src": "16388:16:0"
														}
													},
													{
														"assignments": [
															433
														],
														"declarations": [
															{
																"constant": false,
																"id": 433,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "16426:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 452,
																"src": "16418:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 432,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16418:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 437,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "16430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 435,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "16434:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16430:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16418:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 438,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "16453:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 439,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "16457:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16453:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 441,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "16462:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16453:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 447,
														"nodeType": "IfStatement",
														"src": "16449:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16473:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16480:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 445,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16472:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 423,
															"id": 446,
															"nodeType": "Return",
															"src": "16465:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16504:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 449,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "16510:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 450,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16503:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 423,
														"id": 451,
														"nodeType": "Return",
														"src": "16496:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "15932:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "16045:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "16060:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16052:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16071:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16063:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16051:22:0"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16097:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16097:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16096:15:0"
									},
									"scope": 1395,
									"src": "16036:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "16716:114:0",
										"statements": [
											{
												"id": 480,
												"nodeType": "UncheckedBlock",
												"src": "16726:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 466,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "16754:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16759:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16754:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 473,
														"nodeType": "IfStatement",
														"src": "16750:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16770:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16777:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16769:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 465,
															"id": 472,
															"nodeType": "Return",
															"src": "16762:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16801:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 475,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "16807:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 476,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "16811:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16807:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 478,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16800:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 465,
														"id": 479,
														"nodeType": "Return",
														"src": "16793:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16535:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "16649:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "16664:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "16656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16675:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "16667:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16655:22:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "16701:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "16707:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16700:15:0"
									},
									"scope": 1395,
									"src": "16640:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "17027:114:0",
										"statements": [
											{
												"id": 508,
												"nodeType": "UncheckedBlock",
												"src": "17037:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 494,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "17065:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17070:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17065:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 501,
														"nodeType": "IfStatement",
														"src": "17061:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17081:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17088:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17080:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 493,
															"id": 500,
															"nodeType": "Return",
															"src": "17073:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17112:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 503,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "17118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 504,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 487,
																		"src": "17122:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 506,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "17111:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 493,
														"id": 507,
														"nodeType": "Return",
														"src": "17104:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "16836:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "16960:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "16975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "16967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16986:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "16978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16966:22:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "17012:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17012:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "17018:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17011:15:0"
									},
									"scope": 1395,
									"src": "16951:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "17278:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 520,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "17295:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 521,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "17299:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17295:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 524,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "17307:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "17295:13:0",
													"trueExpression": {
														"id": 523,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "17303:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 519,
												"id": 526,
												"nodeType": "Return",
												"src": "17288:20:0"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "17147:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "17220:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17232:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "17224:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "17243:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "17235:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17223:22:0"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "17269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17268:9:0"
									},
									"scope": 1395,
									"src": "17211:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "17453:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 538,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "17470:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 539,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "17474:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17470:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 542,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "17482:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "17470:13:0",
													"trueExpression": {
														"id": 541,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "17478:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 537,
												"id": 544,
												"nodeType": "Return",
												"src": "17463:20:0"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "17321:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "17395:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17407:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "17399:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "17418:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "17410:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17398:22:0"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "17444:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17443:9:0"
									},
									"scope": 1395,
									"src": "17386:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "17674:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "17729:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 557,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "17733:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17729:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 559,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17728:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 560,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "17739:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 561,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "17743:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17739:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 563,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "17738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17748:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "17738:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17728:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 555,
												"id": 567,
												"nodeType": "Return",
												"src": "17721:28:0"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "17496:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "17612:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17628:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "17620:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "17639:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "17631:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17619:22:0"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "17665:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17664:9:0"
									},
									"scope": 1395,
									"src": "17603:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "18048:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "18062:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18067:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18062:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "18058:127:0",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "18070:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 582,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "18169:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 583,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "18173:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18169:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 578,
															"id": 585,
															"nodeType": "Return",
															"src": "18162:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 588,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "18273:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18278:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18273:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 592,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "18287:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18291:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "18287:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18286:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 596,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "18296:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18286:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18300:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "18286:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18273:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18282:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 578,
												"id": 601,
												"nodeType": "Return",
												"src": "18266:35:0"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "17762:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "17986:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "17994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18013:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "18005:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17993:22:0"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "18039:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18038:9:0"
									},
									"scope": 1395,
									"src": "17977:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "18730:4018:0",
										"statements": [
											{
												"id": 727,
												"nodeType": "UncheckedBlock",
												"src": "18740:4002:0",
												"statements": [
													{
														"assignments": [
															616
														],
														"declarations": [
															{
																"constant": false,
																"id": 616,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "19069:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 727,
																"src": "19061:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 615,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 620,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 617,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "19077:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 618,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "19081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19077:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19061:21:0"
													},
													{
														"assignments": [
															622
														],
														"declarations": [
															{
																"constant": false,
																"id": 622,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "19149:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 727,
																"src": "19141:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 621,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19141:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 623,
														"nodeType": "VariableDeclarationStatement",
														"src": "19141:13:0"
													},
													{
														"AST": {
															"nativeSrc": "19221:122:0",
															"nodeType": "YulBlock",
															"src": "19221:122:0",
															"statements": [
																{
																	"nativeSrc": "19239:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19239:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "19256:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "19256:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "19259:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "19259:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19266:1:0",
																						"nodeType": "YulLiteral",
																						"src": "19266:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "19262:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "19262:3:0"
																				},
																				"nativeSrc": "19262:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "19262:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "19249:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "19249:6:0"
																		},
																		"nativeSrc": "19249:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "19249:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "19243:2:0",
																			"nodeType": "YulTypedName",
																			"src": "19243:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19286:43:0",
																	"nodeType": "YulAssignment",
																	"src": "19286:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "19303:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "19303:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "19307:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "19307:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "19299:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "19299:3:0"
																				},
																				"nativeSrc": "19299:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "19299:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "19318:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "19318:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "19322:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "19322:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "19315:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "19315:2:0"
																				},
																				"nativeSrc": "19315:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "19315:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19295:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "19295:3:0"
																		},
																		"nativeSrc": "19295:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "19295:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "19286:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "19286:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 616,
																"isOffset": false,
																"isSlot": false,
																"src": "19307:5:0",
																"valueSize": 1
															},
															{
																"declaration": 616,
																"isOffset": false,
																"isSlot": false,
																"src": "19322:5:0",
																"valueSize": 1
															},
															{
																"declaration": 622,
																"isOffset": false,
																"isSlot": false,
																"src": "19286:5:0",
																"valueSize": 1
															},
															{
																"declaration": 606,
																"isOffset": false,
																"isSlot": false,
																"src": "19256:1:0",
																"valueSize": 1
															},
															{
																"declaration": 608,
																"isOffset": false,
																"isSlot": false,
																"src": "19259:1:0",
																"valueSize": 1
															}
														],
														"id": 624,
														"nodeType": "InlineAssembly",
														"src": "19212:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 625,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "19424:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19433:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19424:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 633,
														"nodeType": "IfStatement",
														"src": "19420:368:0",
														"trueBody": {
															"id": 632,
															"nodeType": "Block",
															"src": "19436:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 628,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 616,
																			"src": "19754:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 629,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "19762:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19754:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 614,
																	"id": 631,
																	"nodeType": "Return",
																	"src": "19747:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 634,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "19894:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 635,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "19909:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19894:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 641,
														"nodeType": "IfStatement",
														"src": "19890:88:0",
														"trueBody": {
															"id": 640,
															"nodeType": "Block",
															"src": "19916:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 637,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "19941:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19941:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 639,
																	"nodeType": "RevertStatement",
																	"src": "19934:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															643
														],
														"declarations": [
															{
																"constant": false,
																"id": 643,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "20241:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 727,
																"src": "20233:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 642,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20233:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 644,
														"nodeType": "VariableDeclarationStatement",
														"src": "20233:17:0"
													},
													{
														"AST": {
															"nativeSrc": "20273:291:0",
															"nodeType": "YulBlock",
															"src": "20273:291:0",
															"statements": [
																{
																	"nativeSrc": "20342:38:0",
																	"nodeType": "YulAssignment",
																	"src": "20342:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "20362:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "20362:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "20365:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "20365:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "20368:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "20368:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "20355:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "20355:6:0"
																		},
																		"nativeSrc": "20355:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "20355:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "20342:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "20342:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "20462:41:0",
																	"nodeType": "YulAssignment",
																	"src": "20462:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "20475:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "20475:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "20485:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "20485:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "20496:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "20496:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "20482:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "20482:2:0"
																				},
																				"nativeSrc": "20482:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "20482:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20471:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "20471:3:0"
																		},
																		"nativeSrc": "20471:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "20471:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "20462:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "20462:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "20520:30:0",
																	"nodeType": "YulAssignment",
																	"src": "20520:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "20533:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "20533:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "20540:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "20540:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20529:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "20529:3:0"
																		},
																		"nativeSrc": "20529:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "20529:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "20520:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "20520:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 610,
																"isOffset": false,
																"isSlot": false,
																"src": "20368:11:0",
																"valueSize": 1
															},
															{
																"declaration": 616,
																"isOffset": false,
																"isSlot": false,
																"src": "20496:5:0",
																"valueSize": 1
															},
															{
																"declaration": 616,
																"isOffset": false,
																"isSlot": false,
																"src": "20520:5:0",
																"valueSize": 1
															},
															{
																"declaration": 616,
																"isOffset": false,
																"isSlot": false,
																"src": "20533:5:0",
																"valueSize": 1
															},
															{
																"declaration": 622,
																"isOffset": false,
																"isSlot": false,
																"src": "20462:5:0",
																"valueSize": 1
															},
															{
																"declaration": 622,
																"isOffset": false,
																"isSlot": false,
																"src": "20475:5:0",
																"valueSize": 1
															},
															{
																"declaration": 643,
																"isOffset": false,
																"isSlot": false,
																"src": "20342:9:0",
																"valueSize": 1
															},
															{
																"declaration": 643,
																"isOffset": false,
																"isSlot": false,
																"src": "20485:9:0",
																"valueSize": 1
															},
															{
																"declaration": 643,
																"isOffset": false,
																"isSlot": false,
																"src": "20540:9:0",
																"valueSize": 1
															},
															{
																"declaration": 606,
																"isOffset": false,
																"isSlot": false,
																"src": "20362:1:0",
																"valueSize": 1
															},
															{
																"declaration": 608,
																"isOffset": false,
																"isSlot": false,
																"src": "20365:1:0",
																"valueSize": 1
															}
														],
														"id": 645,
														"nodeType": "InlineAssembly",
														"src": "20264:300:0"
													},
													{
														"assignments": [
															647
														],
														"declarations": [
															{
																"constant": false,
																"id": 647,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "20776:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 727,
																"src": "20768:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 646,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20768:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 654,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 648,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "20783:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20798:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 650,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "20802:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20798:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 652,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20797:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20783:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20768:46:0"
													},
													{
														"AST": {
															"nativeSrc": "20837:362:0",
															"nodeType": "YulBlock",
															"src": "20837:362:0",
															"statements": [
																{
																	"nativeSrc": "20902:37:0",
																	"nodeType": "YulAssignment",
																	"src": "20902:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "20921:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "20921:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "20934:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "20934:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "20917:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "20917:3:0"
																		},
																		"nativeSrc": "20917:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "20917:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "20902:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "20902:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "21006:25:0",
																	"nodeType": "YulAssignment",
																	"src": "21006:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "21019:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "21019:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "21026:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "21026:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "21015:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "21015:3:0"
																		},
																		"nativeSrc": "21015:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "21015:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "21006:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "21006:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "21146:39:0",
																	"nodeType": "YulAssignment",
																	"src": "21146:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "21166:1:0",
																								"nodeType": "YulLiteral",
																								"src": "21166:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "21169:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "21169:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "21162:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "21162:3:0"
																						},
																						"nativeSrc": "21162:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "21162:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "21176:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "21176:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "21158:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "21158:3:0"
																				},
																				"nativeSrc": "21158:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "21158:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21183:1:0",
																				"nodeType": "YulLiteral",
																				"src": "21183:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21154:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "21154:3:0"
																		},
																		"nativeSrc": "21154:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "21154:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "21146:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "21146:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 610,
																"isOffset": false,
																"isSlot": false,
																"src": "20902:11:0",
																"valueSize": 1
															},
															{
																"declaration": 610,
																"isOffset": false,
																"isSlot": false,
																"src": "20921:11:0",
																"valueSize": 1
															},
															{
																"declaration": 616,
																"isOffset": false,
																"isSlot": false,
																"src": "21006:5:0",
																"valueSize": 1
															},
															{
																"declaration": 616,
																"isOffset": false,
																"isSlot": false,
																"src": "21019:5:0",
																"valueSize": 1
															},
															{
																"declaration": 647,
																"isOffset": false,
																"isSlot": false,
																"src": "20934:4:0",
																"valueSize": 1
															},
															{
																"declaration": 647,
																"isOffset": false,
																"isSlot": false,
																"src": "21026:4:0",
																"valueSize": 1
															},
															{
																"declaration": 647,
																"isOffset": false,
																"isSlot": false,
																"src": "21146:4:0",
																"valueSize": 1
															},
															{
																"declaration": 647,
																"isOffset": false,
																"isSlot": false,
																"src": "21169:4:0",
																"valueSize": 1
															},
															{
																"declaration": 647,
																"isOffset": false,
																"isSlot": false,
																"src": "21176:4:0",
																"valueSize": 1
															}
														],
														"id": 655,
														"nodeType": "InlineAssembly",
														"src": "20828:371:0"
													},
													{
														"expression": {
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 656,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "21265:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 657,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "21274:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 658,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "21282:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21274:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21265:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 661,
														"nodeType": "ExpressionStatement",
														"src": "21265:21:0"
													},
													{
														"assignments": [
															663
														],
														"declarations": [
															{
																"constant": false,
																"id": 663,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "21612:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 727,
																"src": "21604:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 662,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21604:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 670,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21623:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 665,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "21627:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21623:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 667,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21622:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21642:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "21622:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21604:39:0"
													},
													{
														"expression": {
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 671,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "21860:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21871:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 673,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "21875:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 674,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "21889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21875:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21871:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21860:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 678,
														"nodeType": "ExpressionStatement",
														"src": "21860:36:0"
													},
													{
														"expression": {
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 679,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "21929:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21940:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 681,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "21944:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 682,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "21958:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21944:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21940:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21929:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 686,
														"nodeType": "ExpressionStatement",
														"src": "21929:36:0"
													},
													{
														"expression": {
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 687,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "21999:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22010:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 689,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "22014:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 690,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "22028:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22014:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22010:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21999:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 694,
														"nodeType": "ExpressionStatement",
														"src": "21999:36:0"
													},
													{
														"expression": {
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 695,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "22069:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22080:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 697,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "22084:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 698,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "22098:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22084:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22080:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22069:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 702,
														"nodeType": "ExpressionStatement",
														"src": "22069:36:0"
													},
													{
														"expression": {
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 703,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "22139:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22150:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 705,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "22154:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 706,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "22168:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22154:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22150:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22139:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 710,
														"nodeType": "ExpressionStatement",
														"src": "22139:36:0"
													},
													{
														"expression": {
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 711,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "22210:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22221:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 713,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "22225:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 714,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "22239:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22225:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22221:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22210:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 718,
														"nodeType": "ExpressionStatement",
														"src": "22210:36:0"
													},
													{
														"expression": {
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 719,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "22680:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 720,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "22689:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 721,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "22697:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22689:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22680:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 724,
														"nodeType": "ExpressionStatement",
														"src": "22680:24:0"
													},
													{
														"expression": {
															"id": 725,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "22725:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 614,
														"id": 726,
														"nodeType": "Return",
														"src": "22718:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "18314:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "18641:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "18656:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "18648:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "18667:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "18659:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "18678:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "18670:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18647:43:0"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18722:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "18714:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18713:16:0"
									},
									"scope": 1395,
									"src": "18632:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "22990:192:0",
										"statements": [
											{
												"assignments": [
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23008:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "23000:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 744,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23000:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"arguments": [
														{
															"id": 747,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "23024:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 748,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "23027:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 749,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "23030:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 746,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															729,
															772
														],
														"referencedDeclaration": 729,
														"src": "23017:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23017:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23000:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 753,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "23073:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$352",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$352",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 752,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "23056:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$352_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23056:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 756,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "23093:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 757,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "23096:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 758,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "23099:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 755,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "23086:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23086:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23114:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23086:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23056:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "23052:101:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "23117:36:0",
													"statements": [
														{
															"expression": {
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 763,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "23131:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23131:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 766,
															"nodeType": "ExpressionStatement",
															"src": "23131:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 769,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 745,
													"src": "23169:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 770,
												"nodeType": "Return",
												"src": "23162:13:0"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "22754:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "22889:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "22904:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "22896:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "22915:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "22907:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "22926:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "22918:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "22939:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$352",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 738,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 737,
														"name": "Rounding",
														"nameLocations": [
															"22939:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 352,
														"src": "22939:8:0"
													},
													"referencedDeclaration": 352,
													"src": "22939:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$352",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22895:62:0"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "22981:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22980:9:0"
									},
									"scope": 1395,
									"src": "22880:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "23473:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 780,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "23487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23492:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23487:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 786,
												"nodeType": "IfStatement",
												"src": "23483:45:0",
												"trueBody": {
													"id": 785,
													"nodeType": "Block",
													"src": "23495:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23516:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 779,
															"id": 784,
															"nodeType": "Return",
															"src": "23509:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24215:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "24207:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 787,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24207:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24224:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 791,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 775,
																			"src": "24235:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 790,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1051,
																			1086
																		],
																		"referencedDeclaration": 1051,
																		"src": "24230:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24230:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24230:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 795,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24229:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24224:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24207:36:0"
											},
											{
												"id": 882,
												"nodeType": "UncheckedBlock",
												"src": "24644:408:0",
												"statements": [
													{
														"expression": {
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 798,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "24668:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 799,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "24678:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 800,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "24687:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 801,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "24691:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24687:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24678:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 804,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24677:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24702:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24677:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24668:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 808,
														"nodeType": "ExpressionStatement",
														"src": "24668:35:0"
													},
													{
														"expression": {
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 809,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "24717:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 810,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "24727:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 811,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "24736:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 812,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "24740:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24736:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24727:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 815,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24726:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24751:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24726:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24717:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 819,
														"nodeType": "ExpressionStatement",
														"src": "24717:35:0"
													},
													{
														"expression": {
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 820,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "24766:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 821,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "24776:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 822,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "24785:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 823,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "24789:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24785:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24776:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 826,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24775:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24800:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24775:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24766:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 830,
														"nodeType": "ExpressionStatement",
														"src": "24766:35:0"
													},
													{
														"expression": {
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 831,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "24815:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 832,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "24825:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 833,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "24834:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 834,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "24838:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24834:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24825:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 837,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24824:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24849:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24824:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24815:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 841,
														"nodeType": "ExpressionStatement",
														"src": "24815:35:0"
													},
													{
														"expression": {
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 842,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "24864:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 843,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "24874:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 844,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "24883:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 845,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "24887:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24883:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24874:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 848,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24873:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24898:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24873:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24864:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 852,
														"nodeType": "ExpressionStatement",
														"src": "24864:35:0"
													},
													{
														"expression": {
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 853,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "24913:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 854,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "24923:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 855,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "24932:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 856,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "24936:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24932:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24923:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 859,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24922:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24947:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24922:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24913:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 863,
														"nodeType": "ExpressionStatement",
														"src": "24913:35:0"
													},
													{
														"expression": {
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 864,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "24962:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 865,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "24972:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 866,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "24981:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 867,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "24985:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24981:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24972:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 870,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24971:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24996:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24971:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24962:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 874,
														"nodeType": "ExpressionStatement",
														"src": "24962:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 876,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "25022:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 877,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "25030:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 878,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 788,
																		"src": "25034:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25030:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 875,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "25018:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25018:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 779,
														"id": 881,
														"nodeType": "Return",
														"src": "25011:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "23188:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23425:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23438:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "23430:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23429:11:0"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "23464:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23463:9:0"
									},
									"scope": 1395,
									"src": "23416:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "25234:164:0",
										"statements": [
											{
												"id": 917,
												"nodeType": "UncheckedBlock",
												"src": "25244:148:0",
												"statements": [
													{
														"assignments": [
															896
														],
														"declarations": [
															{
																"constant": false,
																"id": 896,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25276:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 917,
																"src": "25268:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 895,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25268:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 900,
														"initialValue": {
															"arguments": [
																{
																	"id": 898,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "25290:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 897,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	884,
																	919
																],
																"referencedDeclaration": 884,
																"src": "25285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25285:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25268:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 901,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "25313:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 903,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 890,
																						"src": "25340:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$352",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$352",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 902,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1394,
																					"src": "25323:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$352_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25323:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 909,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 907,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 905,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 896,
																						"src": "25353:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 906,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 896,
																						"src": "25362:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25353:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 908,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 887,
																					"src": "25371:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25353:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "25323:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25379:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "25323:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25375:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 914,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25322:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "25313:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 894,
														"id": 916,
														"nodeType": "Return",
														"src": "25306:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "25064:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25167:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25180:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "25172:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25192:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "25183:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$352",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 888,
														"name": "Rounding",
														"nameLocations": [
															"25183:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 352,
														"src": "25183:8:0"
													},
													"referencedDeclaration": 352,
													"src": "25183:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$352",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25171:30:0"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "25225:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25224:9:0"
									},
									"scope": 1395,
									"src": "25158:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "25589:922:0",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25607:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1050,
														"src": "25599:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25599:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 930,
												"initialValue": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25616:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25599:18:0"
											},
											{
												"id": 1047,
												"nodeType": "UncheckedBlock",
												"src": "25627:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 931,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "25655:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25664:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "25655:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25670:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25655:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 945,
														"nodeType": "IfStatement",
														"src": "25651:99:0",
														"trueBody": {
															"id": 944,
															"nodeType": "Block",
															"src": "25673:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 936,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 922,
																			"src": "25691:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25701:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "25691:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 939,
																	"nodeType": "ExpressionStatement",
																	"src": "25691:13:0"
																},
																{
																	"expression": {
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 940,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "25722:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25732:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "25722:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 943,
																	"nodeType": "ExpressionStatement",
																	"src": "25722:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 946,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "25767:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25776:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25767:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25781:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25767:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 960,
														"nodeType": "IfStatement",
														"src": "25763:96:0",
														"trueBody": {
															"id": 959,
															"nodeType": "Block",
															"src": "25784:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 951,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 922,
																			"src": "25802:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25812:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25802:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 954,
																	"nodeType": "ExpressionStatement",
																	"src": "25802:12:0"
																},
																{
																	"expression": {
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 955,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "25832:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25842:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25832:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 958,
																	"nodeType": "ExpressionStatement",
																	"src": "25832:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 961,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "25876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25885:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25876:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25890:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25876:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 975,
														"nodeType": "IfStatement",
														"src": "25872:96:0",
														"trueBody": {
															"id": 974,
															"nodeType": "Block",
															"src": "25893:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 966,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 922,
																			"src": "25911:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25921:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25911:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 969,
																	"nodeType": "ExpressionStatement",
																	"src": "25911:12:0"
																},
																{
																	"expression": {
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 970,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "25941:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25951:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25941:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 973,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 976,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "25985:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25994:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25985:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25999:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25985:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 990,
														"nodeType": "IfStatement",
														"src": "25981:96:0",
														"trueBody": {
															"id": 989,
															"nodeType": "Block",
															"src": "26002:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 981,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 922,
																			"src": "26020:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26030:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26020:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 984,
																	"nodeType": "ExpressionStatement",
																	"src": "26020:12:0"
																},
																{
																	"expression": {
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 985,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "26050:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26060:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26050:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 988,
																	"nodeType": "ExpressionStatement",
																	"src": "26050:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "26094:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26103:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "26094:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26107:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26094:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1005,
														"nodeType": "IfStatement",
														"src": "26090:93:0",
														"trueBody": {
															"id": 1004,
															"nodeType": "Block",
															"src": "26110:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 996,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 922,
																			"src": "26128:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26138:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26128:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 999,
																	"nodeType": "ExpressionStatement",
																	"src": "26128:11:0"
																},
																{
																	"expression": {
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1000,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "26157:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26167:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26157:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1003,
																	"nodeType": "ExpressionStatement",
																	"src": "26157:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "26200:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26209:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26213:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26200:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1020,
														"nodeType": "IfStatement",
														"src": "26196:93:0",
														"trueBody": {
															"id": 1019,
															"nodeType": "Block",
															"src": "26216:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1011,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 922,
																			"src": "26234:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26244:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "26234:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1014,
																	"nodeType": "ExpressionStatement",
																	"src": "26234:11:0"
																},
																{
																	"expression": {
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1015,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "26263:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26273:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "26263:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1018,
																	"nodeType": "ExpressionStatement",
																	"src": "26263:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1021,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "26306:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26306:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26319:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26306:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1035,
														"nodeType": "IfStatement",
														"src": "26302:93:0",
														"trueBody": {
															"id": 1034,
															"nodeType": "Block",
															"src": "26322:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1026,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 922,
																			"src": "26340:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26350:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26340:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1029,
																	"nodeType": "ExpressionStatement",
																	"src": "26340:11:0"
																},
																{
																	"expression": {
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1030,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "26369:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26379:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26369:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1033,
																	"nodeType": "ExpressionStatement",
																	"src": "26369:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1036,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "26412:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26421:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26412:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26425:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26412:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1046,
														"nodeType": "IfStatement",
														"src": "26408:64:0",
														"trueBody": {
															"id": 1045,
															"nodeType": "Block",
															"src": "26428:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1041,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "26446:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26456:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26446:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1044,
																	"nodeType": "ExpressionStatement",
																	"src": "26446:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1048,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "26498:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 926,
												"id": 1049,
												"nodeType": "Return",
												"src": "26491:13:0"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "25404:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "25537:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25550:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "25542:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25541:15:0"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "25580:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25579:9:0"
									},
									"scope": 1395,
									"src": "25528:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "26744:168:0",
										"statements": [
											{
												"id": 1084,
												"nodeType": "UncheckedBlock",
												"src": "26754:152:0",
												"statements": [
													{
														"assignments": [
															1063
														],
														"declarations": [
															{
																"constant": false,
																"id": 1063,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26786:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1084,
																"src": "26778:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1062,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26778:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1067,
														"initialValue": {
															"arguments": [
																{
																	"id": 1065,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "26800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1064,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1051,
																	1086
																],
																"referencedDeclaration": 1051,
																"src": "26795:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26795:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26778:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1068,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "26827:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1070,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1057,
																						"src": "26854:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$352",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$352",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1069,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1394,
																					"src": "26837:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$352_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26837:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1074,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1072,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "26867:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1073,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1063,
																						"src": "26872:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26867:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1075,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1054,
																					"src": "26881:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26867:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "26837:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26893:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "26837:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26889:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26836:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "26827:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1061,
														"id": 1083,
														"nodeType": "Return",
														"src": "26820:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "26517:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26673:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26686:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "26678:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26702:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "26693:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$352",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1056,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1055,
														"name": "Rounding",
														"nameLocations": [
															"26693:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 352,
														"src": "26693:8:0"
													},
													"referencedDeclaration": 352,
													"src": "26693:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$352",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26677:34:0"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "26735:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26734:9:0"
									},
									"scope": 1395,
									"src": "26664:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "27105:854:0",
										"statements": [
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "27123:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "27115:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"hexValue": "30",
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27132:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27115:18:0"
											},
											{
												"id": 1211,
												"nodeType": "UncheckedBlock",
												"src": "27143:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1098,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "27171:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27180:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27186:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27180:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "27171:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1114,
														"nodeType": "IfStatement",
														"src": "27167:103:0",
														"trueBody": {
															"id": 1113,
															"nodeType": "Block",
															"src": "27190:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1103,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "27208:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27217:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27223:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "27217:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "27208:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1108,
																	"nodeType": "ExpressionStatement",
																	"src": "27208:17:0"
																},
																{
																	"expression": {
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1109,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "27243:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27253:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "27243:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1112,
																	"nodeType": "ExpressionStatement",
																	"src": "27243:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1115,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "27287:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27296:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27302:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27296:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "27287:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1131,
														"nodeType": "IfStatement",
														"src": "27283:103:0",
														"trueBody": {
															"id": 1130,
															"nodeType": "Block",
															"src": "27306:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1120,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "27324:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27333:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27339:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "27333:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "27324:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1125,
																	"nodeType": "ExpressionStatement",
																	"src": "27324:17:0"
																},
																{
																	"expression": {
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1126,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "27359:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27369:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "27359:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1129,
																	"nodeType": "ExpressionStatement",
																	"src": "27359:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1132,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "27403:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27412:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27418:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27412:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "27403:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1148,
														"nodeType": "IfStatement",
														"src": "27399:103:0",
														"trueBody": {
															"id": 1147,
															"nodeType": "Block",
															"src": "27422:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1137,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "27440:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27449:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27455:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "27449:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "27440:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1142,
																	"nodeType": "ExpressionStatement",
																	"src": "27440:17:0"
																},
																{
																	"expression": {
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1143,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "27475:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27485:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "27475:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1146,
																	"nodeType": "ExpressionStatement",
																	"src": "27475:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1149,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "27519:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27528:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27534:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27528:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "27519:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1165,
														"nodeType": "IfStatement",
														"src": "27515:100:0",
														"trueBody": {
															"id": 1164,
															"nodeType": "Block",
															"src": "27537:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1154,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "27555:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27564:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27570:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "27564:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "27555:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1159,
																	"nodeType": "ExpressionStatement",
																	"src": "27555:16:0"
																},
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1160,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "27589:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27599:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "27589:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "27589:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1166,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "27632:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27641:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27647:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27641:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "27632:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1182,
														"nodeType": "IfStatement",
														"src": "27628:100:0",
														"trueBody": {
															"id": 1181,
															"nodeType": "Block",
															"src": "27650:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1171,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "27668:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27677:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27683:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "27677:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "27668:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1176,
																	"nodeType": "ExpressionStatement",
																	"src": "27668:16:0"
																},
																{
																	"expression": {
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1177,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "27702:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27712:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27702:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1180,
																	"nodeType": "ExpressionStatement",
																	"src": "27702:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1183,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "27745:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27754:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27754:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "27745:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1199,
														"nodeType": "IfStatement",
														"src": "27741:100:0",
														"trueBody": {
															"id": 1198,
															"nodeType": "Block",
															"src": "27763:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1188,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "27781:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27790:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27796:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "27790:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "27781:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1193,
																	"nodeType": "ExpressionStatement",
																	"src": "27781:16:0"
																},
																{
																	"expression": {
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "27815:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27825:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27815:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1197,
																	"nodeType": "ExpressionStatement",
																	"src": "27815:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1200,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "27858:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27867:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27873:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "27867:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "27858:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1210,
														"nodeType": "IfStatement",
														"src": "27854:66:0",
														"trueBody": {
															"id": 1209,
															"nodeType": "Block",
															"src": "27876:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1205,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "27894:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27904:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27894:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1208,
																	"nodeType": "ExpressionStatement",
																	"src": "27894:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1212,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1095,
													"src": "27946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1213,
												"nodeType": "Return",
												"src": "27939:13:0"
											}
										]
									},
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "26918:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "27052:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27066:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "27058:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27057:15:0"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "27096:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27095:9:0"
									},
									"scope": 1395,
									"src": "27043:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "28194:170:0",
										"statements": [
											{
												"id": 1248,
												"nodeType": "UncheckedBlock",
												"src": "28204:154:0",
												"statements": [
													{
														"assignments": [
															1227
														],
														"declarations": [
															{
																"constant": false,
																"id": 1227,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "28236:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1248,
																"src": "28228:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1226,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1231,
														"initialValue": {
															"arguments": [
																{
																	"id": 1229,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "28251:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1228,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1215,
																	1250
																],
																"referencedDeclaration": 1215,
																"src": "28245:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28245:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28228:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "28278:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1234,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1221,
																						"src": "28305:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$352",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$352",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1233,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1394,
																					"src": "28288:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$352_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "28288:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1238,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1236,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "28318:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1237,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1227,
																						"src": "28324:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "28318:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1239,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1218,
																					"src": "28333:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28318:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "28288:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28345:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "28288:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28341:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "28287:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "28278:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1225,
														"id": 1247,
														"nodeType": "Return",
														"src": "28271:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "27965:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "28122:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28136:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "28128:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28152:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "28143:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$352",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1219,
														"name": "Rounding",
														"nameLocations": [
															"28143:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 352,
														"src": "28143:8:0"
													},
													"referencedDeclaration": 352,
													"src": "28143:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$352",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28127:34:0"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "28185:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28184:9:0"
									},
									"scope": 1395,
									"src": "28113:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "28684:600:0",
										"statements": [
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "28702:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1336,
														"src": "28694:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1261,
												"initialValue": {
													"hexValue": "30",
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28711:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28694:18:0"
											},
											{
												"id": 1333,
												"nodeType": "UncheckedBlock",
												"src": "28722:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1262,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "28750:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28759:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "28750:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28750:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1276,
														"nodeType": "IfStatement",
														"src": "28746:98:0",
														"trueBody": {
															"id": 1275,
															"nodeType": "Block",
															"src": "28768:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1267,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "28786:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28796:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "28786:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1270,
																	"nodeType": "ExpressionStatement",
																	"src": "28786:13:0"
																},
																{
																	"expression": {
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1271,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "28817:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28827:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "28817:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1274,
																	"nodeType": "ExpressionStatement",
																	"src": "28817:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1277,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "28861:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28870:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "28861:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28875:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28861:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1291,
														"nodeType": "IfStatement",
														"src": "28857:95:0",
														"trueBody": {
															"id": 1290,
															"nodeType": "Block",
															"src": "28878:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1282,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "28896:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28906:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "28896:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1285,
																	"nodeType": "ExpressionStatement",
																	"src": "28896:12:0"
																},
																{
																	"expression": {
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1286,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "28926:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28936:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "28926:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1289,
																	"nodeType": "ExpressionStatement",
																	"src": "28926:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1292,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "28969:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28978:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "28969:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28983:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28969:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1306,
														"nodeType": "IfStatement",
														"src": "28965:95:0",
														"trueBody": {
															"id": 1305,
															"nodeType": "Block",
															"src": "28986:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1297,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "29004:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29014:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29004:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "29004:12:0"
																},
																{
																	"expression": {
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "29034:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29044:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29034:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1304,
																	"nodeType": "ExpressionStatement",
																	"src": "29034:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "29077:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29086:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29077:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29077:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1321,
														"nodeType": "IfStatement",
														"src": "29073:95:0",
														"trueBody": {
															"id": 1320,
															"nodeType": "Block",
															"src": "29094:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "29112:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29122:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29112:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1315,
																	"nodeType": "ExpressionStatement",
																	"src": "29112:12:0"
																},
																{
																	"expression": {
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1316,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "29142:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29152:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29142:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1319,
																	"nodeType": "ExpressionStatement",
																	"src": "29142:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1322,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "29185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29194:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "29185:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29198:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29185:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1332,
														"nodeType": "IfStatement",
														"src": "29181:64:0",
														"trueBody": {
															"id": 1331,
															"nodeType": "Block",
															"src": "29201:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1327,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "29219:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29229:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "29219:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1330,
																	"nodeType": "ExpressionStatement",
																	"src": "29219:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1334,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1259,
													"src": "29271:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1335,
												"nodeType": "Return",
												"src": "29264:13:0"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "28370:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "28630:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28645:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "28637:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28636:15:0"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "28675:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28674:9:0"
									},
									"scope": 1395,
									"src": "28621:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "29521:177:0",
										"statements": [
											{
												"id": 1373,
												"nodeType": "UncheckedBlock",
												"src": "29531:161:0",
												"statements": [
													{
														"assignments": [
															1349
														],
														"declarations": [
															{
																"constant": false,
																"id": 1349,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "29563:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1373,
																"src": "29555:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1348,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29555:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1353,
														"initialValue": {
															"arguments": [
																{
																	"id": 1351,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "29579:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1350,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1337,
																	1375
																],
																"referencedDeclaration": 1337,
																"src": "29572:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29572:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29555:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1354,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "29606:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1356,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1343,
																						"src": "29633:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$352",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$352",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1355,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1394,
																					"src": "29616:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$352_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29616:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1358,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "29646:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1361,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1359,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1349,
																									"src": "29652:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1360,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "29662:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "29652:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1362,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "29651:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "29646:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1364,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1340,
																					"src": "29667:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29646:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "29616:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29679:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "29616:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29675:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1370,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29615:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "29606:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1347,
														"id": 1372,
														"nodeType": "Return",
														"src": "29599:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "29290:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "29448:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29463:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "29455:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "29479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "29470:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$352",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1342,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1341,
														"name": "Rounding",
														"nameLocations": [
															"29470:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 352,
														"src": "29470:8:0"
													},
													"referencedDeclaration": 352,
													"src": "29470:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$352",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29454:34:0"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "29512:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29511:9:0"
									},
									"scope": 1395,
									"src": "29439:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "29896:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1386,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "29919:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$352",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$352",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29913:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1384,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "29913:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29913:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29931:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "29913:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29936:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "29913:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1383,
												"id": 1392,
												"nodeType": "Return",
												"src": "29906:31:0"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "29704:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "29831:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "29857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "29848:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$352",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1377,
														"name": "Rounding",
														"nameLocations": [
															"29848:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 352,
														"src": "29848:8:0"
													},
													"referencedDeclaration": 352,
													"src": "29848:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$352",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29847:19:0"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "29890:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29890:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29889:6:0"
									},
									"scope": 1395,
									"src": "29822:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2929,
							"src": "15032:14914:0",
							"usedErrors": [
								347
							],
							"usedEvents": []
						},
						{
							"id": 1396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30068:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1397,
								"nodeType": "StructuredDocumentation",
								"src": "30096:63:0",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1573,
							"linearizedBaseContracts": [
								1573
							],
							"name": "Arrays",
							"nameLocation": "30168:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1400,
									"libraryName": {
										"id": 1398,
										"name": "StorageSlot",
										"nameLocations": [
											"30187:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 342,
										"src": "30187:11:0"
									},
									"nodeType": "UsingForDirective",
									"src": "30181:30:0",
									"typeName": {
										"id": 1399,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "30203:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "30727:834:0",
										"statements": [
											{
												"assignments": [
													1412
												],
												"declarations": [
													{
														"constant": false,
														"id": 1412,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "30745:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1482,
														"src": "30737:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30737:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"hexValue": "30",
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30751:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30737:15:0"
											},
											{
												"assignments": [
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "30770:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1482,
														"src": "30762:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30762:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1419,
												"initialValue": {
													"expression": {
														"id": 1417,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "30777:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "30783:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "30777:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30762:27:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1420,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "30804:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30812:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30804:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1426,
												"nodeType": "IfStatement",
												"src": "30800:48:0",
												"trueBody": {
													"id": 1425,
													"nodeType": "Block",
													"src": "30815:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30836:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1410,
															"id": 1424,
															"nodeType": "Return",
															"src": "30829:8:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 1458,
													"nodeType": "Block",
													"src": "30877:423:0",
													"statements": [
														{
															"assignments": [
																1431
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1431,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "30899:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1458,
																	"src": "30891:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1430,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30891:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1437,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1434,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "30918:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1435,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1416,
																		"src": "30923:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1432,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "30905:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1395_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30910:7:0",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 569,
																	"src": "30905:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30905:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30891:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1439,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1404,
																				"src": "31166:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1440,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1431,
																				"src": "31173:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1438,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1504,
																				1525,
																				1546
																			],
																			"referencedDeclaration": 1546,
																			"src": "31153:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$247_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31153:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$247_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31178:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 246,
																	"src": "31153:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1443,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "31186:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31153:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1456,
																"nodeType": "Block",
																"src": "31244:46:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1450,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1412,
																				"src": "31262:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1451,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1431,
																					"src": "31268:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31274:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "31268:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31262:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1455,
																		"nodeType": "ExpressionStatement",
																		"src": "31262:13:0"
																	}
																]
															},
															"id": 1457,
															"nodeType": "IfStatement",
															"src": "31149:141:0",
															"trueBody": {
																"id": 1449,
																"nodeType": "Block",
																"src": "31195:43:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1445,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1416,
																				"src": "31213:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1446,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1431,
																				"src": "31220:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31213:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1448,
																		"nodeType": "ExpressionStatement",
																		"src": "31213:10:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1427,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "30865:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1428,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "30871:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30865:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1459,
												"nodeType": "WhileStatement",
												"src": "30858:442:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1460,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "31417:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31423:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "31417:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1464,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "31441:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1465,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "31448:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31454:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "31448:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1463,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1504,
																		1525,
																		1546
																	],
																	"referencedDeclaration": 1546,
																	"src": "31428:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$247_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31428:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$247_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31457:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 246,
															"src": "31428:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1470,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "31466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "31428:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "31417:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1480,
													"nodeType": "Block",
													"src": "31520:35:0",
													"statements": [
														{
															"expression": {
																"id": 1478,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "31541:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1410,
															"id": 1479,
															"nodeType": "Return",
															"src": "31534:10:0"
														}
													]
												},
												"id": 1481,
												"nodeType": "IfStatement",
												"src": "31413:142:0",
												"trueBody": {
													"id": 1477,
													"nodeType": "Block",
													"src": "31475:39:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1473,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "31496:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31502:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "31496:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1410,
															"id": 1476,
															"nodeType": "Return",
															"src": "31489:14:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "30217:407:0",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "30638:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "30671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "30653:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1402,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30653:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1403,
													"nodeType": "ArrayTypeName",
													"src": "30653:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "30686:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "30678:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30652:42:0"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "30718:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30717:9:0"
									},
									"scope": 1573,
									"src": "30629:932:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "31877:459:0",
										"statements": [
											{
												"assignments": [
													1496
												],
												"declarations": [
													{
														"constant": false,
														"id": 1496,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "31895:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1503,
														"src": "31887:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1495,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "31887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1497,
												"nodeType": "VariableDeclarationStatement",
												"src": "31887:12:0"
											},
											{
												"AST": {
													"nativeSrc": "32200:92:0",
													"nodeType": "YulBlock",
													"src": "32200:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "32221:1:0",
																		"nodeType": "YulLiteral",
																		"src": "32221:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "32224:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "32224:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32214:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "32214:6:0"
																},
																"nativeSrc": "32214:19:0",
																"nodeType": "YulFunctionCall",
																"src": "32214:19:0"
															},
															"nativeSrc": "32214:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "32214:19:0"
														},
														{
															"nativeSrc": "32246:36:0",
															"nodeType": "YulAssignment",
															"src": "32246:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "32268:1:0",
																				"nodeType": "YulLiteral",
																				"src": "32268:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32271:4:0",
																				"nodeType": "YulLiteral",
																				"src": "32271:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "32258:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "32258:9:0"
																		},
																		"nativeSrc": "32258:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "32258:18:0"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "32278:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "32278:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32254:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "32254:3:0"
																},
																"nativeSrc": "32254:28:0",
																"nodeType": "YulFunctionCall",
																"src": "32254:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "32246:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "32246:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1487,
														"isOffset": false,
														"isSlot": true,
														"src": "32224:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1489,
														"isOffset": false,
														"isSlot": false,
														"src": "32278:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1496,
														"isOffset": false,
														"isSlot": false,
														"src": "32246:4:0",
														"valueSize": 1
													}
												],
												"id": 1498,
												"nodeType": "InlineAssembly",
												"src": "32191:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1499,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "32308:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32313:14:0",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 264,
														"src": "32308:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$238_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32308:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$238_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1502,
												"nodeType": "Return",
												"src": "32301:28:0"
											}
										]
									},
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "31567:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "31772:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "31803:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "31785:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1485,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "31785:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1486,
													"nodeType": "ArrayTypeName",
													"src": "31785:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "31816:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "31808:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31784:36:0"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "31844:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$238_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1491,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"31844:11:0",
															"31856:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 238,
														"src": "31844:23:0"
													},
													"referencedDeclaration": 238,
													"src": "31844:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$238_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31843:33:0"
									},
									"scope": 1573,
									"src": "31763:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "32652:459:0",
										"statements": [
											{
												"assignments": [
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "32670:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1524,
														"src": "32662:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1516,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "32662:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1518,
												"nodeType": "VariableDeclarationStatement",
												"src": "32662:12:0"
											},
											{
												"AST": {
													"nativeSrc": "32975:92:0",
													"nodeType": "YulBlock",
													"src": "32975:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "32996:1:0",
																		"nodeType": "YulLiteral",
																		"src": "32996:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "32999:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "32999:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32989:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "32989:6:0"
																},
																"nativeSrc": "32989:19:0",
																"nodeType": "YulFunctionCall",
																"src": "32989:19:0"
															},
															"nativeSrc": "32989:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "32989:19:0"
														},
														{
															"nativeSrc": "33021:36:0",
															"nodeType": "YulAssignment",
															"src": "33021:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "33043:1:0",
																				"nodeType": "YulLiteral",
																				"src": "33043:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33046:4:0",
																				"nodeType": "YulLiteral",
																				"src": "33046:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "33033:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "33033:9:0"
																		},
																		"nativeSrc": "33033:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33033:18:0"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "33053:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "33053:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33029:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "33029:3:0"
																},
																"nativeSrc": "33029:28:0",
																"nodeType": "YulFunctionCall",
																"src": "33029:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "33021:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "33021:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1508,
														"isOffset": false,
														"isSlot": true,
														"src": "32999:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1510,
														"isOffset": false,
														"isSlot": false,
														"src": "33053:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1517,
														"isOffset": false,
														"isSlot": false,
														"src": "33021:4:0",
														"valueSize": 1
													}
												],
												"id": 1519,
												"nodeType": "InlineAssembly",
												"src": "32966:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1520,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "33083:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33088:14:0",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 286,
														"src": "33083:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$244_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33083:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$244_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1515,
												"id": 1523,
												"nodeType": "Return",
												"src": "33076:28:0"
											}
										]
									},
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "32342:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "32547:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "32578:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "32560:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1506,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "32560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1507,
													"nodeType": "ArrayTypeName",
													"src": "32560:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "32591:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "32583:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32559:36:0"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "32619:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$244_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1512,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"32619:11:0",
															"32631:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "32619:23:0"
													},
													"referencedDeclaration": 244,
													"src": "32619:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$244_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32618:33:0"
									},
									"scope": 1573,
									"src": "32538:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "33427:459:0",
										"statements": [
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "33445:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1545,
														"src": "33437:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1537,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "33437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"nodeType": "VariableDeclarationStatement",
												"src": "33437:12:0"
											},
											{
												"AST": {
													"nativeSrc": "33750:92:0",
													"nodeType": "YulBlock",
													"src": "33750:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "33771:1:0",
																		"nodeType": "YulLiteral",
																		"src": "33771:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "33774:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "33774:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33764:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33764:6:0"
																},
																"nativeSrc": "33764:19:0",
																"nodeType": "YulFunctionCall",
																"src": "33764:19:0"
															},
															"nativeSrc": "33764:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "33764:19:0"
														},
														{
															"nativeSrc": "33796:36:0",
															"nodeType": "YulAssignment",
															"src": "33796:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "33818:1:0",
																				"nodeType": "YulLiteral",
																				"src": "33818:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33821:4:0",
																				"nodeType": "YulLiteral",
																				"src": "33821:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "33808:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "33808:9:0"
																		},
																		"nativeSrc": "33808:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33808:18:0"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "33828:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "33828:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33804:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "33804:3:0"
																},
																"nativeSrc": "33804:28:0",
																"nodeType": "YulFunctionCall",
																"src": "33804:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "33796:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "33796:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1529,
														"isOffset": false,
														"isSlot": true,
														"src": "33774:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1531,
														"isOffset": false,
														"isSlot": false,
														"src": "33828:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1538,
														"isOffset": false,
														"isSlot": false,
														"src": "33796:4:0",
														"valueSize": 1
													}
												],
												"id": 1540,
												"nodeType": "InlineAssembly",
												"src": "33741:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1541,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "33858:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33863:14:0",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 297,
														"src": "33858:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$247_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33858:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$247_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1536,
												"id": 1544,
												"nodeType": "Return",
												"src": "33851:28:0"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "33117:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "33322:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "33353:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "33335:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1527,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "33335:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1528,
													"nodeType": "ArrayTypeName",
													"src": "33335:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "33366:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "33358:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33334:36:0"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "33394:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$247_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1533,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"33394:11:0",
															"33406:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 247,
														"src": "33394:23:0"
													},
													"referencedDeclaration": 247,
													"src": "33394:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$247_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33393:33:0"
									},
									"scope": 1573,
									"src": "33313:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "34187:98:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34206:73:0",
													"nodeType": "YulBlock",
													"src": "34206:73:0",
													"statements": [
														{
															"nativeSrc": "34220:49:0",
															"nodeType": "YulAssignment",
															"src": "34220:49:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "34241:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "34241:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "34246:4:0",
																						"nodeType": "YulLiteral",
																						"src": "34246:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "34237:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "34237:3:0"
																				},
																				"nativeSrc": "34237:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "34237:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "34257:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "34257:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "34262:4:0",
																						"nodeType": "YulLiteral",
																						"src": "34262:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "34253:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "34253:3:0"
																				},
																				"nativeSrc": "34253:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "34253:14:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34233:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "34233:3:0"
																		},
																		"nativeSrc": "34233:35:0",
																		"nodeType": "YulFunctionCall",
																		"src": "34233:35:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "34227:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "34227:5:0"
																},
																"nativeSrc": "34227:42:0",
																"nodeType": "YulFunctionCall",
																"src": "34227:42:0"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "34220:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "34220:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1550,
														"isOffset": false,
														"isSlot": false,
														"src": "34241:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1552,
														"isOffset": false,
														"isSlot": false,
														"src": "34257:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1555,
														"isOffset": false,
														"isSlot": false,
														"src": "34220:3:0",
														"valueSize": 1
													}
												],
												"id": 1557,
												"nodeType": "InlineAssembly",
												"src": "34197:82:0"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "33892:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "34097:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "34133:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "34116:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1548,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "34116:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1549,
													"nodeType": "ArrayTypeName",
													"src": "34116:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "34146:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "34138:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34115:35:0"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "34182:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "34174:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34173:13:0"
									},
									"scope": 1573,
									"src": "34088:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "34586:98:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34605:73:0",
													"nodeType": "YulBlock",
													"src": "34605:73:0",
													"statements": [
														{
															"nativeSrc": "34619:49:0",
															"nodeType": "YulAssignment",
															"src": "34619:49:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "34640:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "34640:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "34645:4:0",
																						"nodeType": "YulLiteral",
																						"src": "34645:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "34636:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "34636:3:0"
																				},
																				"nativeSrc": "34636:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "34636:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "34656:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "34656:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "34661:4:0",
																						"nodeType": "YulLiteral",
																						"src": "34661:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "34652:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "34652:3:0"
																				},
																				"nativeSrc": "34652:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "34652:14:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34632:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "34632:3:0"
																		},
																		"nativeSrc": "34632:35:0",
																		"nodeType": "YulFunctionCall",
																		"src": "34632:35:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "34626:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "34626:5:0"
																},
																"nativeSrc": "34626:42:0",
																"nodeType": "YulFunctionCall",
																"src": "34626:42:0"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "34619:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "34619:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1563,
														"isOffset": false,
														"isSlot": false,
														"src": "34640:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1565,
														"isOffset": false,
														"isSlot": false,
														"src": "34656:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1568,
														"isOffset": false,
														"isSlot": false,
														"src": "34619:3:0",
														"valueSize": 1
													}
												],
												"id": 1570,
												"nodeType": "InlineAssembly",
												"src": "34596:82:0"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "34291:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "34496:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "34532:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "34515:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1561,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "34515:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1562,
													"nodeType": "ArrayTypeName",
													"src": "34515:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "34545:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "34537:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34514:35:0"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "34581:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "34573:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34572:13:0"
									},
									"scope": 1573,
									"src": "34487:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2929,
							"src": "30160:4526:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1574,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "34833:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1575,
								"nodeType": "StructuredDocumentation",
								"src": "34859:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 1614,
							"linearizedBaseContracts": [
								1614
							],
							"name": "IERC20Errors",
							"nameLocation": "35009:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "35028:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1584,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "35348:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "35381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "35373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "35397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "35389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "35414:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "35406:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35372:49:0"
									},
									"src": "35342:80:0"
								},
								{
									"documentation": {
										"id": 1585,
										"nodeType": "StructuredDocumentation",
										"src": "35428:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1589,
									"name": "ERC20InvalidSender",
									"nameLocation": "35591:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "35618:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "35610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35609:16:0"
									},
									"src": "35585:41:0"
								},
								{
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "35632:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1594,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "35802:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "35831:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "35823:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35822:18:0"
									},
									"src": "35796:45:0"
								},
								{
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "35847:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1603,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "36203:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "36238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "36230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "36255:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "36247:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "36274:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "36266:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36229:52:0"
									},
									"src": "36197:85:0"
								},
								{
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "36288:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1608,
									"name": "ERC20InvalidApprover",
									"nameLocation": "36473:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "36502:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "36494:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36493:18:0"
									},
									"src": "36467:45:0"
								},
								{
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "36518:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1613,
									"name": "ERC20InvalidSpender",
									"nameLocation": "36724:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "36752:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "36744:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36743:17:0"
									},
									"src": "36718:43:0"
								}
							],
							"scope": 2929,
							"src": "34999:1764:0",
							"usedErrors": [
								1584,
								1589,
								1594,
								1603,
								1608,
								1613
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1615,
								"nodeType": "StructuredDocumentation",
								"src": "36765:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 1662,
							"linearizedBaseContracts": [
								1662
							],
							"name": "IERC721Errors",
							"nameLocation": "36917:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "36937:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1620,
									"name": "ERC721InvalidOwner",
									"nameLocation": "37167:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37194:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "37186:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37185:15:0"
									},
									"src": "37161:40:0"
								},
								{
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "37207:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1625,
									"name": "ERC721NonexistentToken",
									"nameLocation": "37350:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37381:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "37373:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37372:17:0"
									},
									"src": "37344:46:0"
								},
								{
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "37396:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1634,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "37696:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "37725:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "37717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37741:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "37733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37758:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "37750:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37716:48:0"
									},
									"src": "37690:75:0"
								},
								{
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "37771:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1639,
									"name": "ERC721InvalidSender",
									"nameLocation": "37934:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "37962:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "37954:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37953:16:0"
									},
									"src": "37928:42:0"
								},
								{
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "37976:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1644,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "38146:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "38176:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "38168:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38167:18:0"
									},
									"src": "38140:46:0"
								},
								{
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "38192:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1651,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "38450:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38485:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "38477:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "38495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38476:35:0"
									},
									"src": "38444:68:0"
								},
								{
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "38518:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1656,
									"name": "ERC721InvalidApprover",
									"nameLocation": "38703:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "38733:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "38725:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38724:18:0"
									},
									"src": "38697:46:0"
								},
								{
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "38749:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1661,
									"name": "ERC721InvalidOperator",
									"nameLocation": "38957:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38987:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "38979:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38979:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38978:18:0"
									},
									"src": "38951:46:0"
								}
							],
							"scope": 2929,
							"src": "36907:2092:0",
							"usedErrors": [
								1620,
								1625,
								1634,
								1639,
								1644,
								1651,
								1656,
								1661
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1663,
								"nodeType": "StructuredDocumentation",
								"src": "39001:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1709,
							"linearizedBaseContracts": [
								1709
							],
							"name": "IERC1155Errors",
							"nameLocation": "39155:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "39176:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1674,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "39548:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "39583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "39575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "39599:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "39591:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "39616:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "39608:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39632:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "39624:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39574:66:0"
									},
									"src": "39542:99:0"
								},
								{
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "39647:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1679,
									"name": "ERC1155InvalidSender",
									"nameLocation": "39810:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "39839:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "39831:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39830:16:0"
									},
									"src": "39804:43:0"
								},
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "39853:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1684,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "40023:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "40054:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "40046:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40045:18:0"
									},
									"src": "40017:47:0"
								},
								{
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "40070:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1691,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "40337:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "40374:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "40366:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "40392:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "40384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40365:33:0"
									},
									"src": "40331:68:0"
								},
								{
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "40405:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1696,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "40590:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "40621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "40613:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40612:18:0"
									},
									"src": "40584:47:0"
								},
								{
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "40637:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1701,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "40845:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "40876:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "40868:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40867:18:0"
									},
									"src": "40839:47:0"
								},
								{
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "40892:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1708,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "41183:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "41217:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "41209:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "41236:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "41228:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41208:41:0"
									},
									"src": "41177:73:0"
								}
							],
							"scope": 2929,
							"src": "39145:2107:0",
							"usedErrors": [
								1674,
								1679,
								1684,
								1691,
								1696,
								1701,
								1708
							],
							"usedEvents": []
						},
						{
							"id": 1710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "41392:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1712,
										"name": "Context",
										"nameLocations": [
											"41639:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "41639:7:0"
									},
									"id": 1713,
									"nodeType": "InheritanceSpecifier",
									"src": "41639:7:0"
								},
								{
									"baseName": {
										"id": 1714,
										"name": "ERC165",
										"nameLocations": [
											"41648:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 233,
										"src": "41648:6:0"
									},
									"id": 1715,
									"nodeType": "InheritanceSpecifier",
									"src": "41648:6:0"
								},
								{
									"baseName": {
										"id": 1716,
										"name": "IERC1155",
										"nameLocations": [
											"41656:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "41656:8:0"
									},
									"id": 1717,
									"nodeType": "InheritanceSpecifier",
									"src": "41656:8:0"
								},
								{
									"baseName": {
										"id": 1718,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"41666:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 183,
										"src": "41666:19:0"
									},
									"id": 1719,
									"nodeType": "InheritanceSpecifier",
									"src": "41666:19:0"
								},
								{
									"baseName": {
										"id": 1720,
										"name": "IERC1155Errors",
										"nameLocations": [
											"41687:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1709,
										"src": "41687:14:0"
									},
									"id": 1721,
									"nodeType": "InheritanceSpecifier",
									"src": "41687:14:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1711,
								"nodeType": "StructuredDocumentation",
								"src": "41425:184:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 2744,
							"linearizedBaseContracts": [
								2744,
								1709,
								183,
								131,
								233,
								11,
								212
							],
							"name": "ERC1155",
							"nameLocation": "41628:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1725,
									"libraryName": {
										"id": 1722,
										"name": "Arrays",
										"nameLocations": [
											"41714:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1573,
										"src": "41714:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "41708:27:0",
									"typeName": {
										"baseType": {
											"id": 1723,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "41725:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1724,
										"nodeType": "ArrayTypeName",
										"src": "41725:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 1729,
									"libraryName": {
										"id": 1726,
										"name": "Arrays",
										"nameLocations": [
											"41746:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1573,
										"src": "41746:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "41740:27:0",
									"typeName": {
										"baseType": {
											"id": 1727,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "41757:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1728,
										"nodeType": "ArrayTypeName",
										"src": "41757:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 1735,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "41840:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2744,
									"src": "41773:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1734,
										"keyName": "id",
										"keyNameLocation": "41789:2:0",
										"keyType": {
											"id": 1730,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "41781:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "41773:58:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1733,
											"keyName": "account",
											"keyNameLocation": "41811:7:0",
											"keyType": {
												"id": 1731,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "41803:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "41795:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1732,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "41822:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1741,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "41926:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2744,
									"src": "41856:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1740,
										"keyName": "account",
										"keyNameLocation": "41872:7:0",
										"keyType": {
											"id": 1736,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "41864:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "41856:61:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1739,
											"keyName": "operator",
											"keyNameLocation": "41899:8:0",
											"keyType": {
												"id": 1737,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "41891:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "41883:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1738,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "41911:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1743,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "42080:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 2744,
									"src": "42065:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1742,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "42065:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "42166:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1750,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "42184:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1749,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "42176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42176:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "42176:13:0"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "42091:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 1754,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "42160:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "42146:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42146:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42145:20:0"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42166:0:0"
									},
									"scope": 2744,
									"src": "42134:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										10,
										232
									],
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "42371:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1765,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "42400:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1767,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 131,
																			"src": "42420:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$131_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$131_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 1766,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "42415:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42415:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$131",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "42430:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "42415:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "42400:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1771,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "42457:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1773,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "42477:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$183_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$183_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 1772,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "42472:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42472:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$183",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "42498:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "42472:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "42457:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "42400:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1780,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "42549:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1778,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "42525:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$2744_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "42531:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 232,
															"src": "42525:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42525:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "42400:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1783,
												"nodeType": "Return",
												"src": "42381:180:0"
											}
										]
									},
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "42202:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "42272:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1761,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1759,
												"name": "ERC165",
												"nameLocations": [
													"42339:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 233,
												"src": "42339:6:0"
											},
											{
												"id": 1760,
												"name": "IERC165",
												"nameLocations": [
													"42347:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "42347:7:0"
											}
										],
										"src": "42330:25:0"
									},
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "42297:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "42290:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1756,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "42290:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42289:20:0"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "42365:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42364:6:0"
									},
									"scope": 2744,
									"src": "42263:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										182
									],
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "43042:28:0",
										"statements": [
											{
												"expression": {
													"id": 1793,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1743,
													"src": "43059:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1792,
												"id": 1794,
												"nodeType": "Return",
												"src": "43052:11:0"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "42574:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "42976:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "42980:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42979:18:0"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "43027:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1790,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "43027:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43026:15:0"
									},
									"scope": 2744,
									"src": "42967:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "43216:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1806,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "43233:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1808,
														"indexExpression": {
															"id": 1807,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "43243:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "43233:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1810,
													"indexExpression": {
														"id": 1809,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "43247:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "43233:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1805,
												"id": 1811,
												"nodeType": "Return",
												"src": "43226:29:0"
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "43076:49:0",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "43139:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "43157:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "43149:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "43174:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "43166:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43148:29:0"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "43207:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43206:9:0"
									},
									"scope": 2744,
									"src": "43130:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										82
									],
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "43561:410:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1826,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "43575:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "43584:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "43575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1828,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "43594:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "43598:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "43594:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43575:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1839,
												"nodeType": "IfStatement",
												"src": "43571:121:0",
												"trueBody": {
													"id": 1838,
													"nodeType": "Block",
													"src": "43606:86:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1832,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1820,
																			"src": "43653:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "43657:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "43653:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1834,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "43665:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "43674:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "43665:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1831,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "43627:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43627:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1837,
															"nodeType": "RevertStatement",
															"src": "43620:61:0"
														}
													]
												}
											},
											{
												"assignments": [
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "43719:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1882,
														"src": "43702:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1842,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "43702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1843,
															"nodeType": "ArrayTypeName",
															"src": "43702:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1851,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1848,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "43749:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "43758:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "43749:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "43735:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1845,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "43739:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1846,
															"nodeType": "ArrayTypeName",
															"src": "43739:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43735:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43702:63:0"
											},
											{
												"body": {
													"id": 1878,
													"nodeType": "Block",
													"src": "43822:112:0",
													"statements": [
														{
															"expression": {
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1863,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "43836:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1865,
																	"indexExpression": {
																		"id": 1864,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1853,
																		"src": "43850:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "43836:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1869,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1853,
																					"src": "43893:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1867,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1817,
																					"src": "43865:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "43874:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1572,
																				"src": "43865:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 1870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43865:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 1873,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1853,
																					"src": "43920:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1871,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1820,
																					"src": "43897:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "43901:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1559,
																				"src": "43897:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43897:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1866,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "43855:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43855:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43836:87:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1877,
															"nodeType": "ExpressionStatement",
															"src": "43836:87:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1856,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "43796:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1857,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "43800:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "43809:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "43800:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43796:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1879,
												"initializationExpression": {
													"assignments": [
														1853
													],
													"declarations": [
														{
															"constant": false,
															"id": 1853,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "43789:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1879,
															"src": "43781:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1852,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "43781:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1855,
													"initialValue": {
														"hexValue": "30",
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43793:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "43781:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "43817:3:0",
														"subExpression": {
															"id": 1860,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "43819:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1862,
													"nodeType": "ExpressionStatement",
													"src": "43817:3:0"
												},
												"nodeType": "ForStatement",
												"src": "43776:158:0"
											},
											{
												"expression": {
													"id": 1880,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1844,
													"src": "43951:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1825,
												"id": 1881,
												"nodeType": "Return",
												"src": "43944:20:0"
											}
										]
									},
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "43268:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "43428:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "43469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "43452:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1815,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "43452:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1816,
													"nodeType": "ArrayTypeName",
													"src": "43452:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "43504:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "43487:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1818,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "43487:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1819,
													"nodeType": "ArrayTypeName",
													"src": "43487:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43442:71:0"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "43543:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1822,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "43543:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1823,
													"nodeType": "ArrayTypeName",
													"src": "43543:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43542:18:0"
									},
									"scope": 2744,
									"src": "43419:552:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										90
									],
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "44114:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1892,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "44143:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44143:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1894,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "44157:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1895,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "44167:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1891,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2589,
														"src": "44124:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44124:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "44124:52:0"
											}
										]
									},
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "43977:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "44048:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "44074:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "44066:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "44089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "44084:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44084:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44065:33:0"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44114:0:0"
									},
									"scope": 2744,
									"src": "44039:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										100
									],
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "44346:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1909,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "44363:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1911,
														"indexExpression": {
															"id": 1910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "44382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "44363:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1913,
													"indexExpression": {
														"id": 1912,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "44391:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "44363:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1908,
												"id": 1914,
												"nodeType": "Return",
												"src": "44356:44:0"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "44189:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "44259:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "44284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "44276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "44301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "44293:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44275:35:0"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "44340:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44339:6:0"
									},
									"scope": 2744,
									"src": "44250:157:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "44587:238:0",
										"statements": [
											{
												"assignments": [
													1931
												],
												"declarations": [
													{
														"constant": false,
														"id": 1931,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "44605:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "44597:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1930,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44597:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1934,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1932,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "44614:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44614:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44597:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1935,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "44640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1936,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "44648:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "44640:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "44658:31:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1939,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1919,
																	"src": "44676:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1940,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "44682:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1938,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1916,
																"src": "44659:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44659:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "44640:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1950,
												"nodeType": "IfStatement",
												"src": "44636:129:0",
												"trueBody": {
													"id": 1949,
													"nodeType": "Block",
													"src": "44691:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1945,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "44741:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1946,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1919,
																		"src": "44749:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1944,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "44712:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44712:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1948,
															"nodeType": "RevertStatement",
															"src": "44705:49:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1952,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "44792:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1953,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "44798:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1954,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "44802:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1955,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "44806:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1956,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "44813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1951,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "44774:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44774:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "44774:44:0"
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "44413:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "44483:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "44500:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44522:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "44514:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "44534:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "44526:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "44546:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "44538:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "44566:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "44553:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1926,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44553:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44499:72:0"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44587:0:0"
									},
									"scope": 2744,
									"src": "44474:351:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										130
									],
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "45081:245:0",
										"statements": [
											{
												"assignments": [
													1977
												],
												"declarations": [
													{
														"constant": false,
														"id": 1977,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "45099:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2005,
														"src": "45091:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1976,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45091:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1980,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1978,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "45108:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45108:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45091:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1981,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "45134:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1982,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "45142:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "45134:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "45152:31:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1985,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "45170:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1986,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1977,
																	"src": "45176:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1984,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1916,
																"src": "45153:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45153:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "45134:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1996,
												"nodeType": "IfStatement",
												"src": "45130:129:0",
												"trueBody": {
													"id": 1995,
													"nodeType": "Block",
													"src": "45185:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1991,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1977,
																		"src": "45235:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1992,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1963,
																		"src": "45243:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1990,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "45206:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45206:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1994,
															"nodeType": "RevertStatement",
															"src": "45199:49:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1998,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "45291:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1999,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "45297:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2000,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "45301:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2001,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "45306:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2002,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "45314:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1997,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2356,
														"src": "45268:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45268:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "45268:51:0"
											}
										]
									},
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "44831:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "44906:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44945:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "44937:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44967:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "44959:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "44996:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "44979:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1966,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "44979:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1967,
													"nodeType": "ArrayTypeName",
													"src": "44979:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "45026:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "45009:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1969,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "45009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1970,
													"nodeType": "ArrayTypeName",
													"src": "45009:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45055:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "45042:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45042:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44927:138:0"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45081:0:0"
									},
									"scope": 2744,
									"src": "44897:429:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "46134:1174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2020,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "46148:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46152:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "46148:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2022,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "46162:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46169:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "46162:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46148:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2033,
												"nodeType": "IfStatement",
												"src": "46144:117:0",
												"trueBody": {
													"id": 2032,
													"nodeType": "Block",
													"src": "46177:84:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2026,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "46224:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "46228:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "46224:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2028,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2017,
																			"src": "46236:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "46243:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "46236:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2025,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "46198:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46198:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2031,
															"nodeType": "RevertStatement",
															"src": "46191:59:0"
														}
													]
												}
											},
											{
												"assignments": [
													2035
												],
												"declarations": [
													{
														"constant": false,
														"id": 2035,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "46279:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "46271:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2034,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46271:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2038,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2036,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "46290:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46290:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46271:31:0"
											},
											{
												"body": {
													"id": 2119,
													"nodeType": "Block",
													"src": "46354:650:0",
													"statements": [
														{
															"assignments": [
																2051
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2051,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "46376:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2119,
																	"src": "46368:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2050,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "46368:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2056,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2054,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2040,
																		"src": "46404:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2052,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "46381:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "46385:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1559,
																	"src": "46381:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46381:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "46368:38:0"
														},
														{
															"assignments": [
																2058
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2058,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "46428:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2119,
																	"src": "46420:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2057,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "46420:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2063,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2061,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2040,
																		"src": "46462:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2059,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "46436:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "46443:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1559,
																	"src": "46436:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46436:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "46420:44:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2064,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "46483:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "46499:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "46491:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2065,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "46491:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46491:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "46483:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2102,
															"nodeType": "IfStatement",
															"src": "46479:420:0",
															"trueBody": {
																"id": 2101,
																"nodeType": "Block",
																"src": "46503:396:0",
																"statements": [
																	{
																		"assignments": [
																			2071
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2071,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "46529:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2101,
																				"src": "46521:19:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2070,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "46521:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2077,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 2072,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1735,
																					"src": "46543:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 2074,
																				"indexExpression": {
																					"id": 2073,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2051,
																					"src": "46553:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "46543:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2076,
																			"indexExpression": {
																				"id": 2075,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2009,
																				"src": "46557:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "46543:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "46521:41:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2078,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2071,
																				"src": "46584:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2079,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2058,
																				"src": "46598:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46584:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2089,
																		"nodeType": "IfStatement",
																		"src": "46580:129:0",
																		"trueBody": {
																			"id": 2088,
																			"nodeType": "Block",
																			"src": "46605:104:0",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 2082,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2009,
																								"src": "46661:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2083,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2071,
																								"src": "46667:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2084,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2058,
																								"src": "46680:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2085,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2051,
																								"src": "46687:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2081,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1674,
																							"src": "46634:26:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																								"typeString": "function (address,uint256,uint256,uint256) pure returns (error)"
																							}
																						},
																						"id": 2086,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "46634:56:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_error",
																							"typeString": "error"
																						}
																					},
																					"id": 2087,
																					"nodeType": "RevertStatement",
																					"src": "46627:63:0"
																				}
																			]
																		}
																	},
																	{
																		"id": 2100,
																		"nodeType": "UncheckedBlock",
																		"src": "46726:159:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2098,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2090,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1735,
																								"src": "46825:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 2093,
																							"indexExpression": {
																								"id": 2091,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2051,
																								"src": "46835:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "46825:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2094,
																						"indexExpression": {
																							"id": 2092,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2009,
																							"src": "46839:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "46825:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2097,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2095,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2071,
																							"src": "46847:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 2096,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2058,
																							"src": "46861:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "46847:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "46825:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2099,
																				"nodeType": "ExpressionStatement",
																				"src": "46825:41:0"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2103,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "46917:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "46931:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "46923:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2104,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "46923:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46923:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "46917:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2118,
															"nodeType": "IfStatement",
															"src": "46913:81:0",
															"trueBody": {
																"id": 2117,
																"nodeType": "Block",
																"src": "46935:59:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 2109,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "46953:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 2112,
																					"indexExpression": {
																						"id": 2110,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2051,
																						"src": "46963:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "46953:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2113,
																				"indexExpression": {
																					"id": 2111,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2011,
																					"src": "46967:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "46953:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2114,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2058,
																				"src": "46974:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46953:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2116,
																		"nodeType": "ExpressionStatement",
																		"src": "46953:26:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2043,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2040,
														"src": "46333:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2044,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "46337:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46341:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "46337:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46333:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2120,
												"initializationExpression": {
													"assignments": [
														2040
													],
													"declarations": [
														{
															"constant": false,
															"id": 2040,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "46326:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2120,
															"src": "46318:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2039,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "46318:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2042,
													"initialValue": {
														"hexValue": "30",
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46330:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "46318:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "46349:3:0",
														"subExpression": {
															"id": 2047,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "46351:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2049,
													"nodeType": "ExpressionStatement",
													"src": "46349:3:0"
												},
												"nodeType": "ForStatement",
												"src": "46313:691:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2121,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "47018:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47022:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "47018:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47032:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "47018:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2156,
													"nodeType": "Block",
													"src": "47226:76:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2149,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2035,
																		"src": "47259:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2150,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2009,
																		"src": "47269:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2151,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "47275:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2152,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "47279:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2153,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "47284:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 2148,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "47245:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47245:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2155,
															"nodeType": "EmitStatement",
															"src": "47240:51:0"
														}
													]
												},
												"id": 2157,
												"nodeType": "IfStatement",
												"src": "47014:288:0",
												"trueBody": {
													"id": 2147,
													"nodeType": "Block",
													"src": "47035:185:0",
													"statements": [
														{
															"assignments": [
																2126
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2126,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "47057:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2147,
																	"src": "47049:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2125,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "47049:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2131,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "47085:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2127,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "47062:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "47066:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1559,
																	"src": "47062:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47062:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "47049:38:0"
														},
														{
															"assignments": [
																2133
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2133,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "47109:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2147,
																	"src": "47101:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2132,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "47101:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2138,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "47143:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2134,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "47117:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "47124:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1559,
																	"src": "47117:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47117:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "47101:44:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2140,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2035,
																		"src": "47179:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2141,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2009,
																		"src": "47189:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2142,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "47195:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2143,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "47199:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2144,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "47203:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2139,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "47164:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47164:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2146,
															"nodeType": "EmitStatement",
															"src": "47159:50:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "45332:690:0",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "46036:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "46052:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "46044:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46066:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "46058:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "46087:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "46070:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2012,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "46070:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2013,
													"nodeType": "ArrayTypeName",
													"src": "46070:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "46109:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "46092:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2015,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "46092:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2016,
													"nodeType": "ArrayTypeName",
													"src": "46092:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46043:73:0"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46134:0:0"
									},
									"scope": 2744,
									"src": "46027:1281:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "48078:499:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2176,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "48096:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2177,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "48102:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2178,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "48106:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2179,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "48111:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 2175,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "48088:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48088:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "48088:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2182,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2164,
														"src": "48132:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48146:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48138:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48138:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48138:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48132:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2233,
												"nodeType": "IfStatement",
												"src": "48128:443:0",
												"trueBody": {
													"id": 2232,
													"nodeType": "Block",
													"src": "48150:421:0",
													"statements": [
														{
															"assignments": [
																2189
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2189,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "48172:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2232,
																	"src": "48164:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2188,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "48164:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2192,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2190,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "48183:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48183:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "48164:31:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2193,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "48213:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "48217:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "48213:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48227:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "48213:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2230,
																"nodeType": "Block",
																"src": "48454:107:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2222,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2189,
																					"src": "48508:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2223,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2162,
																					"src": "48518:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2224,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2164,
																					"src": "48524:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2225,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2167,
																					"src": "48528:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 2226,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2170,
																					"src": "48533:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 2227,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2172,
																					"src": "48541:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2221,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2727,
																				"src": "48472:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "48472:74:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2229,
																		"nodeType": "ExpressionStatement",
																		"src": "48472:74:0"
																	}
																]
															},
															"id": 2231,
															"nodeType": "IfStatement",
															"src": "48209:352:0",
															"trueBody": {
																"id": 2220,
																"nodeType": "Block",
																"src": "48230:218:0",
																"statements": [
																	{
																		"assignments": [
																			2198
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2198,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "48256:2:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2220,
																				"src": "48248:10:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2197,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "48248:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2203,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2201,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "48284:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2199,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2167,
																					"src": "48261:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "48265:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1559,
																				"src": "48261:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "48261:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "48248:38:0"
																	},
																	{
																		"assignments": [
																			2205
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2205,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "48312:5:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2220,
																				"src": "48304:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2204,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "48304:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2210,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2208,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "48346:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2206,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2170,
																					"src": "48320:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "48327:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1559,
																				"src": "48320:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "48320:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "48304:44:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2212,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2189,
																					"src": "48397:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2213,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2162,
																					"src": "48407:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2214,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2164,
																					"src": "48413:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2215,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2198,
																					"src": "48417:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2216,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2205,
																					"src": "48421:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2217,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2172,
																					"src": "48428:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2211,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2657,
																				"src": "48366:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 2218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "48366:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2219,
																		"nodeType": "ExpressionStatement",
																		"src": "48366:67:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "47314:568:0",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "47896:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47940:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "47932:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47962:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "47954:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "47991:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "47974:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2165,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "47974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2166,
													"nodeType": "ArrayTypeName",
													"src": "47974:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "48021:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "48004:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2168,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "48004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2169,
													"nodeType": "ArrayTypeName",
													"src": "48004:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "48050:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "48037:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "48037:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47922:138:0"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48078:0:0"
									},
									"scope": 2744,
									"src": "47887:690:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2300,
										"nodeType": "Block",
										"src": "49142:355:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2249,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "49156:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49170:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49162:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2250,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49162:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49162:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49156:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2263,
												"nodeType": "IfStatement",
												"src": "49152:88:0",
												"trueBody": {
													"id": 2262,
													"nodeType": "Block",
													"src": "49174:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49226:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "49218:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2256,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "49218:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49218:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2255,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "49195:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49195:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2261,
															"nodeType": "RevertStatement",
															"src": "49188:41:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2264,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "49253:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49269:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2265,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49261:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49261:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49253:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2278,
												"nodeType": "IfStatement",
												"src": "49249:88:0",
												"trueBody": {
													"id": 2277,
													"nodeType": "Block",
													"src": "49273:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49323:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "49315:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2271,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "49315:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49315:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2270,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "49294:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49294:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2276,
															"nodeType": "RevertStatement",
															"src": "49287:39:0"
														}
													]
												}
											},
											{
												"assignments": [
													2283,
													2286
												],
												"declarations": [
													{
														"constant": false,
														"id": 2283,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "49364:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2300,
														"src": "49347:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2281,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "49347:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2282,
															"nodeType": "ArrayTypeName",
															"src": "49347:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2286,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "49386:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2300,
														"src": "49369:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2284,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "49369:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2285,
															"nodeType": "ArrayTypeName",
															"src": "49369:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2291,
												"initialValue": {
													"arguments": [
														{
															"id": 2288,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "49415:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2289,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "49419:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2287,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "49396:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49396:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49346:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2293,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "49462:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2294,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "49468:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2295,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "49472:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2296,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2286,
															"src": "49477:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2297,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "49485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2292,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "49435:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49435:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2299,
												"nodeType": "ExpressionStatement",
												"src": "49435:55:0"
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "48583:446:0",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 2301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "49043:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49069:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "49061:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49083:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "49075:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "49095:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "49087:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "49107:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "49099:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "49127:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "49114:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49114:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49060:72:0"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49142:0:0"
									},
									"scope": 2744,
									"src": "49034:463:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2355,
										"nodeType": "Block",
										"src": "50077:266:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2317,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "50091:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50105:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2318,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50097:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50097:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50091:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2331,
												"nodeType": "IfStatement",
												"src": "50087:88:0",
												"trueBody": {
													"id": 2330,
													"nodeType": "Block",
													"src": "50109:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "50161:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "50153:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2324,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "50153:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50153:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2323,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "50130:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50130:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2329,
															"nodeType": "RevertStatement",
															"src": "50123:41:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2332,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "50188:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50204:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50196:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2333,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50196:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50196:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50188:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2346,
												"nodeType": "IfStatement",
												"src": "50184:88:0",
												"trueBody": {
													"id": 2345,
													"nodeType": "Block",
													"src": "50208:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "50258:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "50250:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2339,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "50250:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50250:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2338,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "50229:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50229:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2344,
															"nodeType": "RevertStatement",
															"src": "50222:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2348,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "50308:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2349,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2306,
															"src": "50314:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2350,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2309,
															"src": "50318:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2351,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "50323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2352,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "50331:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2347,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "50281:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50281:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2354,
												"nodeType": "ExpressionStatement",
												"src": "50281:55:0"
											}
										]
									},
									"documentation": {
										"id": 2302,
										"nodeType": "StructuredDocumentation",
										"src": "49503:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 2356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "49907:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49947:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "49939:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49969:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "49961:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "49998:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "49981:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2307,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "49981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2308,
													"nodeType": "ArrayTypeName",
													"src": "49981:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "50028:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "50011:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2310,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "50011:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2311,
													"nodeType": "ArrayTypeName",
													"src": "50011:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "50057:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "50044:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "50044:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49929:138:0"
									},
									"returnParameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50077:0:0"
									},
									"scope": 2744,
									"src": "49898:445:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2366,
										"nodeType": "Block",
										"src": "51221:30:0",
										"statements": [
											{
												"expression": {
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2362,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "51231:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2363,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2359,
														"src": "51238:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "51231:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2365,
												"nodeType": "ExpressionStatement",
												"src": "51231:13:0"
											}
										]
									},
									"documentation": {
										"id": 2357,
										"nodeType": "StructuredDocumentation",
										"src": "50349:811:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 2367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "51174:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "51196:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "51182:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "51182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51181:22:0"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51221:0:0"
									},
									"scope": 2744,
									"src": "51165:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2418,
										"nodeType": "Block",
										"src": "51711:264:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2379,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "51725:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51739:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2380,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51731:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51731:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51725:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2393,
												"nodeType": "IfStatement",
												"src": "51721:88:0",
												"trueBody": {
													"id": 2392,
													"nodeType": "Block",
													"src": "51743:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51795:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "51787:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2386,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "51787:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "51787:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2385,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "51764:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51764:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2391,
															"nodeType": "RevertStatement",
															"src": "51757:41:0"
														}
													]
												}
											},
											{
												"assignments": [
													2398,
													2401
												],
												"declarations": [
													{
														"constant": false,
														"id": 2398,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "51836:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2418,
														"src": "51819:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2396,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "51819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2397,
															"nodeType": "ArrayTypeName",
															"src": "51819:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2401,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "51858:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2418,
														"src": "51841:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2399,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "51841:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2400,
															"nodeType": "ArrayTypeName",
															"src": "51841:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2406,
												"initialValue": {
													"arguments": [
														{
															"id": 2403,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "51887:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2404,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "51891:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2402,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "51868:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51868:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51818:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51942:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "51934:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "51934:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51934:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2412,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "51946:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2413,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "51950:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2414,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "51955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2415,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "51963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2407,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "51907:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51907:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "51907:61:0"
											}
										]
									},
									"documentation": {
										"id": 2368,
										"nodeType": "StructuredDocumentation",
										"src": "51257:367:0",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 2419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "51638:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51652:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "51644:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "51664:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "51656:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51676:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "51668:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "51696:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "51683:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "51683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51643:58:0"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51711:0:0"
									},
									"scope": 2744,
									"src": "51629:346:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2459,
										"nodeType": "Block",
										"src": "52513:175:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2433,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2422,
														"src": "52527:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52541:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "52533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2434,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "52533:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52533:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "52527:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2447,
												"nodeType": "IfStatement",
												"src": "52523:88:0",
												"trueBody": {
													"id": 2446,
													"nodeType": "Block",
													"src": "52545:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2442,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52597:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "52589:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2440,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "52589:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52589:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2439,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "52566:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52566:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2445,
															"nodeType": "RevertStatement",
															"src": "52559:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52655:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "52647:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2449,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "52647:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52647:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2422,
															"src": "52659:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2454,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2425,
															"src": "52663:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2455,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2428,
															"src": "52668:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2456,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2430,
															"src": "52676:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2448,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "52620:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52620:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2458,
												"nodeType": "ExpressionStatement",
												"src": "52620:61:0"
											}
										]
									},
									"documentation": {
										"id": 2420,
										"nodeType": "StructuredDocumentation",
										"src": "51981:420:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 2460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "52415:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52434:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "52426:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "52455:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "52438:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2423,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "52438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2424,
													"nodeType": "ArrayTypeName",
													"src": "52438:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "52477:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "52460:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2426,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "52460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2427,
													"nodeType": "ArrayTypeName",
													"src": "52460:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52498:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "52485:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2429,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52485:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52425:78:0"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52513:0:0"
									},
									"scope": 2744,
									"src": "52406:282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "53047:264:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2470,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2463,
														"src": "53061:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53077:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53069:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2471,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53069:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53069:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53061:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2484,
												"nodeType": "IfStatement",
												"src": "53057:88:0",
												"trueBody": {
													"id": 2483,
													"nodeType": "Block",
													"src": "53081:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "53131:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "53123:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2477,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "53123:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53123:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2476,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "53102:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53102:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2482,
															"nodeType": "RevertStatement",
															"src": "53095:39:0"
														}
													]
												}
											},
											{
												"assignments": [
													2489,
													2492
												],
												"declarations": [
													{
														"constant": false,
														"id": 2489,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "53172:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2509,
														"src": "53155:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2487,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "53155:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2488,
															"nodeType": "ArrayTypeName",
															"src": "53155:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2492,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "53194:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2509,
														"src": "53177:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2490,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "53177:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2491,
															"nodeType": "ArrayTypeName",
															"src": "53177:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2497,
												"initialValue": {
													"arguments": [
														{
															"id": 2494,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "53223:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2495,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "53227:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2493,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "53204:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53204:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53154:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2499,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "53270:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53284:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53276:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53276:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53276:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2504,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "53288:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2505,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "53293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53301:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2498,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "53243:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53243:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2508,
												"nodeType": "ExpressionStatement",
												"src": "53243:61:0"
											}
										]
									},
									"documentation": {
										"id": 2461,
										"nodeType": "StructuredDocumentation",
										"src": "52694:283:0",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "52991:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "53005:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "52997:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "53019:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "53011:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "53031:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "53023:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52996:41:0"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53047:0:0"
									},
									"scope": 2744,
									"src": "52982:329:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2548,
										"nodeType": "Block",
										"src": "53757:175:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2522,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2513,
														"src": "53771:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53787:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53779:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2523,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53779:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53779:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53771:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2536,
												"nodeType": "IfStatement",
												"src": "53767:88:0",
												"trueBody": {
													"id": 2535,
													"nodeType": "Block",
													"src": "53791:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "53841:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "53833:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2529,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "53833:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53833:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2528,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "53812:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53812:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2534,
															"nodeType": "RevertStatement",
															"src": "53805:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2538,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "53891:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53905:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53897:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2539,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53897:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53897:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2543,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2516,
															"src": "53909:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2544,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "53914:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53922:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2537,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "53864:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53864:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2547,
												"nodeType": "ExpressionStatement",
												"src": "53864:61:0"
											}
										]
									},
									"documentation": {
										"id": 2511,
										"nodeType": "StructuredDocumentation",
										"src": "53317:345:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 2549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "53676:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "53695:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "53687:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "53718:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "53701:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2514,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "53701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2515,
													"nodeType": "ArrayTypeName",
													"src": "53701:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "53740:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "53723:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2517,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "53723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2518,
													"nodeType": "ArrayTypeName",
													"src": "53723:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53686:61:0"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53757:0:0"
									},
									"scope": 2744,
									"src": "53667:265:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2588,
										"nodeType": "Block",
										"src": "54244:222:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2559,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "54258:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2560,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54270:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54270:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54258:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2573,
												"nodeType": "IfStatement",
												"src": "54254:94:0",
												"trueBody": {
													"id": 2572,
													"nodeType": "Block",
													"src": "54282:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54334:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "54326:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2566,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "54326:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54326:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2565,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "54303:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54303:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2571,
															"nodeType": "RevertStatement",
															"src": "54296:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2574,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "54357:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2577,
															"indexExpression": {
																"id": 2575,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "54376:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "54357:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2578,
														"indexExpression": {
															"id": 2576,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2554,
															"src": "54383:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54357:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2579,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "54395:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "54357:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2581,
												"nodeType": "ExpressionStatement",
												"src": "54357:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2583,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2552,
															"src": "54433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2584,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2554,
															"src": "54440:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2585,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2556,
															"src": "54450:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2582,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "54418:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54418:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2587,
												"nodeType": "EmitStatement",
												"src": "54413:46:0"
											}
										]
									},
									"documentation": {
										"id": 2550,
										"nodeType": "StructuredDocumentation",
										"src": "53938:208:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 2589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "54160:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "54179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "54202:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "54194:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "54217:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "54212:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54212:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54178:48:0"
									},
									"returnParameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54244:0:0"
									},
									"scope": 2744,
									"src": "54151:315:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "54836:782:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2605,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "54850:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54853:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "54850:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54858:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54850:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54867:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54850:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2655,
												"nodeType": "IfStatement",
												"src": "54846:766:0",
												"trueBody": {
													"id": 2654,
													"nodeType": "Block",
													"src": "54870:742:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2634,
																		"nodeType": "Block",
																		"src": "54986:206:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2623,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2621,
																						"src": "55008:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2624,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 170,
																								"src": "55020:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$170_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 2625,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "55037:17:0",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 151,
																							"src": "55020:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2626,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "55055:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "55020:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "55008:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2633,
																				"nodeType": "IfStatement",
																				"src": "55004:174:0",
																				"trueBody": {
																					"id": 2632,
																					"nodeType": "Block",
																					"src": "55065:113:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2629,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2596,
																										"src": "55156:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2628,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1684,
																									"src": "55133:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 2630,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55133:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 2631,
																							"nodeType": "RevertStatement",
																							"src": "55126:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2635,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2622,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2621,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "54976:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2635,
																				"src": "54969:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2620,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "54969:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "54968:17:0"
																	},
																	"src": "54960:232:0"
																},
																{
																	"block": {
																		"id": 2651,
																		"nodeType": "Block",
																		"src": "55221:381:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2639,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2637,
																							"src": "55243:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2640,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "55250:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "55243:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "55260:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "55243:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2649,
																					"nodeType": "Block",
																					"src": "55398:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "55484:86:0",
																								"nodeType": "YulBlock",
																								"src": "55484:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "55521:2:0",
																															"nodeType": "YulLiteral",
																															"src": "55521:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "55525:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "55525:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "55517:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "55517:3:0"
																													},
																													"nativeSrc": "55517:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "55517:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "55540:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "55540:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "55534:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "55534:5:0"
																													},
																													"nativeSrc": "55534:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "55534:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "55510:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "55510:6:0"
																											},
																											"nativeSrc": "55510:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "55510:38:0"
																										},
																										"nativeSrc": "55510:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "55510:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 2637,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "55525:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2637,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "55540:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2648,
																							"nodeType": "InlineAssembly",
																							"src": "55475:95:0"
																						}
																					]
																				},
																				"id": 2650,
																				"nodeType": "IfStatement",
																				"src": "55239:349:0",
																				"trueBody": {
																					"id": 2647,
																					"nodeType": "Block",
																					"src": "55263:129:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2644,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2596,
																										"src": "55370:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2643,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1684,
																									"src": "55347:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 2645,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55347:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 2646,
																							"nodeType": "RevertStatement",
																							"src": "55340:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2652,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2638,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2637,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "55213:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2652,
																				"src": "55200:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2636,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "55200:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "55199:21:0"
																	},
																	"src": "55193:409:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 2614,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2592,
																		"src": "54927:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2615,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2594,
																		"src": "54937:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2616,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2598,
																		"src": "54943:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2617,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2600,
																		"src": "54947:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2618,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2602,
																		"src": "54954:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2611,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2596,
																				"src": "54905:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2610,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 170,
																			"src": "54888:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$170_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54888:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$170",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54909:17:0",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 151,
																	"src": "54888:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54888:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2653,
															"nodeType": "TryStatement",
															"src": "54884:718:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2590,
										"nodeType": "StructuredDocumentation",
										"src": "54472:167:0",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "54653:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "54701:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "54693:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "54727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "54719:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54749:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "54741:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "54769:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "54761:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54789:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "54781:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "54817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "54804:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "54804:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54683:144:0"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54836:0:0"
									},
									"scope": 2744,
									"src": "54644:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2726,
										"nodeType": "Block",
										"src": "56023:824:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2675,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2664,
																"src": "56037:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56040:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "56037:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "56045:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "56037:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56054:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56037:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2725,
												"nodeType": "IfStatement",
												"src": "56033:808:0",
												"trueBody": {
													"id": 2724,
													"nodeType": "Block",
													"src": "56057:784:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2704,
																		"nodeType": "Block",
																		"src": "56210:211:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2697,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2693,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2691,
																						"src": "56232:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2694,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 170,
																								"src": "56244:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$170_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 2695,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "56261:22:0",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 169,
																							"src": "56244:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2696,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "56284:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "56244:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "56232:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2703,
																				"nodeType": "IfStatement",
																				"src": "56228:179:0",
																				"trueBody": {
																					"id": 2702,
																					"nodeType": "Block",
																					"src": "56294:113:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2699,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2664,
																										"src": "56385:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2698,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1684,
																									"src": "56362:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 2700,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "56362:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 2701,
																							"nodeType": "RevertStatement",
																							"src": "56355:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2705,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2692,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2691,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "56187:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2705,
																				"src": "56180:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2690,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "56180:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "56162:47:0"
																	},
																	"src": "56154:267:0"
																},
																{
																	"block": {
																		"id": 2721,
																		"nodeType": "Block",
																		"src": "56450:381:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2709,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2707,
																							"src": "56472:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2710,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "56479:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "56472:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2711,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "56489:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "56472:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2719,
																					"nodeType": "Block",
																					"src": "56627:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "56713:86:0",
																								"nodeType": "YulBlock",
																								"src": "56713:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "56750:2:0",
																															"nodeType": "YulLiteral",
																															"src": "56750:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "56754:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "56754:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "56746:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "56746:3:0"
																													},
																													"nativeSrc": "56746:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "56746:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "56769:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "56769:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "56763:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "56763:5:0"
																													},
																													"nativeSrc": "56763:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "56763:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "56739:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "56739:6:0"
																											},
																											"nativeSrc": "56739:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "56739:38:0"
																										},
																										"nativeSrc": "56739:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "56739:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 2707,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56754:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2707,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56769:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2718,
																							"nodeType": "InlineAssembly",
																							"src": "56704:95:0"
																						}
																					]
																				},
																				"id": 2720,
																				"nodeType": "IfStatement",
																				"src": "56468:349:0",
																				"trueBody": {
																					"id": 2717,
																					"nodeType": "Block",
																					"src": "56492:129:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2714,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2664,
																										"src": "56599:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2713,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1684,
																									"src": "56576:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 2715,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "56576:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 2716,
																							"nodeType": "RevertStatement",
																							"src": "56569:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2722,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2708,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2707,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "56442:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2722,
																				"src": "56429:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2706,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "56429:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "56428:21:0"
																	},
																	"src": "56422:409:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 2684,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2660,
																		"src": "56119:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2685,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2662,
																		"src": "56129:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2686,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2667,
																		"src": "56135:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2687,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2670,
																		"src": "56140:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2688,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2672,
																		"src": "56148:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2681,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2664,
																				"src": "56092:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2680,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 170,
																			"src": "56075:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$170_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56075:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$170",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56096:22:0",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 169,
																	"src": "56075:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56075:78:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2723,
															"nodeType": "TryStatement",
															"src": "56071:760:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2658,
										"nodeType": "StructuredDocumentation",
										"src": "55624:177:0",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 2727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "55815:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "55868:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "55860:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "55894:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "55886:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "55916:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "55908:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "55945:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "55928:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2665,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "55928:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2666,
													"nodeType": "ArrayTypeName",
													"src": "55928:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "55975:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "55958:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2668,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "55958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2669,
													"nodeType": "ArrayTypeName",
													"src": "55958:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "56004:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "55991:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55991:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55850:164:0"
									},
									"returnParameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56023:0:0"
									},
									"scope": 2744,
									"src": "55806:1041:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2742,
										"nodeType": "Block",
										"src": "57121:691:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "57183:623:0",
													"nodeType": "YulBlock",
													"src": "57183:623:0",
													"statements": [
														{
															"nativeSrc": "57241:21:0",
															"nodeType": "YulAssignment",
															"src": "57241:21:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "57257:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57257:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "57251:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "57251:5:0"
																},
																"nativeSrc": "57251:11:0",
																"nodeType": "YulFunctionCall",
																"src": "57251:11:0"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "57241:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57241:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "57319:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "57319:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "57327:1:0",
																		"nodeType": "YulLiteral",
																		"src": "57327:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "57312:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57312:6:0"
																},
																"nativeSrc": "57312:17:0",
																"nodeType": "YulFunctionCall",
																"src": "57312:17:0"
															},
															"nativeSrc": "57312:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "57312:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "57450:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "57450:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "57458:4:0",
																				"nodeType": "YulLiteral",
																				"src": "57458:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "57446:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "57446:3:0"
																		},
																		"nativeSrc": "57446:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "57446:17:0"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "57465:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "57465:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "57439:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57439:6:0"
																},
																"nativeSrc": "57439:35:0",
																"nodeType": "YulFunctionCall",
																"src": "57439:35:0"
															},
															"nativeSrc": "57439:35:0",
															"nodeType": "YulExpressionStatement",
															"src": "57439:35:0"
														},
														{
															"nativeSrc": "57565:27:0",
															"nodeType": "YulAssignment",
															"src": "57565:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "57579:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "57579:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "57587:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57587:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "57575:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "57575:3:0"
																},
																"nativeSrc": "57575:17:0",
																"nodeType": "YulFunctionCall",
																"src": "57575:17:0"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "57565:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57565:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "57612:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "57612:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "57620:1:0",
																		"nodeType": "YulLiteral",
																		"src": "57620:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "57605:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57605:6:0"
																},
																"nativeSrc": "57605:17:0",
																"nodeType": "YulFunctionCall",
																"src": "57605:17:0"
															},
															"nativeSrc": "57605:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "57605:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "57646:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "57646:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "57654:4:0",
																				"nodeType": "YulLiteral",
																				"src": "57654:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "57642:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "57642:3:0"
																		},
																		"nativeSrc": "57642:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "57642:17:0"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "57661:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "57661:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "57635:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57635:6:0"
																},
																"nativeSrc": "57635:35:0",
																"nodeType": "YulFunctionCall",
																"src": "57635:35:0"
															},
															"nativeSrc": "57635:35:0",
															"nodeType": "YulExpressionStatement",
															"src": "57635:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "57772:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57772:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "57782:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "57782:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "57790:4:0",
																				"nodeType": "YulLiteral",
																				"src": "57790:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "57778:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "57778:3:0"
																		},
																		"nativeSrc": "57778:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "57778:17:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "57765:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57765:6:0"
																},
																"nativeSrc": "57765:31:0",
																"nodeType": "YulFunctionCall",
																"src": "57765:31:0"
															},
															"nativeSrc": "57765:31:0",
															"nodeType": "YulExpressionStatement",
															"src": "57765:31:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2736,
														"isOffset": false,
														"isSlot": false,
														"src": "57241:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2736,
														"isOffset": false,
														"isSlot": false,
														"src": "57319:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2736,
														"isOffset": false,
														"isSlot": false,
														"src": "57450:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2736,
														"isOffset": false,
														"isSlot": false,
														"src": "57579:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2739,
														"isOffset": false,
														"isSlot": false,
														"src": "57565:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2739,
														"isOffset": false,
														"isSlot": false,
														"src": "57612:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2739,
														"isOffset": false,
														"isSlot": false,
														"src": "57646:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2739,
														"isOffset": false,
														"isSlot": false,
														"src": "57782:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2730,
														"isOffset": false,
														"isSlot": false,
														"src": "57465:8:0",
														"valueSize": 1
													},
													{
														"declaration": 2732,
														"isOffset": false,
														"isSlot": false,
														"src": "57661:8:0",
														"valueSize": 1
													}
												],
												"id": 2741,
												"nodeType": "InlineAssembly",
												"src": "57174:632:0"
											}
										]
									},
									"documentation": {
										"id": 2728,
										"nodeType": "StructuredDocumentation",
										"src": "56853:105:0",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 2743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "56972:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "57008:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "57000:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "57034:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "57026:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56990:58:0"
									},
									"returnParameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "57088:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "57071:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2734,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "57071:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2735,
													"nodeType": "ArrayTypeName",
													"src": "57071:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "57113:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "57096:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2737,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "57096:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2738,
													"nodeType": "ArrayTypeName",
													"src": "57096:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57070:50:0"
									},
									"scope": 2744,
									"src": "56963:849:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2929,
							"src": "41610:16204:0",
							"usedErrors": [
								1674,
								1679,
								1684,
								1691,
								1696,
								1701,
								1708
							],
							"usedEvents": [
								28,
								43,
								52,
								59
							]
						},
						{
							"id": 2745,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "57940:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2747,
										"name": "Context",
										"nameLocations": [
											"58484:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "58484:7:0"
									},
									"id": 2748,
									"nodeType": "InheritanceSpecifier",
									"src": "58484:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2746,
								"nodeType": "StructuredDocumentation",
								"src": "57967:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2889,
							"linearizedBaseContracts": [
								2889,
								212
							],
							"name": "Ownable",
							"nameLocation": "58473:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2750,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "58514:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2889,
									"src": "58498:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2749,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "58498:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2751,
										"nodeType": "StructuredDocumentation",
										"src": "58527:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 2755,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "58623:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "58658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "58650:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58649:17:0"
									},
									"src": "58617:50:0"
								},
								{
									"documentation": {
										"id": 2756,
										"nodeType": "StructuredDocumentation",
										"src": "58673:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 2760,
									"name": "OwnableInvalidOwner",
									"nameLocation": "58766:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "58794:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "58786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58785:15:0"
									},
									"src": "58760:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 2766,
									"name": "OwnershipTransferred",
									"nameLocation": "58813:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "58850:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "58834:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2764,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "58881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "58865:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58833:57:0"
									},
									"src": "58807:84:0"
								},
								{
									"body": {
										"id": 2791,
										"nodeType": "Block",
										"src": "59051:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2772,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2769,
														"src": "59065:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "59089:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "59081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2773,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "59081:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59081:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "59065:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2786,
												"nodeType": "IfStatement",
												"src": "59061:95:0",
												"trueBody": {
													"id": 2785,
													"nodeType": "Block",
													"src": "59093:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "59142:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "59134:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2779,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "59134:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "59134:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2778,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2760,
																	"src": "59114:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59114:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2784,
															"nodeType": "RevertStatement",
															"src": "59107:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2788,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2769,
															"src": "59184:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2787,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "59165:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59165:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "59165:32:0"
											}
										]
									},
									"documentation": {
										"id": 2767,
										"nodeType": "StructuredDocumentation",
										"src": "58897:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 2792,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "59037:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "59029:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59028:22:0"
									},
									"returnParameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59051:0:0"
									},
									"scope": 2889,
									"src": "59017:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2799,
										"nodeType": "Block",
										"src": "59313:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2795,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2826,
														"src": "59323:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59323:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2797,
												"nodeType": "ExpressionStatement",
												"src": "59323:13:0"
											},
											{
												"id": 2798,
												"nodeType": "PlaceholderStatement",
												"src": "59346:1:0"
											}
										]
									},
									"documentation": {
										"id": 2793,
										"nodeType": "StructuredDocumentation",
										"src": "59210:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2800,
									"name": "onlyOwner",
									"nameLocation": "59301:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59310:2:0"
									},
									"src": "59292:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "59485:30:0",
										"statements": [
											{
												"expression": {
													"id": 2806,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2750,
													"src": "59502:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2805,
												"id": 2807,
												"nodeType": "Return",
												"src": "59495:13:0"
											}
										]
									},
									"documentation": {
										"id": 2801,
										"nodeType": "StructuredDocumentation",
										"src": "59360:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "59439:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59444:2:0"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "59476:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59475:9:0"
									},
									"scope": 2889,
									"src": "59430:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2825,
										"nodeType": "Block",
										"src": "59633:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2813,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "59647:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59647:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2815,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "59658:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59658:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "59647:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2824,
												"nodeType": "IfStatement",
												"src": "59643:101:0",
												"trueBody": {
													"id": 2823,
													"nodeType": "Block",
													"src": "59672:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2819,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "59720:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "59720:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2818,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2755,
																	"src": "59693:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59693:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2822,
															"nodeType": "RevertStatement",
															"src": "59686:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "59521:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 2826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "59597:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59608:2:0"
									},
									"returnParameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59633:0:0"
									},
									"scope": 2889,
									"src": "59588:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "60139:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "60176:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60168:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2833,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60168:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60168:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2832,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "60149:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60149:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2838,
												"nodeType": "ExpressionStatement",
												"src": "60149:30:0"
											}
										]
									},
									"documentation": {
										"id": 2827,
										"nodeType": "StructuredDocumentation",
										"src": "59756:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2830,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2829,
												"name": "onlyOwner",
												"nameLocations": [
													"60129:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2800,
												"src": "60129:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60129:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "60094:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60111:2:0"
									},
									"returnParameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60139:0:0"
									},
									"scope": 2889,
									"src": "60085:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2867,
										"nodeType": "Block",
										"src": "60405:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2848,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2843,
														"src": "60419:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60439:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "60431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2849,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "60431:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60431:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60419:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2862,
												"nodeType": "IfStatement",
												"src": "60415:91:0",
												"trueBody": {
													"id": 2861,
													"nodeType": "Block",
													"src": "60443:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "60492:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "60484:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2855,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "60484:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60484:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2854,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2760,
																	"src": "60464:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60464:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2860,
															"nodeType": "RevertStatement",
															"src": "60457:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2864,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2843,
															"src": "60534:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2863,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "60515:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60515:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2866,
												"nodeType": "ExpressionStatement",
												"src": "60515:28:0"
											}
										]
									},
									"documentation": {
										"id": 2841,
										"nodeType": "StructuredDocumentation",
										"src": "60192:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2868,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2846,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2845,
												"name": "onlyOwner",
												"nameLocations": [
													"60395:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2800,
												"src": "60395:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60395:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "60344:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "60370:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "60362:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60361:18:0"
									},
									"returnParameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60405:0:0"
									},
									"scope": 2889,
									"src": "60335:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2887,
										"nodeType": "Block",
										"src": "60767:124:0",
										"statements": [
											{
												"assignments": [
													2875
												],
												"declarations": [
													{
														"constant": false,
														"id": 2875,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "60785:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2887,
														"src": "60777:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2874,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "60777:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2877,
												"initialValue": {
													"id": 2876,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2750,
													"src": "60796:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60777:25:0"
											},
											{
												"expression": {
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2878,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "60812:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2879,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "60821:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60812:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2881,
												"nodeType": "ExpressionStatement",
												"src": "60812:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2883,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2875,
															"src": "60865:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2884,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2871,
															"src": "60875:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2882,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2766,
														"src": "60844:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60844:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2886,
												"nodeType": "EmitStatement",
												"src": "60839:45:0"
											}
										]
									},
									"documentation": {
										"id": 2869,
										"nodeType": "StructuredDocumentation",
										"src": "60556:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "60713:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "60740:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "60732:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60731:18:0"
									},
									"returnParameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60767:0:0"
									},
									"scope": 2889,
									"src": "60704:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2929,
							"src": "58455:2438:0",
							"usedErrors": [
								2755,
								2760
							],
							"usedEvents": [
								2766
							]
						},
						{
							"id": 2890,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "60933:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2891,
										"name": "ERC1155",
										"nameLocations": [
											"60996:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2744,
										"src": "60996:7:0"
									},
									"id": 2892,
									"nodeType": "InheritanceSpecifier",
									"src": "60996:7:0"
								},
								{
									"baseName": {
										"id": 2893,
										"name": "Ownable",
										"nameLocations": [
											"61005:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2889,
										"src": "61005:7:0"
									},
									"id": 2894,
									"nodeType": "InheritanceSpecifier",
									"src": "61005:7:0"
								}
							],
							"canonicalName": "VolunteerCollectionNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2928,
							"linearizedBaseContracts": [
								2928,
								2889,
								2744,
								1709,
								183,
								131,
								233,
								11,
								212
							],
							"name": "VolunteerCollectionNFT",
							"nameLocation": "60970:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2905,
										"nodeType": "Block",
										"src": "61087:2:0",
										"statements": []
									},
									"id": 2906,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 2899,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "61061:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 2900,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2898,
												"name": "ERC1155",
												"nameLocations": [
													"61053:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2744,
												"src": "61053:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61053:11:0"
										},
										{
											"arguments": [
												{
													"id": 2902,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2896,
													"src": "61073:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2903,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2901,
												"name": "Ownable",
												"nameLocations": [
													"61065:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2889,
												"src": "61065:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61065:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "61039:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "61031:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61030:22:0"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61087:0:0"
									},
									"scope": 2928,
									"src": "61019:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2926,
										"nodeType": "Block",
										"src": "61210:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2920,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2908,
															"src": "61226:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2921,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2910,
															"src": "61235:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2922,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2912,
															"src": "61239:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2923,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2914,
															"src": "61247:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2919,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2419,
														"src": "61220:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61220:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2925,
												"nodeType": "ExpressionStatement",
												"src": "61220:32:0"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 2927,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2916,
												"name": "onlyOwner",
												"nameLocations": [
													"61196:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2800,
												"src": "61196:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61196:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "61104:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "61117:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "61109:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "61134:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "61126:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "61146:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "61138:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "61167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "61154:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "61154:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61108:64:0"
									},
									"returnParameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61210:0:0"
									},
									"scope": 2928,
									"src": "61095:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2929,
							"src": "60961:300:0",
							"usedErrors": [
								1674,
								1679,
								1684,
								1691,
								1696,
								1701,
								1708,
								2755,
								2760
							],
							"usedEvents": [
								28,
								43,
								52,
								59,
								2766
							]
						}
					],
					"src": "182:61079:0"
				},
				"id": 0
			}
		}
	}
}