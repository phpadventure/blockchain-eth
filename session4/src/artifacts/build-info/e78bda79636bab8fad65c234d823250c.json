{
	"id": "e78bda79636bab8fad65c234d823250c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"VolunteerNFT_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: VolunteerNFT.sol\n\n\npragma solidity ^0.8.20;\n\n\n\ncontract VolunteerNFT is ERC721, Ownable {\n    uint256 private _nextTokenId;\n\n    constructor(address initialOwner)\n        ERC721(\"VolunteerNFT\", \"VLN\")\n        Ownable(initialOwner)\n    {}\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"https://google.com\";\n    }\n\n    function safeMint(address to) public onlyOwner {\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(to, tokenId);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"VolunteerNFT_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1777,
								"contract": "VolunteerNFT_flattened.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1779,
								"contract": "VolunteerNFT_flattened.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1783,
								"contract": "VolunteerNFT_flattened.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1787,
								"contract": "VolunteerNFT_flattened.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1791,
								"contract": "VolunteerNFT_flattened.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1797,
								"contract": "VolunteerNFT_flattened.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VolunteerNFT_flattened.sol\":8872:23786  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"VolunteerNFT_flattened.sol\":8872:23786  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204f13e52e88ba832829af203e64e18f89752c51094694bc0774480a70f0df82a964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204f13e52e88ba832829af203e64e18f89752c51094694bc0774480a70f0df82a964736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SGT 0xE5 0x2E DUP9 0xBA DUP4 0x28 0x29 0xAF KECCAK256 RETURNDATACOPY PUSH5 0xE18F89752C MLOAD MULMOD CHAINID SWAP5 0xBC SMOD PUSH21 0x480A70F0DF82A964736F6C634300081A0033000000 ",
							"sourceMap": "8872:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204f13e52e88ba832829af203e64e18f89752c51094694bc0774480a70f0df82a964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SGT 0xE5 0x2E DUP9 0xBA DUP4 0x28 0x29 0xAF KECCAK256 RETURNDATACOPY PUSH5 0xE18F89752C MLOAD MULMOD CHAINID SWAP5 0xBC SMOD PUSH21 0x480A70F0DF82A964736F6C634300081A0033000000 ",
							"sourceMap": "8872:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 23786,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f13e52e88ba832829af203e64e18f89752c51094694bc0774480a70f0df82a964736f6c634300081a0033",
									".code": [
										{
											"begin": 8872,
											"end": 23786,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 23786,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 23786,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 23786,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8872,
											"end": 23786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8872,
											"end": 23786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 23786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8872,
											"end": 23786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 23786,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"VolunteerNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2759,
								"contract": "VolunteerNFT_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VolunteerNFT_flattened.sol\":24033:25080  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"VolunteerNFT_flattened.sol\":24033:25080  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122082ca29fd2d93902a88db6f9f665686d6b6f2dccbc72446f149b79a405ef9f92364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122082ca29fd2d93902a88db6f9f665686d6b6f2dccbc72446f149b79a405ef9f92364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xCA 0x29 REVERT 0x2D SWAP4 SWAP1 0x2A DUP9 0xDB PUSH16 0x9F665686D6B6F2DCCBC72446F149B79A BLOCKHASH MCOPY 0xF9 0xF9 0x23 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "24033:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122082ca29fd2d93902a88db6f9f665686d6b6f2dccbc72446f149b79a405ef9f92364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xCA 0x29 REVERT 0x2D SWAP4 SWAP1 0x2A DUP9 0xDB PUSH16 0x9F665686D6B6F2DCCBC72446F149B79A BLOCKHASH MCOPY 0xF9 0xF9 0x23 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "24033:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24033,
									"end": 25080,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082ca29fd2d93902a88db6f9f665686d6b6f2dccbc72446f149b79a405ef9f92364736f6c634300081a0033",
									".code": [
										{
											"begin": 24033,
											"end": 25080,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 25080,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 25080,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 25080,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24033,
											"end": 25080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24033,
											"end": 25080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 25080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24033,
											"end": 25080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24033,
											"end": 25080,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"VolunteerNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VolunteerNFT_flattened.sol\":25267:28114  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"VolunteerNFT_flattened.sol\":25267:28114  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b5c3511ddf5a13b7e38a4d89f52e45ea3c9e8ab7f7eba6e787811f5c0e342a0864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b5c3511ddf5a13b7e38a4d89f52e45ea3c9e8ab7f7eba6e787811f5c0e342a0864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xC3 MLOAD SAR 0xDF GAS SGT 0xB7 0xE3 DUP11 0x4D DUP10 CREATE2 0x2E GASLIMIT 0xEA EXTCODECOPY SWAP15 DUP11 0xB7 0xF7 0xEB 0xA6 0xE7 DUP8 DUP2 0x1F TLOAD 0xE CALLVALUE 0x2A ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "25267:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b5c3511ddf5a13b7e38a4d89f52e45ea3c9e8ab7f7eba6e787811f5c0e342a0864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xC3 MLOAD SAR 0xDF GAS SGT 0xB7 0xE3 DUP11 0x4D DUP10 CREATE2 0x2E GASLIMIT 0xEA EXTCODECOPY SWAP15 DUP11 0xB7 0xF7 0xEB 0xA6 0xE7 DUP8 DUP2 0x1F TLOAD 0xE CALLVALUE 0x2A ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "25267:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25267,
									"end": 28114,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b5c3511ddf5a13b7e38a4d89f52e45ea3c9e8ab7f7eba6e787811f5c0e342a0864736f6c634300081a0033",
									".code": [
										{
											"begin": 25267,
											"end": 28114,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 25267,
											"end": 28114,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25267,
											"end": 28114,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25267,
											"end": 28114,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25267,
											"end": 28114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25267,
											"end": 28114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25267,
											"end": 28114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25267,
											"end": 28114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25267,
											"end": 28114,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"VolunteerNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VolunteerNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VolunteerNFT_flattened.sol\":56066:56509  contract VolunteerNFT is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"VolunteerNFT_flattened.sol\":56148:56256  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"VolunteerNFT_flattened.sol\":56236:56248  initialOwner */\n  dup1\n    /* \"VolunteerNFT_flattened.sol\":36608:36721  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x566f6c756e746565724e46540000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x564c4e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"VolunteerNFT_flattened.sol\":36682:36687  name_ */\n  dup2\n    /* \"VolunteerNFT_flattened.sol\":36674:36679  _name */\n  0x00\n    /* \"VolunteerNFT_flattened.sol\":36674:36687  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"VolunteerNFT_flattened.sol\":36707:36714  symbol_ */\n  dup1\n    /* \"VolunteerNFT_flattened.sol\":36697:36704  _symbol */\n  0x01\n    /* \"VolunteerNFT_flattened.sol\":36697:36714  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"VolunteerNFT_flattened.sol\":36608:36721  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"VolunteerNFT_flattened.sol\":54204:54205  0 */\n  0x00\n    /* \"VolunteerNFT_flattened.sol\":54180:54206  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"VolunteerNFT_flattened.sol\":54180:54192  initialOwner */\n  dup2\n    /* \"VolunteerNFT_flattened.sol\":54180:54206  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"VolunteerNFT_flattened.sol\":54176:54271  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"VolunteerNFT_flattened.sol\":54257:54258  0 */\n  0x00\n    /* \"VolunteerNFT_flattened.sol\":54229:54260  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"VolunteerNFT_flattened.sol\":54176:54271  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"VolunteerNFT_flattened.sol\":54280:54312  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"VolunteerNFT_flattened.sol\":54299:54311  initialOwner */\n  dup2\n    /* \"VolunteerNFT_flattened.sol\":54280:54298  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"VolunteerNFT_flattened.sol\":54280:54312  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"VolunteerNFT_flattened.sol\":54132:54319  constructor(address initialOwner) {... */\n  pop\n    /* \"VolunteerNFT_flattened.sol\":56148:56256  constructor(address initialOwner)... */\n  pop\n    /* \"VolunteerNFT_flattened.sol\":56066:56509  contract VolunteerNFT is ERC721, Ownable {... */\n  jump(tag_18)\n    /* \"VolunteerNFT_flattened.sol\":55819:56006  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"VolunteerNFT_flattened.sol\":55892:55908  address oldOwner */\n  0x00\n    /* \"VolunteerNFT_flattened.sol\":55911:55917  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"VolunteerNFT_flattened.sol\":55892:55917  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"VolunteerNFT_flattened.sol\":55936:55944  newOwner */\n  dup2\n    /* \"VolunteerNFT_flattened.sol\":55927:55933  _owner */\n  0x06\n  0x00\n    /* \"VolunteerNFT_flattened.sol\":55927:55944  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"VolunteerNFT_flattened.sol\":55990:55998  newOwner */\n  dup2\n    /* \"VolunteerNFT_flattened.sol\":55959:55999  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"VolunteerNFT_flattened.sol\":55980:55988  oldOwner */\n  dup2\n    /* \"VolunteerNFT_flattened.sol\":55959:55999  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"VolunteerNFT_flattened.sol\":55882:56006  {... */\n  pop\n    /* \"VolunteerNFT_flattened.sol\":55819:56006  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"VolunteerNFT_flattened.sol\":56066:56509  contract VolunteerNFT is ERC721, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"VolunteerNFT_flattened.sol\":56066:56509  contract VolunteerNFT is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40d097c3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":36788:37088  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerNFT_flattened.sol\":37592:37681  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerNFT_flattened.sol\":38724:38878  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerNFT_flattened.sol\":38550:38663  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"VolunteerNFT_flattened.sol\":39370:39948  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"VolunteerNFT_flattened.sol\":56379:56507  function safeMint(address to) public onlyOwner {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"VolunteerNFT_flattened.sol\":40014:40146  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"VolunteerNFT_flattened.sol\":37412:37530  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerNFT_flattened.sol\":37147:37355  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerNFT_flattened.sol\":55200:55301  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"VolunteerNFT_flattened.sol\":54545:54630  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerNFT_flattened.sol\":37745:37838  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerNFT_flattened.sol\":38945:39089  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"VolunteerNFT_flattened.sol\":40212:40420  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"VolunteerNFT_flattened.sol\":37904:38159  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerNFT_flattened.sol\":39155:39308  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VolunteerNFT_flattened.sol\":55450:55665  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"VolunteerNFT_flattened.sol\":36788:37088  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_26:\n        /* \"VolunteerNFT_flattened.sol\":36890:36894  bool */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":36940:36965  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"VolunteerNFT_flattened.sol\":36925:36965  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"VolunteerNFT_flattened.sol\":36925:36936  interfaceId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":36925:36965  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":36925:37029  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_92\n      jumpi\n      pop\n        /* \"VolunteerNFT_flattened.sol\":36996:37029  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"VolunteerNFT_flattened.sol\":36981:37029  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"VolunteerNFT_flattened.sol\":36981:36992  interfaceId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":36981:37029  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":36925:37029  interfaceId == type(IERC721).interfaceId ||... */\n    tag_92:\n        /* \"VolunteerNFT_flattened.sol\":36925:37081  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_93\n      jumpi\n      pop\n        /* \"VolunteerNFT_flattened.sol\":37045:37081  super.supportsInterface(interfaceId) */\n      tag_94\n        /* \"VolunteerNFT_flattened.sol\":37069:37080  interfaceId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":37045:37068  super.supportsInterface */\n      tag_95\n        /* \"VolunteerNFT_flattened.sol\":37045:37081  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_94:\n        /* \"VolunteerNFT_flattened.sol\":36925:37081  interfaceId == type(IERC721).interfaceId ||... */\n    tag_93:\n        /* \"VolunteerNFT_flattened.sol\":36906:37081  return... */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":36788:37088  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":37592:37681  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"VolunteerNFT_flattened.sol\":37637:37650  string memory */\n      0x60\n        /* \"VolunteerNFT_flattened.sol\":37669:37674  _name */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":37662:37674  return _name */\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":37592:37681  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":38724:38878  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_36:\n        /* \"VolunteerNFT_flattened.sol\":38791:38798  address */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":38810:38832  _requireOwned(tokenId) */\n      tag_104\n        /* \"VolunteerNFT_flattened.sol\":38824:38831  tokenId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":38810:38823  _requireOwned */\n      tag_105\n        /* \"VolunteerNFT_flattened.sol\":38810:38832  _requireOwned(tokenId) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"VolunteerNFT_flattened.sol\":38850:38871  _getApproved(tokenId) */\n      tag_106\n        /* \"VolunteerNFT_flattened.sol\":38863:38870  tokenId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":38850:38862  _getApproved */\n      tag_107\n        /* \"VolunteerNFT_flattened.sol\":38850:38871  _getApproved(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"VolunteerNFT_flattened.sol\":38843:38871  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":38724:38878  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":38550:38663  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_42:\n        /* \"VolunteerNFT_flattened.sol\":38621:38656  _approve(to, tokenId, _msgSender()) */\n      tag_109\n        /* \"VolunteerNFT_flattened.sol\":38630:38632  to */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":38634:38641  tokenId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":38643:38655  _msgSender() */\n      tag_110\n        /* \"VolunteerNFT_flattened.sol\":38643:38653  _msgSender */\n      tag_111\n        /* \"VolunteerNFT_flattened.sol\":38643:38655  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"VolunteerNFT_flattened.sol\":38621:38629  _approve */\n      tag_112\n        /* \"VolunteerNFT_flattened.sol\":38621:38656  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"VolunteerNFT_flattened.sol\":38550:38663  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":39370:39948  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_46:\n        /* \"VolunteerNFT_flattened.sol\":39478:39479  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":39464:39480  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":39464:39466  to */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":39464:39480  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerNFT_flattened.sol\":39460:39547  if (to == address(0)) {... */\n      tag_114\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":39533:39534  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":39503:39536  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":39460:39547  if (to == address(0)) {... */\n    tag_114:\n        /* \"VolunteerNFT_flattened.sol\":39765:39786  address previousOwner */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":39789:39823  _update(to, tokenId, _msgSender()) */\n      tag_116\n        /* \"VolunteerNFT_flattened.sol\":39797:39799  to */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":39801:39808  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":39810:39822  _msgSender() */\n      tag_117\n        /* \"VolunteerNFT_flattened.sol\":39810:39820  _msgSender */\n      tag_111\n        /* \"VolunteerNFT_flattened.sol\":39810:39822  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"VolunteerNFT_flattened.sol\":39789:39796  _update */\n      tag_118\n        /* \"VolunteerNFT_flattened.sol\":39789:39823  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_116:\n        /* \"VolunteerNFT_flattened.sol\":39765:39823  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":39854:39858  from */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":39837:39858  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":39837:39850  previousOwner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":39837:39858  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":39833:39942  if (previousOwner != from) {... */\n      tag_119\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":39902:39906  from */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":39908:39915  tokenId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":39917:39930  previousOwner */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":39881:39931  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":39833:39942  if (previousOwner != from) {... */\n    tag_119:\n        /* \"VolunteerNFT_flattened.sol\":39450:39948  {... */\n      pop\n        /* \"VolunteerNFT_flattened.sol\":39370:39948  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":56379:56507  function safeMint(address to) public onlyOwner {... */\n    tag_50:\n        /* \"VolunteerNFT_flattened.sol\":54438:54451  _checkOwner() */\n      tag_123\n        /* \"VolunteerNFT_flattened.sol\":54438:54449  _checkOwner */\n      tag_124\n        /* \"VolunteerNFT_flattened.sol\":54438:54451  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"VolunteerNFT_flattened.sol\":56436:56451  uint256 tokenId */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":56454:56466  _nextTokenId */\n      0x07\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":56454:56468  _nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"VolunteerNFT_flattened.sol\":56436:56468  uint256 tokenId = _nextTokenId++ */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":56478:56500  _safeMint(to, tokenId) */\n      tag_128\n        /* \"VolunteerNFT_flattened.sol\":56488:56490  to */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":56492:56499  tokenId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":56478:56487  _safeMint */\n      tag_129\n        /* \"VolunteerNFT_flattened.sol\":56478:56500  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_128:\n        /* \"VolunteerNFT_flattened.sol\":56426:56507  {... */\n      pop\n        /* \"VolunteerNFT_flattened.sol\":56379:56507  function safeMint(address to) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":40014:40146  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_53:\n        /* \"VolunteerNFT_flattened.sol\":40100:40139  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_131\n        /* \"VolunteerNFT_flattened.sol\":40117:40121  from */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":40123:40125  to */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":40127:40134  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":40100:40139  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"VolunteerNFT_flattened.sol\":40100:40116  safeTransferFrom */\n      tag_78\n        /* \"VolunteerNFT_flattened.sol\":40100:40139  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_131:\n        /* \"VolunteerNFT_flattened.sol\":40014:40146  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":37412:37530  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_56:\n        /* \"VolunteerNFT_flattened.sol\":37475:37482  address */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":37501:37523  _requireOwned(tokenId) */\n      tag_133\n        /* \"VolunteerNFT_flattened.sol\":37515:37522  tokenId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":37501:37514  _requireOwned */\n      tag_105\n        /* \"VolunteerNFT_flattened.sol\":37501:37523  _requireOwned(tokenId) */\n      jump\t// in\n    tag_133:\n        /* \"VolunteerNFT_flattened.sol\":37494:37523  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":37412:37530  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":37147:37355  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"VolunteerNFT_flattened.sol\":37210:37217  uint256 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":37250:37251  0 */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":37233:37252  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":37233:37238  owner */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":37233:37252  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerNFT_flattened.sol\":37229:37316  if (owner == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":37302:37303  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":37275:37305  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":37229:37316  if (owner == address(0)) {... */\n    tag_135:\n        /* \"VolunteerNFT_flattened.sol\":37332:37341  _balances */\n      0x03\n        /* \"VolunteerNFT_flattened.sol\":37332:37348  _balances[owner] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":37342:37347  owner */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":37332:37348  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"VolunteerNFT_flattened.sol\":37325:37348  return _balances[owner] */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":37147:37355  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":55200:55301  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"VolunteerNFT_flattened.sol\":54438:54451  _checkOwner() */\n      tag_138\n        /* \"VolunteerNFT_flattened.sol\":54438:54449  _checkOwner */\n      tag_124\n        /* \"VolunteerNFT_flattened.sol\":54438:54451  _checkOwner() */\n      jump\t// in\n    tag_138:\n        /* \"VolunteerNFT_flattened.sol\":55264:55294  _transferOwnership(address(0)) */\n      tag_140\n        /* \"VolunteerNFT_flattened.sol\":55291:55292  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":55264:55282  _transferOwnership */\n      tag_141\n        /* \"VolunteerNFT_flattened.sol\":55264:55294  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_140:\n        /* \"VolunteerNFT_flattened.sol\":55200:55301  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":54545:54630  function owner() public view virtual returns (address) {... */\n    tag_66:\n        /* \"VolunteerNFT_flattened.sol\":54591:54598  address */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":54617:54623  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":54610:54623  return _owner */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":54545:54630  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":37745:37838  function symbol() public view virtual returns (string memory) {... */\n    tag_69:\n        /* \"VolunteerNFT_flattened.sol\":37792:37805  string memory */\n      0x60\n        /* \"VolunteerNFT_flattened.sol\":37824:37831  _symbol */\n      0x01\n        /* \"VolunteerNFT_flattened.sol\":37817:37831  return _symbol */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_98\n      jump\t// in\n    tag_144:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_98\n      jump\t// in\n    tag_145:\n      dup1\n      iszero\n      tag_146\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_147\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_146)\n    tag_147:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_148:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_148\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":37745:37838  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":38945:39089  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_74:\n        /* \"VolunteerNFT_flattened.sol\":39030:39082  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_150\n        /* \"VolunteerNFT_flattened.sol\":39049:39061  _msgSender() */\n      tag_151\n        /* \"VolunteerNFT_flattened.sol\":39049:39059  _msgSender */\n      tag_111\n        /* \"VolunteerNFT_flattened.sol\":39049:39061  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"VolunteerNFT_flattened.sol\":39063:39071  operator */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":39073:39081  approved */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":39030:39048  _setApprovalForAll */\n      tag_152\n        /* \"VolunteerNFT_flattened.sol\":39030:39082  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_150:\n        /* \"VolunteerNFT_flattened.sol\":38945:39089  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":40212:40420  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_78:\n        /* \"VolunteerNFT_flattened.sol\":40325:40356  transferFrom(from, to, tokenId) */\n      tag_154\n        /* \"VolunteerNFT_flattened.sol\":40338:40342  from */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":40344:40346  to */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":40348:40355  tokenId */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":40325:40337  transferFrom */\n      tag_46\n        /* \"VolunteerNFT_flattened.sol\":40325:40356  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_154:\n        /* \"VolunteerNFT_flattened.sol\":40366:40413  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_155\n        /* \"VolunteerNFT_flattened.sol\":40389:40393  from */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":40395:40397  to */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":40399:40406  tokenId */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":40408:40412  data */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":40366:40388  _checkOnERC721Received */\n      tag_156\n        /* \"VolunteerNFT_flattened.sol\":40366:40413  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_155:\n        /* \"VolunteerNFT_flattened.sol\":40212:40420  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":37904:38159  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_81:\n        /* \"VolunteerNFT_flattened.sol\":37968:37981  string memory */\n      0x60\n        /* \"VolunteerNFT_flattened.sol\":37993:38015  _requireOwned(tokenId) */\n      tag_158\n        /* \"VolunteerNFT_flattened.sol\":38007:38014  tokenId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":37993:38006  _requireOwned */\n      tag_105\n        /* \"VolunteerNFT_flattened.sol\":37993:38015  _requireOwned(tokenId) */\n      jump\t// in\n    tag_158:\n      pop\n        /* \"VolunteerNFT_flattened.sol\":38026:38047  string memory baseURI */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":38050:38060  _baseURI() */\n      tag_159\n        /* \"VolunteerNFT_flattened.sol\":38050:38058  _baseURI */\n      tag_160\n        /* \"VolunteerNFT_flattened.sol\":38050:38060  _baseURI() */\n      jump\t// in\n    tag_159:\n        /* \"VolunteerNFT_flattened.sol\":38026:38060  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":38101:38102  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":38083:38090  baseURI */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":38077:38098  bytes(baseURI).length */\n      mload\n        /* \"VolunteerNFT_flattened.sol\":38077:38102  bytes(baseURI).length > 0 */\n      gt\n        /* \"VolunteerNFT_flattened.sol\":38077:38152  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_161\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_162)\n    tag_161:\n        /* \"VolunteerNFT_flattened.sol\":38119:38126  baseURI */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":38128:38146  tokenId.toString() */\n      tag_163\n        /* \"VolunteerNFT_flattened.sol\":38128:38135  tokenId */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":38128:38144  tokenId.toString */\n      tag_164\n        /* \"VolunteerNFT_flattened.sol\":38128:38146  tokenId.toString() */\n      jump\t// in\n    tag_163:\n        /* \"VolunteerNFT_flattened.sol\":38105:38147  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_165\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"VolunteerNFT_flattened.sol\":38077:38152  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_162:\n        /* \"VolunteerNFT_flattened.sol\":38070:38152  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"VolunteerNFT_flattened.sol\":37904:38159  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":39155:39308  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_86:\n        /* \"VolunteerNFT_flattened.sol\":39243:39247  bool */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":39266:39284  _operatorApprovals */\n      0x05\n        /* \"VolunteerNFT_flattened.sol\":39266:39291  _operatorApprovals[owner] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":39285:39290  owner */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":39266:39291  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VolunteerNFT_flattened.sol\":39266:39301  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":39292:39300  operator */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":39266:39301  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VolunteerNFT_flattened.sol\":39259:39301  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":39155:39308  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":55450:55665  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"VolunteerNFT_flattened.sol\":54438:54451  _checkOwner() */\n      tag_169\n        /* \"VolunteerNFT_flattened.sol\":54438:54449  _checkOwner */\n      tag_124\n        /* \"VolunteerNFT_flattened.sol\":54438:54451  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"VolunteerNFT_flattened.sol\":55554:55555  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":55534:55556  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":55534:55542  newOwner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":55534:55556  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerNFT_flattened.sol\":55530:55621  if (newOwner == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":55607:55608  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":55579:55610  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":55530:55621  if (newOwner == address(0)) {... */\n    tag_171:\n        /* \"VolunteerNFT_flattened.sol\":55630:55658  _transferOwnership(newOwner) */\n      tag_173\n        /* \"VolunteerNFT_flattened.sol\":55649:55657  newOwner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":55630:55648  _transferOwnership */\n      tag_141\n        /* \"VolunteerNFT_flattened.sol\":55630:55658  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_173:\n        /* \"VolunteerNFT_flattened.sol\":55450:55665  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":28873:29019  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_95:\n        /* \"VolunteerNFT_flattened.sol\":28949:28953  bool */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":28987:29012  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"VolunteerNFT_flattened.sol\":28972:29012  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"VolunteerNFT_flattened.sol\":28972:28983  interfaceId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":28972:29012  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":28965:29012  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":28873:29019  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":51365:51606  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_105:\n        /* \"VolunteerNFT_flattened.sol\":51428:51435  address */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":51447:51460  address owner */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":51463:51480  _ownerOf(tokenId) */\n      tag_176\n        /* \"VolunteerNFT_flattened.sol\":51472:51479  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":51463:51471  _ownerOf */\n      tag_177\n        /* \"VolunteerNFT_flattened.sol\":51463:51480  _ownerOf(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"VolunteerNFT_flattened.sol\":51447:51480  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":51511:51512  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":51494:51513  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":51494:51499  owner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":51494:51513  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerNFT_flattened.sol\":51490:51578  if (owner == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":51559:51566  tokenId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":51536:51567  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":51490:51578  if (owner == address(0)) {... */\n    tag_178:\n        /* \"VolunteerNFT_flattened.sol\":51594:51599  owner */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":51587:51599  return owner */\n      swap2\n      pop\n      pop\n        /* \"VolunteerNFT_flattened.sol\":51365:51606  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":41165:41292  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_107:\n        /* \"VolunteerNFT_flattened.sol\":41235:41242  address */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":41261:41276  _tokenApprovals */\n      0x04\n        /* \"VolunteerNFT_flattened.sol\":41261:41285  _tokenApprovals[tokenId] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":41277:41284  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":41261:41285  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":41254:41285  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":41165:41292  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":8338:8434  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"VolunteerNFT_flattened.sol\":8391:8398  address */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":8417:8427  msg.sender */\n      caller\n        /* \"VolunteerNFT_flattened.sol\":8410:8427  return msg.sender */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":8338:8434  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":49645:49765  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_112:\n        /* \"VolunteerNFT_flattened.sol\":49725:49758  _approve(to, tokenId, auth, true) */\n      tag_183\n        /* \"VolunteerNFT_flattened.sol\":49734:49736  to */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":49738:49745  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":49747:49751  auth */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":49753:49757  true */\n      0x01\n        /* \"VolunteerNFT_flattened.sol\":49725:49733  _approve */\n      tag_184\n        /* \"VolunteerNFT_flattened.sol\":49725:49758  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_183:\n        /* \"VolunteerNFT_flattened.sol\":49645:49765  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":44065:44860  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_118:\n        /* \"VolunteerNFT_flattened.sol\":44151:44158  address */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44170:44182  address from */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":44185:44202  _ownerOf(tokenId) */\n      tag_186\n        /* \"VolunteerNFT_flattened.sol\":44194:44201  tokenId */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":44185:44193  _ownerOf */\n      tag_177\n        /* \"VolunteerNFT_flattened.sol\":44185:44202  _ownerOf(tokenId) */\n      jump\t// in\n    tag_186:\n        /* \"VolunteerNFT_flattened.sol\":44170:44202  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":44278:44279  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44262:44280  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":44262:44266  auth */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":44262:44280  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":44258:44344  if (auth != address(0)) {... */\n      tag_187\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":44296:44333  _checkAuthorized(from, auth, tokenId) */\n      tag_188\n        /* \"VolunteerNFT_flattened.sol\":44313:44317  from */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":44319:44323  auth */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":44325:44332  tokenId */\n      dup7\n        /* \"VolunteerNFT_flattened.sol\":44296:44312  _checkAuthorized */\n      tag_189\n        /* \"VolunteerNFT_flattened.sol\":44296:44333  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"VolunteerNFT_flattened.sol\":44258:44344  if (auth != address(0)) {... */\n    tag_187:\n        /* \"VolunteerNFT_flattened.sol\":44404:44405  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44388:44406  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":44388:44392  from */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":44388:44406  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":44384:44640  if (from != address(0)) {... */\n      tag_190\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":44504:44552  _approve(address(0), tokenId, address(0), false) */\n      tag_191\n        /* \"VolunteerNFT_flattened.sol\":44521:44522  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44525:44532  tokenId */\n      dup6\n        /* \"VolunteerNFT_flattened.sol\":44542:44543  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44546:44551  false */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":44504:44512  _approve */\n      tag_184\n        /* \"VolunteerNFT_flattened.sol\":44504:44552  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_191:\n        /* \"VolunteerNFT_flattened.sol\":44614:44615  1 */\n      0x01\n        /* \"VolunteerNFT_flattened.sol\":44595:44604  _balances */\n      0x03\n        /* \"VolunteerNFT_flattened.sol\":44595:44610  _balances[from] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44605:44609  from */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":44595:44610  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44595:44615  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VolunteerNFT_flattened.sol\":44384:44640  if (from != address(0)) {... */\n    tag_190:\n        /* \"VolunteerNFT_flattened.sol\":44668:44669  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44654:44670  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":44654:44656  to */\n      dup6\n        /* \"VolunteerNFT_flattened.sol\":44654:44670  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":44650:44757  if (to != address(0)) {... */\n      tag_192\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":44731:44732  1 */\n      0x01\n        /* \"VolunteerNFT_flattened.sol\":44714:44723  _balances */\n      0x03\n        /* \"VolunteerNFT_flattened.sol\":44714:44727  _balances[to] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44724:44726  to */\n      dup8\n        /* \"VolunteerNFT_flattened.sol\":44714:44727  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44714:44732  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VolunteerNFT_flattened.sol\":44650:44757  if (to != address(0)) {... */\n    tag_192:\n        /* \"VolunteerNFT_flattened.sol\":44786:44788  to */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":44767:44774  _owners */\n      0x02\n        /* \"VolunteerNFT_flattened.sol\":44767:44783  _owners[tokenId] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44775:44782  tokenId */\n      dup7\n        /* \"VolunteerNFT_flattened.sol\":44767:44783  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":44767:44788  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VolunteerNFT_flattened.sol\":44823:44830  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":44819:44821  to */\n      dup6\n        /* \"VolunteerNFT_flattened.sol\":44804:44831  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":44813:44817  from */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":44804:44831  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"VolunteerNFT_flattened.sol\":44849:44853  from */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":44842:44853  return from */\n      swap2\n      pop\n      pop\n        /* \"VolunteerNFT_flattened.sol\":44065:44860  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":54703:54865  function _checkOwner() internal view virtual {... */\n    tag_124:\n        /* \"VolunteerNFT_flattened.sol\":54773:54785  _msgSender() */\n      tag_194\n        /* \"VolunteerNFT_flattened.sol\":54773:54783  _msgSender */\n      tag_111\n        /* \"VolunteerNFT_flattened.sol\":54773:54785  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"VolunteerNFT_flattened.sol\":54762:54785  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":54762:54769  owner() */\n      tag_195\n        /* \"VolunteerNFT_flattened.sol\":54762:54767  owner */\n      tag_66\n        /* \"VolunteerNFT_flattened.sol\":54762:54769  owner() */\n      jump\t// in\n    tag_195:\n        /* \"VolunteerNFT_flattened.sol\":54762:54785  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":54758:54859  if (owner() != _msgSender()) {... */\n      tag_196\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":54835:54847  _msgSender() */\n      tag_197\n        /* \"VolunteerNFT_flattened.sol\":54835:54845  _msgSender */\n      tag_111\n        /* \"VolunteerNFT_flattened.sol\":54835:54847  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"VolunteerNFT_flattened.sol\":54808:54848  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":54758:54859  if (owner() != _msgSender()) {... */\n    tag_196:\n        /* \"VolunteerNFT_flattened.sol\":54703:54865  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":45860:45960  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_129:\n        /* \"VolunteerNFT_flattened.sol\":45927:45953  _safeMint(to, tokenId, \"\") */\n      tag_200\n        /* \"VolunteerNFT_flattened.sol\":45937:45939  to */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":45941:45948  tokenId */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":45927:45953  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"VolunteerNFT_flattened.sol\":45927:45936  _safeMint */\n      tag_201\n        /* \"VolunteerNFT_flattened.sol\":45927:45953  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_200:\n        /* \"VolunteerNFT_flattened.sol\":45860:45960  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":55819:56006  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_141:\n        /* \"VolunteerNFT_flattened.sol\":55892:55908  address oldOwner */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":55911:55917  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":55892:55917  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":55936:55944  newOwner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":55927:55933  _owner */\n      0x06\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":55927:55944  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VolunteerNFT_flattened.sol\":55990:55998  newOwner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":55959:55999  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":55980:55988  oldOwner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":55959:55999  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"VolunteerNFT_flattened.sol\":55882:56006  {... */\n      pop\n        /* \"VolunteerNFT_flattened.sol\":55819:56006  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":50818:51130  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_152:\n        /* \"VolunteerNFT_flattened.sol\":50945:50946  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":50925:50947  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":50925:50933  operator */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":50925:50947  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerNFT_flattened.sol\":50921:51012  if (operator == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":50992:51000  operator */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":50970:51001  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":50921:51012  if (operator == address(0)) {... */\n    tag_204:\n        /* \"VolunteerNFT_flattened.sol\":51059:51067  approved */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":51021:51039  _operatorApprovals */\n      0x05\n        /* \"VolunteerNFT_flattened.sol\":51021:51046  _operatorApprovals[owner] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":51040:51045  owner */\n      dup6\n        /* \"VolunteerNFT_flattened.sol\":51021:51046  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VolunteerNFT_flattened.sol\":51021:51056  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":51047:51055  operator */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":51021:51056  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":51021:51067  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VolunteerNFT_flattened.sol\":51104:51112  operator */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":51082:51123  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":51097:51102  owner */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":51082:51123  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"VolunteerNFT_flattened.sol\":51114:51122  approved */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":51082:51123  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"VolunteerNFT_flattened.sol\":50818:51130  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":52145:52927  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_156:\n        /* \"VolunteerNFT_flattened.sol\":52278:52279  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":52261:52263  to */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":52261:52275  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"VolunteerNFT_flattened.sol\":52261:52279  to.code.length > 0 */\n      gt\n        /* \"VolunteerNFT_flattened.sol\":52257:52921  if (to.code.length > 0) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":52315:52317  to */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":52299:52335  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"VolunteerNFT_flattened.sol\":52336:52348  _msgSender() */\n      tag_209\n        /* \"VolunteerNFT_flattened.sol\":52336:52346  _msgSender */\n      tag_111\n        /* \"VolunteerNFT_flattened.sol\":52336:52348  _msgSender() */\n      jump\t// in\n    tag_209:\n        /* \"VolunteerNFT_flattened.sol\":52350:52354  from */\n      dup7\n        /* \"VolunteerNFT_flattened.sol\":52356:52363  tokenId */\n      dup6\n        /* \"VolunteerNFT_flattened.sol\":52365:52369  data */\n      dup6\n        /* \"VolunteerNFT_flattened.sol\":52299:52370  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_212\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      0x01\n    tag_212:\n        /* \"VolunteerNFT_flattened.sol\":52295:52911  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_215\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_220\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_219)\n    tag_220:\n      0x60\n      swap2\n      pop\n    tag_219:\n      pop\n        /* \"VolunteerNFT_flattened.sol\":52625:52626  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":52608:52614  reason */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":52608:52621  reason.length */\n      mload\n        /* \"VolunteerNFT_flattened.sol\":52608:52626  reason.length == 0 */\n      sub\n        /* \"VolunteerNFT_flattened.sol\":52604:52897  if (reason.length == 0) {... */\n      tag_221\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":52679:52681  to */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":52657:52682  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":52604:52897  if (reason.length == 0) {... */\n    tag_221:\n        /* \"VolunteerNFT_flattened.sol\":52849:52855  reason */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":52843:52856  mload(reason) */\n      mload\n        /* \"VolunteerNFT_flattened.sol\":52834:52840  reason */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":52830:52832  32 */\n      0x20\n        /* \"VolunteerNFT_flattened.sol\":52826:52841  add(32, reason) */\n      add\n        /* \"VolunteerNFT_flattened.sol\":52819:52857  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"VolunteerNFT_flattened.sol\":52295:52911  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_215:\n        /* \"VolunteerNFT_flattened.sol\":52427:52468  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"VolunteerNFT_flattened.sol\":52417:52468  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"VolunteerNFT_flattened.sol\":52417:52423  retval */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":52417:52468  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":52413:52543  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_225\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":52521:52523  to */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":52499:52524  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":52413:52543  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_225:\n        /* \"VolunteerNFT_flattened.sol\":52371:52557  returns (bytes4 retval) {... */\n      pop\n        /* \"VolunteerNFT_flattened.sol\":52257:52921  if (to.code.length > 0) {... */\n    tag_208:\n        /* \"VolunteerNFT_flattened.sol\":52145:52927  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":56262:56373  function _baseURI() internal pure override returns (string memory) {... */\n    tag_160:\n        /* \"VolunteerNFT_flattened.sol\":56314:56327  string memory */\n      0x60\n        /* \"VolunteerNFT_flattened.sol\":56339:56366  return \"https://google.com\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      0x68747470733a2f2f676f6f676c652e636f6d0000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":56262:56373  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":25653:26351  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_164:\n        /* \"VolunteerNFT_flattened.sol\":25709:25722  string memory */\n      0x60\n        /* \"VolunteerNFT_flattened.sol\":25758:25772  uint256 length */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":25795:25796  1 */\n      0x01\n        /* \"VolunteerNFT_flattened.sol\":25775:25792  Math.log10(value) */\n      tag_229\n        /* \"VolunteerNFT_flattened.sol\":25786:25791  value */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":25775:25785  Math.log10 */\n      tag_230\n        /* \"VolunteerNFT_flattened.sol\":25775:25792  Math.log10(value) */\n      jump\t// in\n    tag_229:\n        /* \"VolunteerNFT_flattened.sol\":25775:25796  Math.log10(value) + 1 */\n      add\n        /* \"VolunteerNFT_flattened.sol\":25758:25796  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":25810:25830  string memory buffer */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":25844:25850  length */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":25833:25851  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_232\n      tag_233\n      jump\t// in\n    tag_232:\n    tag_231:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_234\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_234:\n      pop\n        /* \"VolunteerNFT_flattened.sol\":25810:25851  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":25865:25876  uint256 ptr */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":25991:25997  length */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":25987:25989  32 */\n      0x20\n        /* \"VolunteerNFT_flattened.sol\":25983:25998  add(32, length) */\n      add\n        /* \"VolunteerNFT_flattened.sol\":25975:25981  buffer */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":25971:25999  add(buffer, add(32, length)) */\n      add\n        /* \"VolunteerNFT_flattened.sol\":25964:25999  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":26026:26308  while (true) {... */\n    tag_235:\n        /* \"VolunteerNFT_flattened.sol\":26033:26037  true */\n      0x01\n        /* \"VolunteerNFT_flattened.sol\":26026:26308  while (true) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":26057:26062  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"VolunteerNFT_flattened.sol\":26196:26206  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"VolunteerNFT_flattened.sol\":26191:26193  10 */\n      0x0a\n        /* \"VolunteerNFT_flattened.sol\":26184:26189  value */\n      dup7\n        /* \"VolunteerNFT_flattened.sol\":26180:26194  mod(value, 10) */\n      mod\n        /* \"VolunteerNFT_flattened.sol\":26175:26207  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"VolunteerNFT_flattened.sol\":26170:26173  ptr */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":26162:26208  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"VolunteerNFT_flattened.sol\":26252:26254  10 */\n      0x0a\n        /* \"VolunteerNFT_flattened.sol\":26243:26254  value /= 10 */\n      dup6\n      dup2\n      tag_237\n      jumpi\n      tag_238\n      tag_239\n      jump\t// in\n    tag_238:\n    tag_237:\n      div\n      swap5\n      pop\n        /* \"VolunteerNFT_flattened.sol\":26285:26286  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":26276:26281  value */\n      dup6\n        /* \"VolunteerNFT_flattened.sol\":26276:26286  value == 0 */\n      sub\n        /* \"VolunteerNFT_flattened.sol\":26026:26308  while (true) {... */\n      tag_235\n        /* \"VolunteerNFT_flattened.sol\":26272:26293  if (value == 0) break */\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":26026:26308  while (true) {... */\n    tag_236:\n        /* \"VolunteerNFT_flattened.sol\":26328:26334  buffer */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":26321:26334  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"VolunteerNFT_flattened.sol\":25653:26351  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":40934:41049  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_177:\n        /* \"VolunteerNFT_flattened.sol\":41000:41007  address */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":41026:41033  _owners */\n      0x02\n        /* \"VolunteerNFT_flattened.sol\":41026:41042  _owners[tokenId] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":41034:41041  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":41026:41042  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":41019:41042  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":40934:41049  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":49947:50609  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_184:\n        /* \"VolunteerNFT_flattened.sol\":50107:50116  emitEvent */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":50107:50138  emitEvent || auth != address(0) */\n      dup1\n      tag_243\n      jumpi\n      pop\n        /* \"VolunteerNFT_flattened.sol\":50136:50137  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":50120:50138  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":50120:50124  auth */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":50120:50138  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"VolunteerNFT_flattened.sol\":50107:50138  emitEvent || auth != address(0) */\n    tag_243:\n        /* \"VolunteerNFT_flattened.sol\":50103:50563  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":50154:50167  address owner */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":50170:50192  _requireOwned(tokenId) */\n      tag_245\n        /* \"VolunteerNFT_flattened.sol\":50184:50191  tokenId */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":50170:50183  _requireOwned */\n      tag_105\n        /* \"VolunteerNFT_flattened.sol\":50170:50192  _requireOwned(tokenId) */\n      jump\t// in\n    tag_245:\n        /* \"VolunteerNFT_flattened.sol\":50154:50192  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":50336:50337  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":50320:50338  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":50320:50324  auth */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":50320:50338  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"VolunteerNFT_flattened.sol\":50320:50355  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_246\n      jumpi\n      pop\n        /* \"VolunteerNFT_flattened.sol\":50351:50355  auth */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":50342:50355  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":50342:50347  owner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":50342:50355  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"VolunteerNFT_flattened.sol\":50320:50355  auth != address(0) && owner != auth */\n    tag_246:\n        /* \"VolunteerNFT_flattened.sol\":50320:50389  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_247\n      jumpi\n      pop\n        /* \"VolunteerNFT_flattened.sol\":50360:50389  isApprovedForAll(owner, auth) */\n      tag_248\n        /* \"VolunteerNFT_flattened.sol\":50377:50382  owner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":50384:50388  auth */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":50360:50376  isApprovedForAll */\n      tag_86\n        /* \"VolunteerNFT_flattened.sol\":50360:50389  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_248:\n        /* \"VolunteerNFT_flattened.sol\":50359:50389  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"VolunteerNFT_flattened.sol\":50320:50389  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_247:\n        /* \"VolunteerNFT_flattened.sol\":50316:50458  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":50438:50442  auth */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":50416:50443  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":50316:50458  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_249:\n        /* \"VolunteerNFT_flattened.sol\":50476:50485  emitEvent */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":50472:50553  if (emitEvent) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":50530:50537  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":50526:50528  to */\n      dup6\n        /* \"VolunteerNFT_flattened.sol\":50510:50538  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":50519:50524  owner */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":50510:50538  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"VolunteerNFT_flattened.sol\":50472:50553  if (emitEvent) {... */\n    tag_251:\n        /* \"VolunteerNFT_flattened.sol\":50140:50563  {... */\n      pop\n        /* \"VolunteerNFT_flattened.sol\":50103:50563  if (emitEvent || auth != address(0)) {... */\n    tag_244:\n        /* \"VolunteerNFT_flattened.sol\":50600:50602  to */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":50573:50588  _tokenApprovals */\n      0x04\n        /* \"VolunteerNFT_flattened.sol\":50573:50597  _tokenApprovals[tokenId] */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":50589:50596  tokenId */\n      dup6\n        /* \"VolunteerNFT_flattened.sol\":50573:50597  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":50573:50602  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VolunteerNFT_flattened.sol\":49947:50609  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":42309:42677  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_189:\n        /* \"VolunteerNFT_flattened.sol\":42421:42459  _isAuthorized(owner, spender, tokenId) */\n      tag_253\n        /* \"VolunteerNFT_flattened.sol\":42435:42440  owner */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":42442:42449  spender */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":42451:42458  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":42421:42434  _isAuthorized */\n      tag_254\n        /* \"VolunteerNFT_flattened.sol\":42421:42459  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_253:\n        /* \"VolunteerNFT_flattened.sol\":42416:42671  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_255\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":42496:42497  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":42479:42498  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":42479:42484  owner */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":42479:42498  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerNFT_flattened.sol\":42475:42661  if (owner == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":42548:42555  tokenId */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":42525:42556  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":42475:42661  if (owner == address(0)) {... */\n    tag_256:\n        /* \"VolunteerNFT_flattened.sol\":42629:42636  spender */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":42638:42645  tokenId */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":42602:42646  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap3\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":42416:42671  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_255:\n        /* \"VolunteerNFT_flattened.sol\":42309:42677  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":46181:46363  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_201:\n        /* \"VolunteerNFT_flattened.sol\":46275:46293  _mint(to, tokenId) */\n      tag_262\n        /* \"VolunteerNFT_flattened.sol\":46281:46283  to */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":46285:46292  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":46275:46280  _mint */\n      tag_263\n        /* \"VolunteerNFT_flattened.sol\":46275:46293  _mint(to, tokenId) */\n      jump\t// in\n    tag_262:\n        /* \"VolunteerNFT_flattened.sol\":46303:46356  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_264\n        /* \"VolunteerNFT_flattened.sol\":46334:46335  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":46338:46340  to */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":46342:46349  tokenId */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":46351:46355  data */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":46303:46325  _checkOnERC721Received */\n      tag_156\n        /* \"VolunteerNFT_flattened.sol\":46303:46356  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_264:\n        /* \"VolunteerNFT_flattened.sol\":46181:46363  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":20883:21799  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_230:\n        /* \"VolunteerNFT_flattened.sol\":20936:20943  uint256 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":20955:20969  uint256 result */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":20972:20973  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":20955:20973  uint256 result = 0 */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21020:21028  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"VolunteerNFT_flattened.sol\":21011:21016  value */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":21011:21028  value >= 10 ** 64 */\n      lt\n        /* \"VolunteerNFT_flattened.sol\":21007:21110  if (value >= 10 ** 64) {... */\n      tag_266\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":21057:21065  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"VolunteerNFT_flattened.sol\":21048:21065  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_267\n      jumpi\n      tag_268\n      tag_239\n      jump\t// in\n    tag_268:\n    tag_267:\n      div\n      swap3\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21093:21095  64 */\n      0x40\n        /* \"VolunteerNFT_flattened.sol\":21083:21095  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21007:21110  if (value >= 10 ** 64) {... */\n    tag_266:\n        /* \"VolunteerNFT_flattened.sol\":21136:21144  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"VolunteerNFT_flattened.sol\":21127:21132  value */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":21127:21144  value >= 10 ** 32 */\n      lt\n        /* \"VolunteerNFT_flattened.sol\":21123:21226  if (value >= 10 ** 32) {... */\n      tag_269\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":21173:21181  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"VolunteerNFT_flattened.sol\":21164:21181  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_270\n      jumpi\n      tag_271\n      tag_239\n      jump\t// in\n    tag_271:\n    tag_270:\n      div\n      swap3\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21209:21211  32 */\n      0x20\n        /* \"VolunteerNFT_flattened.sol\":21199:21211  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21123:21226  if (value >= 10 ** 32) {... */\n    tag_269:\n        /* \"VolunteerNFT_flattened.sol\":21252:21260  10 ** 16 */\n      0x2386f26fc10000\n        /* \"VolunteerNFT_flattened.sol\":21243:21248  value */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":21243:21260  value >= 10 ** 16 */\n      lt\n        /* \"VolunteerNFT_flattened.sol\":21239:21342  if (value >= 10 ** 16) {... */\n      tag_272\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":21289:21297  10 ** 16 */\n      0x2386f26fc10000\n        /* \"VolunteerNFT_flattened.sol\":21280:21297  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_273\n      jumpi\n      tag_274\n      tag_239\n      jump\t// in\n    tag_274:\n    tag_273:\n      div\n      swap3\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21325:21327  16 */\n      0x10\n        /* \"VolunteerNFT_flattened.sol\":21315:21327  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21239:21342  if (value >= 10 ** 16) {... */\n    tag_272:\n        /* \"VolunteerNFT_flattened.sol\":21368:21375  10 ** 8 */\n      0x05f5e100\n        /* \"VolunteerNFT_flattened.sol\":21359:21364  value */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":21359:21375  value >= 10 ** 8 */\n      lt\n        /* \"VolunteerNFT_flattened.sol\":21355:21455  if (value >= 10 ** 8) {... */\n      tag_275\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":21404:21411  10 ** 8 */\n      0x05f5e100\n        /* \"VolunteerNFT_flattened.sol\":21395:21411  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_276\n      jumpi\n      tag_277\n      tag_239\n      jump\t// in\n    tag_277:\n    tag_276:\n      div\n      swap3\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21439:21440  8 */\n      0x08\n        /* \"VolunteerNFT_flattened.sol\":21429:21440  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21355:21455  if (value >= 10 ** 8) {... */\n    tag_275:\n        /* \"VolunteerNFT_flattened.sol\":21481:21488  10 ** 4 */\n      0x2710\n        /* \"VolunteerNFT_flattened.sol\":21472:21477  value */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":21472:21488  value >= 10 ** 4 */\n      lt\n        /* \"VolunteerNFT_flattened.sol\":21468:21568  if (value >= 10 ** 4) {... */\n      tag_278\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":21517:21524  10 ** 4 */\n      0x2710\n        /* \"VolunteerNFT_flattened.sol\":21508:21524  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_279\n      jumpi\n      tag_280\n      tag_239\n      jump\t// in\n    tag_280:\n    tag_279:\n      div\n      swap3\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21552:21553  4 */\n      0x04\n        /* \"VolunteerNFT_flattened.sol\":21542:21553  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21468:21568  if (value >= 10 ** 4) {... */\n    tag_278:\n        /* \"VolunteerNFT_flattened.sol\":21594:21601  10 ** 2 */\n      0x64\n        /* \"VolunteerNFT_flattened.sol\":21585:21590  value */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":21585:21601  value >= 10 ** 2 */\n      lt\n        /* \"VolunteerNFT_flattened.sol\":21581:21681  if (value >= 10 ** 2) {... */\n      tag_281\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":21630:21637  10 ** 2 */\n      0x64\n        /* \"VolunteerNFT_flattened.sol\":21621:21637  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_282\n      jumpi\n      tag_283\n      tag_239\n      jump\t// in\n    tag_283:\n    tag_282:\n      div\n      swap3\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21665:21666  2 */\n      0x02\n        /* \"VolunteerNFT_flattened.sol\":21655:21666  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21581:21681  if (value >= 10 ** 2) {... */\n    tag_281:\n        /* \"VolunteerNFT_flattened.sol\":21707:21714  10 ** 1 */\n      0x0a\n        /* \"VolunteerNFT_flattened.sol\":21698:21703  value */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":21698:21714  value >= 10 ** 1 */\n      lt\n        /* \"VolunteerNFT_flattened.sol\":21694:21760  if (value >= 10 ** 1) {... */\n      tag_284\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":21744:21745  1 */\n      0x01\n        /* \"VolunteerNFT_flattened.sol\":21734:21745  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":21694:21760  if (value >= 10 ** 1) {... */\n    tag_284:\n        /* \"VolunteerNFT_flattened.sol\":21786:21792  result */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":21779:21792  return result */\n      swap2\n      pop\n      pop\n        /* \"VolunteerNFT_flattened.sol\":20883:21799  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":41603:41875  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_254:\n        /* \"VolunteerNFT_flattened.sol\":41706:41710  bool */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":41760:41761  0 */\n      dup1\n        /* \"VolunteerNFT_flattened.sol\":41741:41762  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":41741:41748  spender */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":41741:41762  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"VolunteerNFT_flattened.sol\":41741:41868  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_286\n      jumpi\n      pop\n        /* \"VolunteerNFT_flattened.sol\":41788:41795  spender */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":41779:41795  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":41779:41784  owner */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":41779:41795  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":41779:41831  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_287\n      jumpi\n      pop\n        /* \"VolunteerNFT_flattened.sol\":41799:41831  isApprovedForAll(owner, spender) */\n      tag_288\n        /* \"VolunteerNFT_flattened.sol\":41816:41821  owner */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":41823:41830  spender */\n      dup5\n        /* \"VolunteerNFT_flattened.sol\":41799:41815  isApprovedForAll */\n      tag_86\n        /* \"VolunteerNFT_flattened.sol\":41799:41831  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_288:\n        /* \"VolunteerNFT_flattened.sol\":41779:41831  owner == spender || isApprovedForAll(owner, spender) */\n    tag_287:\n        /* \"VolunteerNFT_flattened.sol\":41779:41867  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_289\n      jumpi\n      pop\n        /* \"VolunteerNFT_flattened.sol\":41860:41867  spender */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":41835:41867  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":41835:41856  _getApproved(tokenId) */\n      tag_290\n        /* \"VolunteerNFT_flattened.sol\":41848:41855  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":41835:41847  _getApproved */\n      tag_107\n        /* \"VolunteerNFT_flattened.sol\":41835:41856  _getApproved(tokenId) */\n      jump\t// in\n    tag_290:\n        /* \"VolunteerNFT_flattened.sol\":41835:41867  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":41779:41867  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_289:\n        /* \"VolunteerNFT_flattened.sol\":41741:41868  spender != address(0) &&... */\n    tag_286:\n        /* \"VolunteerNFT_flattened.sol\":41722:41868  return... */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":41603:41875  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VolunteerNFT_flattened.sol\":45182:45509  function _mint(address to, uint256 tokenId) internal {... */\n    tag_263:\n        /* \"VolunteerNFT_flattened.sol\":45263:45264  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":45249:45265  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":45249:45251  to */\n      dup3\n        /* \"VolunteerNFT_flattened.sol\":45249:45265  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"VolunteerNFT_flattened.sol\":45245:45332  if (to == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":45318:45319  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":45288:45321  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":45245:45332  if (to == address(0)) {... */\n    tag_292:\n        /* \"VolunteerNFT_flattened.sol\":45341:45362  address previousOwner */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":45365:45397  _update(to, tokenId, address(0)) */\n      tag_294\n        /* \"VolunteerNFT_flattened.sol\":45373:45375  to */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":45377:45384  tokenId */\n      dup4\n        /* \"VolunteerNFT_flattened.sol\":45394:45395  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":45365:45372  _update */\n      tag_118\n        /* \"VolunteerNFT_flattened.sol\":45365:45397  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_294:\n        /* \"VolunteerNFT_flattened.sol\":45341:45397  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"VolunteerNFT_flattened.sol\":45436:45437  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":45411:45438  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VolunteerNFT_flattened.sol\":45411:45424  previousOwner */\n      dup2\n        /* \"VolunteerNFT_flattened.sol\":45411:45438  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"VolunteerNFT_flattened.sol\":45407:45503  if (previousOwner != address(0)) {... */\n      tag_295\n      jumpi\n        /* \"VolunteerNFT_flattened.sol\":45489:45490  0 */\n      0x00\n        /* \"VolunteerNFT_flattened.sol\":45461:45492  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"VolunteerNFT_flattened.sol\":45407:45503  if (previousOwner != address(0)) {... */\n    tag_295:\n        /* \"VolunteerNFT_flattened.sol\":45235:45509  {... */\n      pop\n        /* \"VolunteerNFT_flattened.sol\":45182:45509  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_297:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_298:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_299:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_300:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_301:\n        /* \"#utility.yul\":561:584   */\n      tag_343\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_300\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_344:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_302:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_346\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_301\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_349\n      tag_298\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":833:952   */\n    tag_348:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_350\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_302\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_303:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_304:\n        /* \"#utility.yul\":1268:1289   */\n      tag_353\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_303\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_355\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_304\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_305:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_306:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_307:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_308:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_309:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_361\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_305\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2222:2293   */\n      tag_362\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_306\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_363\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_307\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2392:2421   */\n      tag_364\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_308\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_32:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_366\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_309\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_310:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_311:\n        /* \"#utility.yul\":2909:2933   */\n      tag_369\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_310\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_370:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_312:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_372\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_311\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_35:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_375\n      tag_298\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3185:3304   */\n    tag_374:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_376\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_312\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_313:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_314:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_379\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_313\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_315:\n        /* \"#utility.yul\":3765:3789   */\n      tag_381\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_314\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_38:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_383\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_315\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_316:\n        /* \"#utility.yul\":4103:4127   */\n      tag_385\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_314\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_386:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_317:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_388\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_316\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_41:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_391\n      tag_298\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4396:4515   */\n    tag_390:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_392\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_317\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_393\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_312\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_45:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_396\n      tag_298\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4893:5012   */\n    tag_395:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_397\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_317\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_398\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_317\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_399\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_312\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5737   */\n    tag_49:\n        /* \"#utility.yul\":5467:5473   */\n      0x00\n        /* \"#utility.yul\":5516:5518   */\n      0x20\n        /* \"#utility.yul\":5504:5513   */\n      dup3\n        /* \"#utility.yul\":5495:5502   */\n      dup5\n        /* \"#utility.yul\":5491:5514   */\n      sub\n        /* \"#utility.yul\":5487:5519   */\n      slt\n        /* \"#utility.yul\":5484:5603   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":5522:5601   */\n      tag_402\n      tag_298\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5484:5603   */\n    tag_401:\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5667:5720   */\n      tag_403\n        /* \"#utility.yul\":5712:5719   */\n      dup5\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup6\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_317\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5613:5730   */\n      pop\n        /* \"#utility.yul\":5408:5737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5743:5861   */\n    tag_318:\n        /* \"#utility.yul\":5830:5854   */\n      tag_405\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5830:5854   */\n      tag_310\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5818:5855   */\n      mstore\n        /* \"#utility.yul\":5743:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6089   */\n    tag_62:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6011:6082   */\n      tag_407\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6068:6077   */\n      dup4\n        /* \"#utility.yul\":6064:6081   */\n      add\n        /* \"#utility.yul\":6055:6061   */\n      dup5\n        /* \"#utility.yul\":6011:6082   */\n      tag_318\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5867:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_319:\n        /* \"#utility.yul\":6165:6186   */\n      tag_409\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_303\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      dup1\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_410:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_320:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_412\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_319\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_73:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      dup1\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_415\n      tag_298\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6446:6565   */\n    tag_414:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_416\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_317\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_417\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_320\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_321:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      dup1\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_322:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      dup1\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_233:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_323:\n        /* \"#utility.yul\":7345:7372   */\n      tag_422\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_308\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_424\n      tag_233\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7418:7506   */\n    tag_423:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_324:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_426\n      tag_297\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_427\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_323\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_325:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_430\n      tag_233\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7821:7877   */\n    tag_429:\n        /* \"#utility.yul\":7895:7924   */\n      tag_431\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_308\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_326:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_327:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_434\n        /* \"#utility.yul\":8269:8317   */\n      tag_435\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_325\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8253:8318   */\n      tag_324\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_437\n      tag_322\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8393:8505   */\n    tag_436:\n        /* \"#utility.yul\":8514:8568   */\n      tag_438\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_326\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_328:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_441\n      tag_321\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8664:8786   */\n    tag_440:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_442\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_327\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_77:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      dup1\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      dup1\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_445\n      tag_298\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9073:9193   */\n    tag_444:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_446\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_317\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_447\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_317\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_448\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_312\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_450\n      tag_299\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9660:9777   */\n    tag_449:\n        /* \"#utility.yul\":9801:9863   */\n      tag_451\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_328\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_85:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      dup1\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_454\n      tag_298\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9979:10098   */\n    tag_453:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_455\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_317\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_456\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_317\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10546   */\n    tag_329:\n        /* \"#utility.yul\":10414:10491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10404:10492   */\n      mstore\n        /* \"#utility.yul\":10511:10515   */\n      0x22\n        /* \"#utility.yul\":10508:10509   */\n      0x04\n        /* \"#utility.yul\":10501:10516   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x24\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10525:10540   */\n      revert\n        /* \"#utility.yul\":10552:10872   */\n    tag_98:\n        /* \"#utility.yul\":10596:10602   */\n      0x00\n        /* \"#utility.yul\":10633:10634   */\n      0x02\n        /* \"#utility.yul\":10627:10631   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      div\n        /* \"#utility.yul\":10613:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10681   */\n      0x01\n        /* \"#utility.yul\":10674:10678   */\n      dup3\n        /* \"#utility.yul\":10670:10682   */\n      and\n        /* \"#utility.yul\":10701:10719   */\n      dup1\n        /* \"#utility.yul\":10691:10772   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":10757:10761   */\n      0x7f\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10745:10762   */\n      and\n        /* \"#utility.yul\":10735:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10772   */\n    tag_459:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10811:10817   */\n      dup3\n        /* \"#utility.yul\":10808:10822   */\n      lt\n        /* \"#utility.yul\":10788:10806   */\n      dup2\n        /* \"#utility.yul\":10785:10823   */\n      sub\n        /* \"#utility.yul\":10782:10866   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":10838:10856   */\n      tag_461\n      tag_329\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10782:10866   */\n    tag_460:\n        /* \"#utility.yul\":10603:10872   */\n      pop\n        /* \"#utility.yul\":10552:10872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11320   */\n    tag_121:\n        /* \"#utility.yul\":11027:11031   */\n      0x00\n        /* \"#utility.yul\":11065:11067   */\n      0x60\n        /* \"#utility.yul\":11054:11063   */\n      dup3\n        /* \"#utility.yul\":11050:11068   */\n      add\n        /* \"#utility.yul\":11042:11068   */\n      swap1\n      pop\n        /* \"#utility.yul\":11078:11149   */\n      tag_463\n        /* \"#utility.yul\":11146:11147   */\n      0x00\n        /* \"#utility.yul\":11135:11144   */\n      dup4\n        /* \"#utility.yul\":11131:11148   */\n      add\n        /* \"#utility.yul\":11122:11128   */\n      dup7\n        /* \"#utility.yul\":11078:11149   */\n      tag_315\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":11159:11231   */\n      tag_464\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11216:11225   */\n      dup4\n        /* \"#utility.yul\":11212:11230   */\n      add\n        /* \"#utility.yul\":11203:11209   */\n      dup6\n        /* \"#utility.yul\":11159:11231   */\n      tag_318\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11241:11313   */\n      tag_465\n        /* \"#utility.yul\":11309:11311   */\n      0x40\n        /* \"#utility.yul\":11298:11307   */\n      dup4\n        /* \"#utility.yul\":11294:11312   */\n      add\n        /* \"#utility.yul\":11285:11291   */\n      dup5\n        /* \"#utility.yul\":11241:11313   */\n      tag_315\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10878:11320   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11326:11506   */\n    tag_330:\n        /* \"#utility.yul\":11374:11451   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11371:11372   */\n      0x00\n        /* \"#utility.yul\":11364:11452   */\n      mstore\n        /* \"#utility.yul\":11471:11475   */\n      0x11\n        /* \"#utility.yul\":11468:11469   */\n      0x04\n        /* \"#utility.yul\":11461:11476   */\n      mstore\n        /* \"#utility.yul\":11495:11499   */\n      0x24\n        /* \"#utility.yul\":11492:11493   */\n      0x00\n        /* \"#utility.yul\":11485:11500   */\n      revert\n        /* \"#utility.yul\":11512:11745   */\n    tag_127:\n        /* \"#utility.yul\":11551:11554   */\n      0x00\n        /* \"#utility.yul\":11574:11598   */\n      tag_468\n        /* \"#utility.yul\":11592:11597   */\n      dup3\n        /* \"#utility.yul\":11574:11598   */\n      tag_310\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":11565:11598   */\n      swap2\n      pop\n        /* \"#utility.yul\":11620:11686   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11613:11618   */\n      dup3\n        /* \"#utility.yul\":11610:11687   */\n      sub\n        /* \"#utility.yul\":11607:11710   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":11690:11708   */\n      tag_470\n      tag_330\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11607:11710   */\n    tag_469:\n        /* \"#utility.yul\":11737:11738   */\n      0x01\n        /* \"#utility.yul\":11730:11735   */\n      dup3\n        /* \"#utility.yul\":11726:11739   */\n      add\n        /* \"#utility.yul\":11719:11739   */\n      swap1\n      pop\n        /* \"#utility.yul\":11512:11745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11751:11899   */\n    tag_331:\n        /* \"#utility.yul\":11853:11864   */\n      0x00\n        /* \"#utility.yul\":11890:11893   */\n      dup2\n        /* \"#utility.yul\":11875:11893   */\n      swap1\n      pop\n        /* \"#utility.yul\":11751:11899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11905:12295   */\n    tag_332:\n        /* \"#utility.yul\":12011:12014   */\n      0x00\n        /* \"#utility.yul\":12039:12078   */\n      tag_473\n        /* \"#utility.yul\":12072:12077   */\n      dup3\n        /* \"#utility.yul\":12039:12078   */\n      tag_305\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12094:12183   */\n      tag_474\n        /* \"#utility.yul\":12176:12182   */\n      dup2\n        /* \"#utility.yul\":12171:12174   */\n      dup6\n        /* \"#utility.yul\":12094:12183   */\n      tag_331\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":12087:12183   */\n      swap4\n      pop\n        /* \"#utility.yul\":12192:12257   */\n      tag_475\n        /* \"#utility.yul\":12250:12256   */\n      dup2\n        /* \"#utility.yul\":12245:12248   */\n      dup6\n        /* \"#utility.yul\":12238:12242   */\n      0x20\n        /* \"#utility.yul\":12231:12236   */\n      dup7\n        /* \"#utility.yul\":12227:12243   */\n      add\n        /* \"#utility.yul\":12192:12257   */\n      tag_307\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12282:12288   */\n      dup1\n        /* \"#utility.yul\":12277:12280   */\n      dup5\n        /* \"#utility.yul\":12273:12289   */\n      add\n        /* \"#utility.yul\":12266:12289   */\n      swap2\n      pop\n        /* \"#utility.yul\":12015:12295   */\n      pop\n        /* \"#utility.yul\":11905:12295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12301:12736   */\n    tag_166:\n        /* \"#utility.yul\":12481:12484   */\n      0x00\n        /* \"#utility.yul\":12503:12598   */\n      tag_477\n        /* \"#utility.yul\":12594:12597   */\n      dup3\n        /* \"#utility.yul\":12585:12591   */\n      dup6\n        /* \"#utility.yul\":12503:12598   */\n      tag_332\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12496:12598   */\n      swap2\n      pop\n        /* \"#utility.yul\":12615:12710   */\n      tag_478\n        /* \"#utility.yul\":12706:12709   */\n      dup3\n        /* \"#utility.yul\":12697:12703   */\n      dup5\n        /* \"#utility.yul\":12615:12710   */\n      tag_332\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12608:12710   */\n      swap2\n      pop\n        /* \"#utility.yul\":12727:12730   */\n      dup2\n        /* \"#utility.yul\":12720:12730   */\n      swap1\n      pop\n        /* \"#utility.yul\":12301:12736   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12742:12840   */\n    tag_333:\n        /* \"#utility.yul\":12793:12799   */\n      0x00\n        /* \"#utility.yul\":12827:12832   */\n      dup2\n        /* \"#utility.yul\":12821:12833   */\n      mload\n        /* \"#utility.yul\":12811:12833   */\n      swap1\n      pop\n        /* \"#utility.yul\":12742:12840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12846:13014   */\n    tag_334:\n        /* \"#utility.yul\":12929:12940   */\n      0x00\n        /* \"#utility.yul\":12963:12969   */\n      dup3\n        /* \"#utility.yul\":12958:12961   */\n      dup3\n        /* \"#utility.yul\":12951:12970   */\n      mstore\n        /* \"#utility.yul\":13003:13007   */\n      0x20\n        /* \"#utility.yul\":12998:13001   */\n      dup3\n        /* \"#utility.yul\":12994:13008   */\n      add\n        /* \"#utility.yul\":12979:13008   */\n      swap1\n      pop\n        /* \"#utility.yul\":12846:13014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13020:13393   */\n    tag_335:\n        /* \"#utility.yul\":13106:13109   */\n      0x00\n        /* \"#utility.yul\":13134:13172   */\n      tag_482\n        /* \"#utility.yul\":13166:13171   */\n      dup3\n        /* \"#utility.yul\":13134:13172   */\n      tag_333\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":13188:13258   */\n      tag_483\n        /* \"#utility.yul\":13251:13257   */\n      dup2\n        /* \"#utility.yul\":13246:13249   */\n      dup6\n        /* \"#utility.yul\":13188:13258   */\n      tag_334\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":13181:13258   */\n      swap4\n      pop\n        /* \"#utility.yul\":13267:13332   */\n      tag_484\n        /* \"#utility.yul\":13325:13331   */\n      dup2\n        /* \"#utility.yul\":13320:13323   */\n      dup6\n        /* \"#utility.yul\":13313:13317   */\n      0x20\n        /* \"#utility.yul\":13306:13311   */\n      dup7\n        /* \"#utility.yul\":13302:13318   */\n      add\n        /* \"#utility.yul\":13267:13332   */\n      tag_307\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13357:13386   */\n      tag_485\n        /* \"#utility.yul\":13379:13385   */\n      dup2\n        /* \"#utility.yul\":13357:13386   */\n      tag_308\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13352:13355   */\n      dup5\n        /* \"#utility.yul\":13348:13387   */\n      add\n        /* \"#utility.yul\":13341:13387   */\n      swap2\n      pop\n        /* \"#utility.yul\":13110:13393   */\n      pop\n        /* \"#utility.yul\":13020:13393   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13399:14039   */\n    tag_211:\n        /* \"#utility.yul\":13594:13598   */\n      0x00\n        /* \"#utility.yul\":13632:13635   */\n      0x80\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13617:13636   */\n      add\n        /* \"#utility.yul\":13609:13636   */\n      swap1\n      pop\n        /* \"#utility.yul\":13646:13717   */\n      tag_487\n        /* \"#utility.yul\":13714:13715   */\n      0x00\n        /* \"#utility.yul\":13703:13712   */\n      dup4\n        /* \"#utility.yul\":13699:13716   */\n      add\n        /* \"#utility.yul\":13690:13696   */\n      dup8\n        /* \"#utility.yul\":13646:13717   */\n      tag_315\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13727:13799   */\n      tag_488\n        /* \"#utility.yul\":13795:13797   */\n      0x20\n        /* \"#utility.yul\":13784:13793   */\n      dup4\n        /* \"#utility.yul\":13780:13798   */\n      add\n        /* \"#utility.yul\":13771:13777   */\n      dup7\n        /* \"#utility.yul\":13727:13799   */\n      tag_315\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13809:13881   */\n      tag_489\n        /* \"#utility.yul\":13877:13879   */\n      0x40\n        /* \"#utility.yul\":13866:13875   */\n      dup4\n        /* \"#utility.yul\":13862:13880   */\n      add\n        /* \"#utility.yul\":13853:13859   */\n      dup6\n        /* \"#utility.yul\":13809:13881   */\n      tag_318\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13928:13937   */\n      dup2\n        /* \"#utility.yul\":13922:13926   */\n      dup2\n        /* \"#utility.yul\":13918:13938   */\n      sub\n        /* \"#utility.yul\":13913:13915   */\n      0x60\n        /* \"#utility.yul\":13902:13911   */\n      dup4\n        /* \"#utility.yul\":13898:13916   */\n      add\n        /* \"#utility.yul\":13891:13939   */\n      mstore\n        /* \"#utility.yul\":13956:14032   */\n      tag_490\n        /* \"#utility.yul\":14027:14031   */\n      dup2\n        /* \"#utility.yul\":14018:14024   */\n      dup5\n        /* \"#utility.yul\":13956:14032   */\n      tag_335\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13948:14032   */\n      swap1\n      pop\n        /* \"#utility.yul\":13399:14039   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14045:14186   */\n    tag_336:\n        /* \"#utility.yul\":14101:14106   */\n      0x00\n        /* \"#utility.yul\":14132:14138   */\n      dup2\n        /* \"#utility.yul\":14126:14139   */\n      mload\n        /* \"#utility.yul\":14117:14139   */\n      swap1\n      pop\n        /* \"#utility.yul\":14148:14180   */\n      tag_492\n        /* \"#utility.yul\":14174:14179   */\n      dup2\n        /* \"#utility.yul\":14148:14180   */\n      tag_301\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14045:14186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14192:14541   */\n    tag_214:\n        /* \"#utility.yul\":14261:14267   */\n      0x00\n        /* \"#utility.yul\":14310:14312   */\n      0x20\n        /* \"#utility.yul\":14298:14307   */\n      dup3\n        /* \"#utility.yul\":14289:14296   */\n      dup5\n        /* \"#utility.yul\":14285:14308   */\n      sub\n        /* \"#utility.yul\":14281:14313   */\n      slt\n        /* \"#utility.yul\":14278:14397   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":14316:14395   */\n      tag_495\n      tag_298\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":14278:14397   */\n    tag_494:\n        /* \"#utility.yul\":14436:14437   */\n      0x00\n        /* \"#utility.yul\":14461:14524   */\n      tag_496\n        /* \"#utility.yul\":14516:14523   */\n      dup5\n        /* \"#utility.yul\":14507:14513   */\n      dup3\n        /* \"#utility.yul\":14496:14505   */\n      dup6\n        /* \"#utility.yul\":14492:14514   */\n      add\n        /* \"#utility.yul\":14461:14524   */\n      tag_336\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":14451:14524   */\n      swap2\n      pop\n        /* \"#utility.yul\":14407:14534   */\n      pop\n        /* \"#utility.yul\":14192:14541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14547:14727   */\n    tag_239:\n        /* \"#utility.yul\":14595:14672   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14592:14593   */\n      0x00\n        /* \"#utility.yul\":14585:14673   */\n      mstore\n        /* \"#utility.yul\":14692:14696   */\n      0x12\n        /* \"#utility.yul\":14689:14690   */\n      0x04\n        /* \"#utility.yul\":14682:14697   */\n      mstore\n        /* \"#utility.yul\":14716:14720   */\n      0x24\n        /* \"#utility.yul\":14713:14714   */\n      0x00\n        /* \"#utility.yul\":14706:14721   */\n      revert\n        /* \"#utility.yul\":14733:15065   */\n    tag_260:\n        /* \"#utility.yul\":14854:14858   */\n      0x00\n        /* \"#utility.yul\":14892:14894   */\n      0x40\n        /* \"#utility.yul\":14881:14890   */\n      dup3\n        /* \"#utility.yul\":14877:14895   */\n      add\n        /* \"#utility.yul\":14869:14895   */\n      swap1\n      pop\n        /* \"#utility.yul\":14905:14976   */\n      tag_499\n        /* \"#utility.yul\":14973:14974   */\n      0x00\n        /* \"#utility.yul\":14962:14971   */\n      dup4\n        /* \"#utility.yul\":14958:14975   */\n      add\n        /* \"#utility.yul\":14949:14955   */\n      dup6\n        /* \"#utility.yul\":14905:14976   */\n      tag_315\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14986:15058   */\n      tag_500\n        /* \"#utility.yul\":15054:15056   */\n      0x20\n        /* \"#utility.yul\":15043:15052   */\n      dup4\n        /* \"#utility.yul\":15039:15057   */\n      add\n        /* \"#utility.yul\":15030:15036   */\n      dup5\n        /* \"#utility.yul\":14986:15058   */\n      tag_318\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14733:15065   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220843de34f8733173a263e942ac84f05c437dd266382c273f9548ac27644acf28e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1814": {
									"entryPoint": null,
									"id": 1814,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2801": {
									"entryPoint": null,
									"id": 2801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2918": {
									"entryPoint": null,
									"id": 2918,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_2897": {
									"entryPoint": 325,
									"id": 2897,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:1",
										"nodeType": "YulBlock",
										"src": "0:6778:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1261:40:1",
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nativeSrc": "1272:22:1",
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nativeSrc": "1282:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:1",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:1",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nativeSrc": "1335:152:1",
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nativeSrc": "1345:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nativeSrc": "1345:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nativeSrc": "1442:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nativeSrc": "1442:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nativeSrc": "1466:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nativeSrc": "1521:152:1",
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nativeSrc": "1531:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nativeSrc": "1531:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nativeSrc": "1628:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nativeSrc": "1628:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nativeSrc": "1652:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nativeSrc": "1730:269:1",
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nativeSrc": "1740:22:1",
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nativeSrc": "1750:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nativeSrc": "1771:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nativeSrc": "1797:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:1",
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nativeSrc": "1862:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nativeSrc": "1872:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nativeSrc": "1821:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nativeSrc": "1818:81:1",
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nativeSrc": "1951:42:1",
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nativeSrc": "1965:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nativeSrc": "1965:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nativeSrc": "1935:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nativeSrc": "1912:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nativeSrc": "1909:84:1",
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:1",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:1",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nativeSrc": "2059:87:1",
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nativeSrc": "2069:11:1",
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:1",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nativeSrc": "2090:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nativeSrc": "2090:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nativeSrc": "2113:26:1",
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nativeSrc": "2121:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:1",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:1",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nativeSrc": "2196:49:1",
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nativeSrc": "2206:33:1",
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nativeSrc": "2220:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nativeSrc": "2216:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:1",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:1",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nativeSrc": "2304:54:1",
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nativeSrc": "2314:37:1",
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nativeSrc": "2335:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:1",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:1",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:1",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nativeSrc": "2440:317:1",
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nativeSrc": "2450:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nativeSrc": "2467:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nativeSrc": "2506:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:1",
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nativeSrc": "2624:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nativeSrc": "2672:30:1",
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nativeSrc": "2692:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nativeSrc": "2681:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nativeSrc": "2711:40:1",
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nativeSrc": "2721:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:1",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:1",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:1",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:1",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nativeSrc": "2808:32:1",
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nativeSrc": "2818:16:1",
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:1",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:1",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:1",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nativeSrc": "2878:28:1",
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nativeSrc": "2888:12:1",
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:1",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:1",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:1",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nativeSrc": "2972:82:1",
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nativeSrc": "2982:66:1",
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nativeSrc": "3022:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nativeSrc": "3013:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nativeSrc": "2995:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:1",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:1",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nativeSrc": "3107:28:1",
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nativeSrc": "3117:12:1",
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:1",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:1",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:1",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nativeSrc": "3217:193:1",
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nativeSrc": "3227:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nativeSrc": "3251:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:1",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nativeSrc": "3340:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nativeSrc": "3361:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nativeSrc": "3312:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nativeSrc": "3299:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nativeSrc": "3299:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:1",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:1",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:1",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nativeSrc": "3465:24:1",
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nativeSrc": "3475:8:1",
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:1",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:1",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nativeSrc": "3548:136:1",
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nativeSrc": "3558:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nativeSrc": "3572:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nativeSrc": "3613:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nativeSrc": "3613:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:1",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:1",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nativeSrc": "3740:136:1",
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:1",
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nativeSrc": "3821:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nativeSrc": "3821:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nativeSrc": "3757:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nativeSrc": "3750:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:1",
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nativeSrc": "3774:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nativeSrc": "3783:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:1",
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:1",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:1",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nativeSrc": "3961:464:1",
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:1",
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nativeSrc": "4001:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nativeSrc": "4017:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:1",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nativeSrc": "4101:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nativeSrc": "4087:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:1",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:1",
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nativeSrc": "4269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nativeSrc": "4266:49:1",
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nativeSrc": "4384:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nativeSrc": "4370:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nativeSrc": "4328:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nativeSrc": "4328:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nativeSrc": "3975:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nativeSrc": "3972:446:1",
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:1",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:1",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:1",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nativeSrc": "4494:54:1",
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nativeSrc": "4504:37:1",
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nativeSrc": "4525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:1",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:1",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:1",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nativeSrc": "4605:118:1",
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nativeSrc": "4615:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nativeSrc": "4660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nativeSrc": "4675:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nativeSrc": "4631:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nativeSrc": "4627:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:1",
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nativeSrc": "4702:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:1",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:1",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:1",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nativeSrc": "4809:214:1",
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nativeSrc": "4942:37:1",
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nativeSrc": "4950:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nativeSrc": "4988:29:1",
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nativeSrc": "5005:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nativeSrc": "4996:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:1",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:1",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:1",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:1",
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nativeSrc": "5131:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nativeSrc": "5145:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:1",
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nativeSrc": "5269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nativeSrc": "5269:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nativeSrc": "5236:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nativeSrc": "5233:56:1",
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nativeSrc": "5299:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nativeSrc": "5339:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nativeSrc": "5313:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nativeSrc": "5398:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nativeSrc": "5398:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nativeSrc": "5475:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:1",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:1",
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:1",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:1",
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nativeSrc": "5608:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nativeSrc": "5596:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nativeSrc": "5646:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:1",
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nativeSrc": "5803:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nativeSrc": "5797:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nativeSrc": "5782:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nativeSrc": "5782:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nativeSrc": "5841:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nativeSrc": "5851:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nativeSrc": "5895:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nativeSrc": "5727:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nativeSrc": "5719:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:1",
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nativeSrc": "5749:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:1",
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:1",
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nativeSrc": "6004:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nativeSrc": "5998:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:1",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nativeSrc": "6086:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nativeSrc": "6056:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nativeSrc": "6041:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nativeSrc": "6041:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nativeSrc": "5943:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nativeSrc": "5940:179:1",
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:1",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nativeSrc": "6149:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nativeSrc": "6145:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nativeSrc": "6132:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nativeSrc": "6132:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:1",
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:1",
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:1",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:1",
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nativeSrc": "6279:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nativeSrc": "6273:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nativeSrc": "6236:77:1",
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nativeSrc": "6339:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nativeSrc": "6326:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nativeSrc": "6326:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:1",
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nativeSrc": "5537:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nativeSrc": "5530:887:1",
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:1",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:1",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6494:53:1",
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nativeSrc": "6516:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nativeSrc": "6504:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nativeSrc": "6504:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:1",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:1",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nativeSrc": "6651:124:1",
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nativeSrc": "6661:26:1",
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nativeSrc": "6669:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nativeSrc": "6750:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nativeSrc": "6697:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nativeSrc": "6697:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:1",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:1",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:1",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161262d38038061262d83398181016040528101906100319190610266565b806040518060400160405280600c81526020017f566f6c756e746565724e465400000000000000000000000000000000000000008152506040518060400160405280600381526020017f564c4e0000000000000000000000000000000000000000000000000000000000815250815f90816100ac91906104cb565b5080600190816100bc91906104cb565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012691906105a9565b60405180910390fd5b61013e8161014560201b60201c565b50506105c2565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102358261020c565b9050919050565b6102458161022b565b811461024f575f80fd5b50565b5f815190506102608161023c565b92915050565b5f6020828403121561027b5761027a610208565b5b5f61028884828501610252565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061030c57607f821691505b60208210810361031f5761031e6102c8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610346565b61038b8683610346565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103cf6103ca6103c5846103a3565b6103ac565b6103a3565b9050919050565b5f819050919050565b6103e8836103b5565b6103fc6103f4826103d6565b848454610352565b825550505050565b5f90565b610410610404565b61041b8184846103df565b505050565b5b8181101561043e576104335f82610408565b600181019050610421565b5050565b601f8211156104835761045481610325565b61045d84610337565b8101602085101561046c578190505b61048061047885610337565b830182610420565b50505b505050565b5f82821c905092915050565b5f6104a35f1984600802610488565b1980831691505092915050565b5f6104bb8383610494565b9150826002028217905092915050565b6104d482610291565b67ffffffffffffffff8111156104ed576104ec61029b565b5b6104f782546102f5565b610502828285610442565b5f60209050601f831160018114610533575f8415610521578287015190505b61052b85826104b0565b865550610592565b601f19841661054186610325565b5f5b8281101561056857848901518255600182019150602085019450602081019050610543565b868310156105855784890151610581601f891682610494565b8355505b6001600288020188555050505b505050505050565b6105a38161022b565b82525050565b5f6020820190506105bc5f83018461059a565b92915050565b61205e806105cf5f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a0578063a22cb4651161006f578063a22cb465146102a1578063b88d4fde146102bd578063c87b56dd146102d9578063e985e9c514610309578063f2fde38b1461033957610109565b806370a082311461022b578063715018a61461025b5780638da5cb5b1461026557806395d89b411461028357610109565b806323b872dd116100dc57806323b872dd146101a757806340d097c3146101c357806342842e0e146101df5780636352211e146101fb57610109565b806301ffc9a71461010d57806306fdde031461013d578063081812fc1461015b578063095ea7b31461018b575b5f80fd5b61012760048036038101906101229190611895565b610355565b60405161013491906118da565b60405180910390f35b610145610436565b6040516101529190611963565b60405180910390f35b610175600480360381019061017091906119b6565b6104c5565b6040516101829190611a20565b60405180910390f35b6101a560048036038101906101a09190611a63565b6104e0565b005b6101c160048036038101906101bc9190611aa1565b6104f6565b005b6101dd60048036038101906101d89190611af1565b6105f5565b005b6101f960048036038101906101f49190611aa1565b610624565b005b610215600480360381019061021091906119b6565b610643565b6040516102229190611a20565b60405180910390f35b61024560048036038101906102409190611af1565b610654565b6040516102529190611b2b565b60405180910390f35b61026361070a565b005b61026d61071d565b60405161027a9190611a20565b60405180910390f35b61028b610745565b6040516102989190611963565b60405180910390f35b6102bb60048036038101906102b69190611b6e565b6107d5565b005b6102d760048036038101906102d29190611cd8565b6107eb565b005b6102f360048036038101906102ee91906119b6565b610808565b6040516103009190611963565b60405180910390f35b610323600480360381019061031e9190611d58565b61086e565b60405161033091906118da565b60405180910390f35b610353600480360381019061034e9190611af1565b6108fc565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061042f575061042e82610980565b5b9050919050565b60605f805461044490611dc3565b80601f016020809104026020016040519081016040528092919081815260200182805461047090611dc3565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f6104cf826109e9565b506104d982610a6f565b9050919050565b6104f282826104ed610aa8565b610aaf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610566575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161055d9190611a20565b60405180910390fd5b5f6105798383610574610aa8565b610ac1565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105ef578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105e693929190611df3565b60405180910390fd5b50505050565b6105fd610ccc565b5f60075f81548092919061061090611e55565b9190505590506106208282610d53565b5050565b61063e83838360405180602001604052805f8152506107eb565b505050565b5f61064d826109e9565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c5575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106bc9190611a20565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610712610ccc565b61071b5f610d70565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461075490611dc3565b80601f016020809104026020016040519081016040528092919081815260200182805461078090611dc3565b80156107cb5780601f106107a2576101008083540402835291602001916107cb565b820191905f5260205f20905b8154815290600101906020018083116107ae57829003601f168201915b5050505050905090565b6107e76107e0610aa8565b8383610e33565b5050565b6107f68484846104f6565b61080284848484610f9c565b50505050565b6060610813826109e9565b505f61081d61114e565b90505f81511161083b5760405180602001604052805f815250610866565b806108458461118b565b604051602001610856929190611ed6565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610904610ccc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610974575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161096b9190611a20565b60405180910390fd5b61097d81610d70565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f806109f483611255565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a6657826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a5d9190611b2b565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610abc838383600161128e565b505050565b5f80610acc84611255565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b0d57610b0c81848661144d565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b9857610b4c5f855f8061128e565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c1757600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610cd4610aa8565b73ffffffffffffffffffffffffffffffffffffffff16610cf261071d565b73ffffffffffffffffffffffffffffffffffffffff1614610d5157610d15610aa8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d489190611a20565b60405180910390fd5b565b610d6c828260405180602001604052805f815250611510565b5050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea357816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610e9a9190611a20565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f8f91906118da565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611148578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fdf610aa8565b8685856040518563ffffffff1660e01b81526004016110019493929190611f4b565b6020604051808303815f875af192505050801561103c57506040513d601f19601f820116820180604052508101906110399190611fa9565b60015b6110bd573d805f811461106a576040519150601f19603f3d011682016040523d82523d5f602084013e61106f565b606091505b505f8151036110b557836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110ac9190611a20565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461114657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161113d9190611a20565b60405180910390fd5b505b50505050565b60606040518060400160405280601281526020017f68747470733a2f2f676f6f676c652e636f6d0000000000000000000000000000815250905090565b60605f60016111998461152b565b0190505f8167ffffffffffffffff8111156111b7576111b6611bb4565b5b6040519080825280601f01601f1916602001820160405280156111e95781602001600182028036833780820191505090505b5090505f82602001820190505b60011561124a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161123f5761123e611fd4565b5b0494505f85036111f6575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806112c657505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156113f8575f6112d5846109e9565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561133f57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113525750611350818461086e565b155b1561139457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161138b9190611a20565b60405180910390fd5b81156113f657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61145883838361167c565b61150b575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114cc57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114c39190611b2b565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611502929190612001565b60405180910390fd5b505050565b61151a838361173c565b6115265f848484610f9c565b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611587577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161157d5761157c611fd4565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106115c4576d04ee2d6d415b85acef810000000083816115ba576115b9611fd4565b5b0492506020810190505b662386f26fc1000083106115f357662386f26fc1000083816115e9576115e8611fd4565b5b0492506010810190505b6305f5e100831061161c576305f5e100838161161257611611611fd4565b5b0492506008810190505b612710831061164157612710838161163757611636611fd4565b5b0492506004810190505b60648310611664576064838161165a57611659611fd4565b5b0492506002810190505b600a8310611673576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561173357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116f457506116f3848461086e565b5b8061173257508273ffffffffffffffffffffffffffffffffffffffff1661171a83610a6f565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117ac575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016117a39190611a20565b60405180910390fd5b5f6117b883835f610ac1565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461182a575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118219190611a20565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61187481611840565b811461187e575f80fd5b50565b5f8135905061188f8161186b565b92915050565b5f602082840312156118aa576118a9611838565b5b5f6118b784828501611881565b91505092915050565b5f8115159050919050565b6118d4816118c0565b82525050565b5f6020820190506118ed5f8301846118cb565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611935826118f3565b61193f81856118fd565b935061194f81856020860161190d565b6119588161191b565b840191505092915050565b5f6020820190508181035f83015261197b818461192b565b905092915050565b5f819050919050565b61199581611983565b811461199f575f80fd5b50565b5f813590506119b08161198c565b92915050565b5f602082840312156119cb576119ca611838565b5b5f6119d8848285016119a2565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a0a826119e1565b9050919050565b611a1a81611a00565b82525050565b5f602082019050611a335f830184611a11565b92915050565b611a4281611a00565b8114611a4c575f80fd5b50565b5f81359050611a5d81611a39565b92915050565b5f8060408385031215611a7957611a78611838565b5b5f611a8685828601611a4f565b9250506020611a97858286016119a2565b9150509250929050565b5f805f60608486031215611ab857611ab7611838565b5b5f611ac586828701611a4f565b9350506020611ad686828701611a4f565b9250506040611ae7868287016119a2565b9150509250925092565b5f60208284031215611b0657611b05611838565b5b5f611b1384828501611a4f565b91505092915050565b611b2581611983565b82525050565b5f602082019050611b3e5f830184611b1c565b92915050565b611b4d816118c0565b8114611b57575f80fd5b50565b5f81359050611b6881611b44565b92915050565b5f8060408385031215611b8457611b83611838565b5b5f611b9185828601611a4f565b9250506020611ba285828601611b5a565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611bea8261191b565b810181811067ffffffffffffffff82111715611c0957611c08611bb4565b5b80604052505050565b5f611c1b61182f565b9050611c278282611be1565b919050565b5f67ffffffffffffffff821115611c4657611c45611bb4565b5b611c4f8261191b565b9050602081019050919050565b828183375f83830152505050565b5f611c7c611c7784611c2c565b611c12565b905082815260208101848484011115611c9857611c97611bb0565b5b611ca3848285611c5c565b509392505050565b5f82601f830112611cbf57611cbe611bac565b5b8135611ccf848260208601611c6a565b91505092915050565b5f805f8060808587031215611cf057611cef611838565b5b5f611cfd87828801611a4f565b9450506020611d0e87828801611a4f565b9350506040611d1f878288016119a2565b925050606085013567ffffffffffffffff811115611d4057611d3f61183c565b5b611d4c87828801611cab565b91505092959194509250565b5f8060408385031215611d6e57611d6d611838565b5b5f611d7b85828601611a4f565b9250506020611d8c85828601611a4f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611dda57607f821691505b602082108103611ded57611dec611d96565b5b50919050565b5f606082019050611e065f830186611a11565b611e136020830185611b1c565b611e206040830184611a11565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e5f82611983565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e9157611e90611e28565b5b600182019050919050565b5f81905092915050565b5f611eb0826118f3565b611eba8185611e9c565b9350611eca81856020860161190d565b80840191505092915050565b5f611ee18285611ea6565b9150611eed8284611ea6565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611f1d82611ef9565b611f278185611f03565b9350611f3781856020860161190d565b611f408161191b565b840191505092915050565b5f608082019050611f5e5f830187611a11565b611f6b6020830186611a11565b611f786040830185611b1c565b8181036060830152611f8a8184611f13565b905095945050505050565b5f81519050611fa38161186b565b92915050565b5f60208284031215611fbe57611fbd611838565b5b5f611fcb84828501611f95565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506120145f830185611a11565b6120216020830184611b1c565b939250505056fea2646970667358221220843de34f8733173a263e942ac84f05c437dd266382c273f9548ac27644acf28e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x262D CODESIZE SUB DUP1 PUSH2 0x262D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x566F6C756E746565724E46540000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x564C4E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x4CB JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x4CB JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E DUP2 PUSH2 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5C2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x235 DUP3 PUSH2 0x20C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x245 DUP2 PUSH2 0x22B JUMP JUMPDEST DUP2 EQ PUSH2 0x24F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x260 DUP2 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B JUMPI PUSH2 0x27A PUSH2 0x208 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x288 DUP5 DUP3 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x30C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31F JUMPI PUSH2 0x31E PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x381 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x38B DUP7 DUP4 PUSH2 0x346 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3CF PUSH2 0x3CA PUSH2 0x3C5 DUP5 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x3FC PUSH2 0x3F4 DUP3 PUSH2 0x3D6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x352 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x410 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x41B DUP2 DUP5 DUP5 PUSH2 0x3DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH2 0x433 PUSH0 DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x421 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x483 JUMPI PUSH2 0x454 DUP2 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x45D DUP5 PUSH2 0x337 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x46C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x480 PUSH2 0x478 DUP6 PUSH2 0x337 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x420 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x488 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BB DUP4 DUP4 PUSH2 0x494 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D4 DUP3 PUSH2 0x291 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0x29B JUMP JUMPDEST JUMPDEST PUSH2 0x4F7 DUP3 SLOAD PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x502 DUP3 DUP3 DUP6 PUSH2 0x442 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x533 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x521 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x52B DUP6 DUP3 PUSH2 0x4B0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x541 DUP7 PUSH2 0x325 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x568 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x543 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x585 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x581 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x494 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5A3 DUP2 PUSH2 0x22B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5BC PUSH0 DUP4 ADD DUP5 PUSH2 0x59A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x205E DUP1 PUSH2 0x5CF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x339 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1FB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x41F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x42F JUMPI POP PUSH2 0x42E DUP3 PUSH2 0x980 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4CF DUP3 PUSH2 0x9E9 JUMP JUMPDEST POP PUSH2 0x4D9 DUP3 PUSH2 0xA6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F2 DUP3 DUP3 PUSH2 0x4ED PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x566 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x579 DUP4 DUP4 PUSH2 0x574 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5EF JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5FD PUSH2 0xCCC JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x610 SWAP1 PUSH2 0x1E55 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x620 DUP3 DUP3 PUSH2 0xD53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x63E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x64D DUP3 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x71B PUSH0 PUSH2 0xD70 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x754 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x780 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0x7E0 PUSH2 0xAA8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE33 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7F6 DUP5 DUP5 DUP5 PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0x802 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF9C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x813 DUP3 PUSH2 0x9E9 JUMP JUMPDEST POP PUSH0 PUSH2 0x81D PUSH2 0x114E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x866 JUMP JUMPDEST DUP1 PUSH2 0x845 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x856 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x904 PUSH2 0xCCC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x974 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97D DUP2 PUSH2 0xD70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9F4 DUP4 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA66 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xABC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x128E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xACC DUP5 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0D JUMPI PUSH2 0xB0C DUP2 DUP5 DUP7 PUSH2 0x144D JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB98 JUMPI PUSH2 0xB4C PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC17 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0xAA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF2 PUSH2 0x71D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD51 JUMPI PUSH2 0xD15 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD48 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xD6C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1510 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA3 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9A SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF8F SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1148 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFDF PUSH2 0xAA8 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x103C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10BD JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x106F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x10B5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AC SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1146 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113D SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68747470733A2F2F676F6F676C652E636F6D0000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1199 DUP5 PUSH2 0x152B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x1BB4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x124A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x123F JUMPI PUSH2 0x123E PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x11F6 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x12C6 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x13F8 JUMPI PUSH0 PUSH2 0x12D5 DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x133F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1352 JUMPI POP PUSH2 0x1350 DUP2 DUP5 PUSH2 0x86E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1394 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x13F6 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1458 DUP4 DUP4 DUP4 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x150B JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14CC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1502 SWAP3 SWAP2 SWAP1 PUSH2 0x2001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x151A DUP4 DUP4 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x1526 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xF9C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1587 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x157D JUMPI PUSH2 0x157C PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15C4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x15BA JUMPI PUSH2 0x15B9 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15F3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x161C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1612 JUMPI PUSH2 0x1611 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1641 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1637 JUMPI PUSH2 0x1636 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1664 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x165A JUMPI PUSH2 0x1659 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1673 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1733 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16F4 JUMPI POP PUSH2 0x16F3 DUP5 DUP5 PUSH2 0x86E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1732 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x171A DUP4 PUSH2 0xA6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A3 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x17B8 DUP4 DUP4 PUSH0 PUSH2 0xAC1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1874 DUP2 PUSH2 0x1840 JUMP JUMPDEST DUP2 EQ PUSH2 0x187E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188F DUP2 PUSH2 0x186B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP2 PUSH2 0x18C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18ED PUSH0 DUP4 ADD DUP5 PUSH2 0x18CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1935 DUP3 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x193F DUP2 DUP6 PUSH2 0x18FD JUMP JUMPDEST SWAP4 POP PUSH2 0x194F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190D JUMP JUMPDEST PUSH2 0x1958 DUP2 PUSH2 0x191B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x197B DUP2 DUP5 PUSH2 0x192B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP2 EQ PUSH2 0x199F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B0 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CB JUMPI PUSH2 0x19CA PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D8 DUP5 DUP3 DUP6 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0A DUP3 PUSH2 0x19E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1A DUP2 PUSH2 0x1A00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A33 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A42 DUP2 PUSH2 0x1A00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A5D DUP2 PUSH2 0x1A39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A86 DUP6 DUP3 DUP7 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A97 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC5 DUP7 DUP3 DUP8 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AD6 DUP7 DUP3 DUP8 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AE7 DUP7 DUP3 DUP8 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH2 0x1B05 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B13 DUP5 DUP3 DUP6 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B25 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3E PUSH0 DUP4 ADD DUP5 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B4D DUP2 PUSH2 0x18C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B57 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B68 DUP2 PUSH2 0x1B44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B84 JUMPI PUSH2 0x1B83 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B91 DUP6 DUP3 DUP7 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BA2 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1BEA DUP3 PUSH2 0x191B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x1BB4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1B PUSH2 0x182F JUMP JUMPDEST SWAP1 POP PUSH2 0x1C27 DUP3 DUP3 PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C46 JUMPI PUSH2 0x1C45 PUSH2 0x1BB4 JUMP JUMPDEST JUMPDEST PUSH2 0x1C4F DUP3 PUSH2 0x191B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7C PUSH2 0x1C77 DUP5 PUSH2 0x1C2C JUMP JUMPDEST PUSH2 0x1C12 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C98 JUMPI PUSH2 0x1C97 PUSH2 0x1BB0 JUMP JUMPDEST JUMPDEST PUSH2 0x1CA3 DUP5 DUP3 DUP6 PUSH2 0x1C5C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CBF JUMPI PUSH2 0x1CBE PUSH2 0x1BAC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CCF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CF0 JUMPI PUSH2 0x1CEF PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CFD DUP8 DUP3 DUP9 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D0E DUP8 DUP3 DUP9 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D1F DUP8 DUP3 DUP9 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D40 JUMPI PUSH2 0x1D3F PUSH2 0x183C JUMP JUMPDEST JUMPDEST PUSH2 0x1D4C DUP8 DUP3 DUP9 ADD PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D6E JUMPI PUSH2 0x1D6D PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7B DUP6 DUP3 DUP7 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D8C DUP6 DUP3 DUP7 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DDA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DED JUMPI PUSH2 0x1DEC PUSH2 0x1D96 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E06 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1E13 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x1E20 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A11 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E5F DUP3 PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB0 DUP3 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x1EBA DUP2 DUP6 PUSH2 0x1E9C JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE1 DUP3 DUP6 PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EED DUP3 DUP5 PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1D DUP3 PUSH2 0x1EF9 JUMP JUMPDEST PUSH2 0x1F27 DUP2 DUP6 PUSH2 0x1F03 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190D JUMP JUMPDEST PUSH2 0x1F40 DUP2 PUSH2 0x191B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F5E PUSH0 DUP4 ADD DUP8 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1F6B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1F78 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B1C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 DUP5 PUSH2 0x1F13 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FA3 DUP2 PUSH2 0x186B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBE JUMPI PUSH2 0x1FBD PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FCB DUP5 DUP3 DUP6 ADD PUSH2 0x1F95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2014 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x2021 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B1C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 RETURNDATASIZE 0xE3 0x4F DUP8 CALLER OR GASPRICE 0x26 RETURNDATACOPY SWAP5 0x2A 0xC8 0x4F SDIV 0xC4 CALLDATACOPY 0xDD 0x26 PUSH4 0x82C273F9 SLOAD DUP11 0xC2 PUSH23 0x44ACF28E64736F6C634300081A00330000000000000000 ",
							"sourceMap": "56066:443:0:-:0;;;56148:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;56236:12;36608:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36682:5;36674;:13;;;;;;:::i;:::-;;36707:7;36697;:17;;;;;;:::i;:::-;;36608:113;;54204:1;54180:26;;:12;:26;;;54176:95;;54257:1;54229:31;;;;;;;;;;;:::i;:::-;;;;;;;;54176:95;54280:32;54299:12;54280:18;;;:32;;:::i;:::-;54132:187;56148:108;56066:443;;55819:187;55892:16;55911:6;;;;;;;;;;;55892:25;;55936:8;55927:6;;:17;;;;;;;;;;;;;;;;;;55990:8;55959:40;;55980:8;55959:40;;;;;;;;;;;;55882:124;55819:187;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;56066:443:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_2556": {
									"entryPoint": 2735,
									"id": 2556,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2622": {
									"entryPoint": 4750,
									"id": 2622,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_2927": {
									"entryPoint": 4430,
									"id": 2927,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_2204": {
									"entryPoint": 5197,
									"id": 2204,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2752": {
									"entryPoint": 3996,
									"id": 2752,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_2835": {
									"entryPoint": 3276,
									"id": 2835,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_2131": {
									"entryPoint": 2671,
									"id": 2131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_2167": {
									"entryPoint": 5756,
									"id": 2167,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2360": {
									"entryPoint": 5948,
									"id": 2360,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_178": {
									"entryPoint": 2728,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2118": {
									"entryPoint": 4693,
									"id": 2118,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_2688": {
									"entryPoint": 2537,
									"id": 2688,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_2375": {
									"entryPoint": 3411,
									"id": 2375,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_2401": {
									"entryPoint": 5392,
									"id": 2401,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2659": {
									"entryPoint": 3635,
									"id": 2659,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_2897": {
									"entryPoint": 3440,
									"id": 2897,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_2310": {
									"entryPoint": 2753,
									"id": 2310,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_1965": {
									"entryPoint": 1248,
									"id": 1965,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1873": {
									"entryPoint": 1620,
									"id": 1873,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1982": {
									"entryPoint": 1221,
									"id": 1982,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2015": {
									"entryPoint": 2158,
									"id": 2015,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_1069": {
									"entryPoint": 5419,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1895": {
									"entryPoint": 1078,
									"id": 1895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1886": {
									"entryPoint": 1603,
									"id": 1886,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_2818": {
									"entryPoint": 1821,
									"id": 2818,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_2849": {
									"entryPoint": 1802,
									"id": 2849,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_2945": {
									"entryPoint": 1525,
									"id": 2945,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_2079": {
									"entryPoint": 1572,
									"id": 2079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2105": {
									"entryPoint": 2027,
									"id": 2105,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1998": {
									"entryPoint": 2005,
									"id": 1998,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1623": {
									"entryPoint": 2432,
									"id": 1623,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1845": {
									"entryPoint": 853,
									"id": 1845,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1904": {
									"entryPoint": 1861,
									"id": 1904,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1416": {
									"entryPoint": 4491,
									"id": 1416,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1940": {
									"entryPoint": 2056,
									"id": 1940,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2061": {
									"entryPoint": 1270,
									"id": 2061,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_2877": {
									"entryPoint": 2300,
									"id": 2877,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7894,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8193,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7667,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7260,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7574,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7084,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6204,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15068:1",
										"nodeType": "YulBlock",
										"src": "0:15068:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:105:1",
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nativeSrc": "388:89:1",
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:1",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:78:1",
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nativeSrc": "531:78:1",
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:1",
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:1",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nativeSrc": "589:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nativeSrc": "589:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nativeSrc": "561:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nativeSrc": "551:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nativeSrc": "544:42:1",
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nativeSrc": "541:62:1",
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:1",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nativeSrc": "666:86:1",
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nativeSrc": "676:29:1",
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nativeSrc": "685:20:1",
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nativeSrc": "714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nativeSrc": "714:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:1",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:1",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:1",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nativeSrc": "823:262:1",
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:1",
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nativeSrc": "871:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nativeSrc": "871:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:1",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:32:1",
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nativeSrc": "833:119:1",
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nativeSrc": "962:116:1",
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nativeSrc": "977:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:1",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nativeSrc": "1036:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nativeSrc": "1016:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:1",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:1",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:1",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nativeSrc": "1133:48:1",
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nativeSrc": "1143:32:1",
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nativeSrc": "1161:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nativeSrc": "1154:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:1",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:1",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nativeSrc": "1246:50:1",
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nativeSrc": "1268:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nativeSrc": "1256:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:1",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:1",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nativeSrc": "1394:118:1",
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nativeSrc": "1404:26:1",
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nativeSrc": "1412:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nativeSrc": "1440:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nativeSrc": "1440:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:1",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:1",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nativeSrc": "1577:40:1",
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nativeSrc": "1588:22:1",
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nativeSrc": "1598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:1",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:1",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nativeSrc": "1719:73:1",
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nativeSrc": "1729:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nativeSrc": "1729:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nativeSrc": "1757:29:1",
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nativeSrc": "1772:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:1",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:1",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:1",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nativeSrc": "1860:77:1",
													"nodeType": "YulBlock",
													"src": "1860:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:1"
																},
																"nativeSrc": "1871:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:1"
															},
															"nativeSrc": "1871:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:1"
																		},
																		"nativeSrc": "1910:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:1"
																},
																"nativeSrc": "1903:27:1",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:1"
															},
															"nativeSrc": "1903:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:1",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:1",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:1",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:139:1"
											},
											{
												"body": {
													"nativeSrc": "1991:54:1",
													"nodeType": "YulBlock",
													"src": "1991:54:1",
													"statements": [
														{
															"nativeSrc": "2001:38:1",
															"nodeType": "YulAssignment",
															"src": "2001:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:1"
																		},
																		"nativeSrc": "2015:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:1"
																		},
																		"nativeSrc": "2031:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:1"
																},
																"nativeSrc": "2011:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:1",
														"nodeType": "YulTypedName",
														"src": "1974:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:1",
														"nodeType": "YulTypedName",
														"src": "1984:6:1",
														"type": ""
													}
												],
												"src": "1943:102:1"
											},
											{
												"body": {
													"nativeSrc": "2143:285:1",
													"nodeType": "YulBlock",
													"src": "2143:285:1",
													"statements": [
														{
															"nativeSrc": "2153:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:1"
																},
																"nativeSrc": "2167:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:1",
															"nodeType": "YulAssignment",
															"src": "2215:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:1"
																},
																"nativeSrc": "2222:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:1"
																		},
																		"nativeSrc": "2337:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:1"
																},
																"nativeSrc": "2302:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:1"
															},
															"nativeSrc": "2302:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:1"
														},
														{
															"nativeSrc": "2376:46:1",
															"nodeType": "YulAssignment",
															"src": "2376:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:1"
																		},
																		"nativeSrc": "2392:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:1"
																},
																"nativeSrc": "2383:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:1",
														"nodeType": "YulTypedName",
														"src": "2124:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:1",
														"nodeType": "YulTypedName",
														"src": "2131:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:1",
														"nodeType": "YulTypedName",
														"src": "2139:3:1",
														"type": ""
													}
												],
												"src": "2051:377:1"
											},
											{
												"body": {
													"nativeSrc": "2552:195:1",
													"nodeType": "YulBlock",
													"src": "2552:195:1",
													"statements": [
														{
															"nativeSrc": "2562:26:1",
															"nodeType": "YulAssignment",
															"src": "2562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:1"
																},
																"nativeSrc": "2570:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:1"
																		},
																		"nativeSrc": "2605:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:1"
																		},
																		"nativeSrc": "2624:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:1"
																},
																"nativeSrc": "2598:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:1"
															},
															"nativeSrc": "2598:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:1"
														},
														{
															"nativeSrc": "2654:86:1",
															"nodeType": "YulAssignment",
															"src": "2654:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:1"
																},
																"nativeSrc": "2662:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:1",
														"nodeType": "YulTypedName",
														"src": "2524:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:1",
														"nodeType": "YulTypedName",
														"src": "2536:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:1",
														"nodeType": "YulTypedName",
														"src": "2547:4:1",
														"type": ""
													}
												],
												"src": "2434:313:1"
											},
											{
												"body": {
													"nativeSrc": "2798:32:1",
													"nodeType": "YulBlock",
													"src": "2798:32:1",
													"statements": [
														{
															"nativeSrc": "2808:16:1",
															"nodeType": "YulAssignment",
															"src": "2808:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:1",
																"nodeType": "YulIdentifier",
																"src": "2819:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:1",
														"nodeType": "YulTypedName",
														"src": "2780:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:1",
														"nodeType": "YulTypedName",
														"src": "2790:7:1",
														"type": ""
													}
												],
												"src": "2753:77:1"
											},
											{
												"body": {
													"nativeSrc": "2879:79:1",
													"nodeType": "YulBlock",
													"src": "2879:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:1",
																"nodeType": "YulBlock",
																"src": "2936:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:1"
																			},
																			"nativeSrc": "2938:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:1"
																		},
																		"nativeSrc": "2938:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:1"
																				},
																				"nativeSrc": "2909:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:1"
																		},
																		"nativeSrc": "2899:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:1"
																},
																"nativeSrc": "2892:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:1"
															},
															"nativeSrc": "2889:63:1",
															"nodeType": "YulIf",
															"src": "2889:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:1",
														"nodeType": "YulTypedName",
														"src": "2872:5:1",
														"type": ""
													}
												],
												"src": "2836:122:1"
											},
											{
												"body": {
													"nativeSrc": "3016:87:1",
													"nodeType": "YulBlock",
													"src": "3016:87:1",
													"statements": [
														{
															"nativeSrc": "3026:29:1",
															"nodeType": "YulAssignment",
															"src": "3026:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:1"
																},
																"nativeSrc": "3035:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:1"
																},
																"nativeSrc": "3064:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:1"
															},
															"nativeSrc": "3064:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:1",
														"nodeType": "YulTypedName",
														"src": "2994:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:1",
														"nodeType": "YulTypedName",
														"src": "3002:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:1",
														"nodeType": "YulTypedName",
														"src": "3010:5:1",
														"type": ""
													}
												],
												"src": "2964:139:1"
											},
											{
												"body": {
													"nativeSrc": "3175:263:1",
													"nodeType": "YulBlock",
													"src": "3175:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:1",
																"nodeType": "YulBlock",
																"src": "3221:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:1"
																			},
																			"nativeSrc": "3223:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:1"
																		},
																		"nativeSrc": "3223:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:1"
																		},
																		"nativeSrc": "3192:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:1"
																},
																"nativeSrc": "3188:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:1"
															},
															"nativeSrc": "3185:119:1",
															"nodeType": "YulIf",
															"src": "3185:119:1"
														},
														{
															"nativeSrc": "3314:117:1",
															"nodeType": "YulBlock",
															"src": "3314:117:1",
															"statements": [
																{
																	"nativeSrc": "3329:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:1"
																				},
																				"nativeSrc": "3389:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:1"
																		},
																		"nativeSrc": "3368:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:1",
														"nodeType": "YulTypedName",
														"src": "3145:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:1",
														"nodeType": "YulTypedName",
														"src": "3156:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:1",
														"nodeType": "YulTypedName",
														"src": "3168:6:1",
														"type": ""
													}
												],
												"src": "3109:329:1"
											},
											{
												"body": {
													"nativeSrc": "3489:81:1",
													"nodeType": "YulBlock",
													"src": "3489:81:1",
													"statements": [
														{
															"nativeSrc": "3499:65:1",
															"nodeType": "YulAssignment",
															"src": "3499:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:1",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:1"
																},
																"nativeSrc": "3510:54:1",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:1",
														"nodeType": "YulTypedName",
														"src": "3471:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:1",
														"nodeType": "YulTypedName",
														"src": "3481:7:1",
														"type": ""
													}
												],
												"src": "3444:126:1"
											},
											{
												"body": {
													"nativeSrc": "3621:51:1",
													"nodeType": "YulBlock",
													"src": "3621:51:1",
													"statements": [
														{
															"nativeSrc": "3631:35:1",
															"nodeType": "YulAssignment",
															"src": "3631:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:1"
																},
																"nativeSrc": "3642:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:1",
														"nodeType": "YulTypedName",
														"src": "3603:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:1",
														"nodeType": "YulTypedName",
														"src": "3613:7:1",
														"type": ""
													}
												],
												"src": "3576:96:1"
											},
											{
												"body": {
													"nativeSrc": "3743:53:1",
													"nodeType": "YulBlock",
													"src": "3743:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:1"
																		},
																		"nativeSrc": "3765:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:1"
																},
																"nativeSrc": "3753:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:1"
															},
															"nativeSrc": "3753:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:1",
														"nodeType": "YulTypedName",
														"src": "3731:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:1",
														"nodeType": "YulTypedName",
														"src": "3738:3:1",
														"type": ""
													}
												],
												"src": "3678:118:1"
											},
											{
												"body": {
													"nativeSrc": "3900:124:1",
													"nodeType": "YulBlock",
													"src": "3900:124:1",
													"statements": [
														{
															"nativeSrc": "3910:26:1",
															"nodeType": "YulAssignment",
															"src": "3910:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:1"
																},
																"nativeSrc": "3918:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:1"
																		},
																		"nativeSrc": "3999:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:1"
																},
																"nativeSrc": "3946:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:1"
															},
															"nativeSrc": "3946:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:1",
														"nodeType": "YulTypedName",
														"src": "3872:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:1",
														"nodeType": "YulTypedName",
														"src": "3884:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:1",
														"nodeType": "YulTypedName",
														"src": "3895:4:1",
														"type": ""
													}
												],
												"src": "3802:222:1"
											},
											{
												"body": {
													"nativeSrc": "4073:79:1",
													"nodeType": "YulBlock",
													"src": "4073:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:1",
																"nodeType": "YulBlock",
																"src": "4130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:1"
																			},
																			"nativeSrc": "4132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:1"
																		},
																		"nativeSrc": "4132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:1"
																				},
																				"nativeSrc": "4103:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:1"
																		},
																		"nativeSrc": "4093:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:1"
																},
																"nativeSrc": "4086:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:1"
															},
															"nativeSrc": "4083:63:1",
															"nodeType": "YulIf",
															"src": "4083:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:1",
														"nodeType": "YulTypedName",
														"src": "4066:5:1",
														"type": ""
													}
												],
												"src": "4030:122:1"
											},
											{
												"body": {
													"nativeSrc": "4210:87:1",
													"nodeType": "YulBlock",
													"src": "4210:87:1",
													"statements": [
														{
															"nativeSrc": "4220:29:1",
															"nodeType": "YulAssignment",
															"src": "4220:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:1"
																},
																"nativeSrc": "4229:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:1"
																},
																"nativeSrc": "4258:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:1"
															},
															"nativeSrc": "4258:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:1",
														"nodeType": "YulTypedName",
														"src": "4188:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:1",
														"nodeType": "YulTypedName",
														"src": "4196:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:1",
														"nodeType": "YulTypedName",
														"src": "4204:5:1",
														"type": ""
													}
												],
												"src": "4158:139:1"
											},
											{
												"body": {
													"nativeSrc": "4386:391:1",
													"nodeType": "YulBlock",
													"src": "4386:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:1",
																"nodeType": "YulBlock",
																"src": "4432:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:1"
																			},
																			"nativeSrc": "4434:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:1"
																		},
																		"nativeSrc": "4434:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:1"
																		},
																		"nativeSrc": "4403:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:1"
																},
																"nativeSrc": "4399:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:1"
															},
															"nativeSrc": "4396:119:1",
															"nodeType": "YulIf",
															"src": "4396:119:1"
														},
														{
															"nativeSrc": "4525:117:1",
															"nodeType": "YulBlock",
															"src": "4525:117:1",
															"statements": [
																{
																	"nativeSrc": "4540:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:1"
																				},
																				"nativeSrc": "4600:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:1"
																		},
																		"nativeSrc": "4579:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:1",
															"nodeType": "YulBlock",
															"src": "4652:118:1",
															"statements": [
																{
																	"nativeSrc": "4667:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:1"
																				},
																				"nativeSrc": "4728:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:1"
																		},
																		"nativeSrc": "4707:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:1",
														"nodeType": "YulTypedName",
														"src": "4348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:1",
														"nodeType": "YulTypedName",
														"src": "4359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:1",
														"nodeType": "YulTypedName",
														"src": "4371:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:1",
														"nodeType": "YulTypedName",
														"src": "4379:6:1",
														"type": ""
													}
												],
												"src": "4303:474:1"
											},
											{
												"body": {
													"nativeSrc": "4883:519:1",
													"nodeType": "YulBlock",
													"src": "4883:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:1",
																"nodeType": "YulBlock",
																"src": "4929:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:1"
																			},
																			"nativeSrc": "4931:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:1"
																		},
																		"nativeSrc": "4931:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:1"
																		},
																		"nativeSrc": "4900:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:1"
																},
																"nativeSrc": "4896:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:1"
															},
															"nativeSrc": "4893:119:1",
															"nodeType": "YulIf",
															"src": "4893:119:1"
														},
														{
															"nativeSrc": "5022:117:1",
															"nodeType": "YulBlock",
															"src": "5022:117:1",
															"statements": [
																{
																	"nativeSrc": "5037:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:1"
																				},
																				"nativeSrc": "5097:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:1"
																		},
																		"nativeSrc": "5076:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:1",
															"nodeType": "YulBlock",
															"src": "5149:118:1",
															"statements": [
																{
																	"nativeSrc": "5164:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:1"
																				},
																				"nativeSrc": "5225:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:1"
																		},
																		"nativeSrc": "5204:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:1",
															"nodeType": "YulBlock",
															"src": "5277:118:1",
															"statements": [
																{
																	"nativeSrc": "5292:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:1"
																				},
																				"nativeSrc": "5353:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:1"
																		},
																		"nativeSrc": "5332:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:1",
														"nodeType": "YulTypedName",
														"src": "4837:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:1",
														"nodeType": "YulTypedName",
														"src": "4848:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:1",
														"nodeType": "YulTypedName",
														"src": "4860:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:1",
														"nodeType": "YulTypedName",
														"src": "4868:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:1",
														"nodeType": "YulTypedName",
														"src": "4876:6:1",
														"type": ""
													}
												],
												"src": "4783:619:1"
											},
											{
												"body": {
													"nativeSrc": "5474:263:1",
													"nodeType": "YulBlock",
													"src": "5474:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5520:83:1",
																"nodeType": "YulBlock",
																"src": "5520:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5522:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5522:77:1"
																			},
																			"nativeSrc": "5522:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5522:79:1"
																		},
																		"nativeSrc": "5522:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5522:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5495:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5495:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5504:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5491:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5491:3:1"
																		},
																		"nativeSrc": "5491:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5491:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5516:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5487:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:1"
																},
																"nativeSrc": "5487:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5487:32:1"
															},
															"nativeSrc": "5484:119:1",
															"nodeType": "YulIf",
															"src": "5484:119:1"
														},
														{
															"nativeSrc": "5613:117:1",
															"nodeType": "YulBlock",
															"src": "5613:117:1",
															"statements": [
																{
																	"nativeSrc": "5628:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5628:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5642:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5632:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5632:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:1"
																				},
																				"nativeSrc": "5688:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5667:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:1"
																		},
																		"nativeSrc": "5667:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5657:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5408:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5444:9:1",
														"nodeType": "YulTypedName",
														"src": "5444:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5455:7:1",
														"nodeType": "YulTypedName",
														"src": "5455:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5467:6:1",
														"nodeType": "YulTypedName",
														"src": "5467:6:1",
														"type": ""
													}
												],
												"src": "5408:329:1"
											},
											{
												"body": {
													"nativeSrc": "5808:53:1",
													"nodeType": "YulBlock",
													"src": "5808:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5848:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5848:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5830:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5830:17:1"
																		},
																		"nativeSrc": "5830:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5818:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:1"
																},
																"nativeSrc": "5818:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5818:37:1"
															},
															"nativeSrc": "5818:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5818:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5743:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:1",
														"nodeType": "YulTypedName",
														"src": "5796:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5803:3:1",
														"nodeType": "YulTypedName",
														"src": "5803:3:1",
														"type": ""
													}
												],
												"src": "5743:118:1"
											},
											{
												"body": {
													"nativeSrc": "5965:124:1",
													"nodeType": "YulBlock",
													"src": "5965:124:1",
													"statements": [
														{
															"nativeSrc": "5975:26:1",
															"nodeType": "YulAssignment",
															"src": "5975:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:1"
																},
																"nativeSrc": "5983:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6055:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:1"
																		},
																		"nativeSrc": "6064:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6011:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6011:43:1"
																},
																"nativeSrc": "6011:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6011:71:1"
															},
															"nativeSrc": "6011:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6011:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5867:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:1",
														"nodeType": "YulTypedName",
														"src": "5937:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5949:6:1",
														"nodeType": "YulTypedName",
														"src": "5949:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5960:4:1",
														"nodeType": "YulTypedName",
														"src": "5960:4:1",
														"type": ""
													}
												],
												"src": "5867:222:1"
											},
											{
												"body": {
													"nativeSrc": "6135:76:1",
													"nodeType": "YulBlock",
													"src": "6135:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:1",
																"nodeType": "YulBlock",
																"src": "6189:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:1"
																			},
																			"nativeSrc": "6191:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:1"
																		},
																		"nativeSrc": "6191:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:1"
																				},
																				"nativeSrc": "6165:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:1"
																		},
																		"nativeSrc": "6155:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:1"
																},
																"nativeSrc": "6148:40:1",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:1"
															},
															"nativeSrc": "6145:60:1",
															"nodeType": "YulIf",
															"src": "6145:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:1",
														"nodeType": "YulTypedName",
														"src": "6128:5:1",
														"type": ""
													}
												],
												"src": "6095:116:1"
											},
											{
												"body": {
													"nativeSrc": "6266:84:1",
													"nodeType": "YulBlock",
													"src": "6266:84:1",
													"statements": [
														{
															"nativeSrc": "6276:29:1",
															"nodeType": "YulAssignment",
															"src": "6276:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:1"
																},
																"nativeSrc": "6285:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:1"
																},
																"nativeSrc": "6314:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:1"
															},
															"nativeSrc": "6314:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:1",
														"nodeType": "YulTypedName",
														"src": "6244:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:1",
														"nodeType": "YulTypedName",
														"src": "6252:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:1",
														"nodeType": "YulTypedName",
														"src": "6260:5:1",
														"type": ""
													}
												],
												"src": "6217:133:1"
											},
											{
												"body": {
													"nativeSrc": "6436:388:1",
													"nodeType": "YulBlock",
													"src": "6436:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:1",
																"nodeType": "YulBlock",
																"src": "6482:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:1"
																			},
																			"nativeSrc": "6484:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:1"
																		},
																		"nativeSrc": "6484:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:1"
																		},
																		"nativeSrc": "6453:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:1"
																},
																"nativeSrc": "6449:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:1"
															},
															"nativeSrc": "6446:119:1",
															"nodeType": "YulIf",
															"src": "6446:119:1"
														},
														{
															"nativeSrc": "6575:117:1",
															"nodeType": "YulBlock",
															"src": "6575:117:1",
															"statements": [
																{
																	"nativeSrc": "6590:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:1"
																				},
																				"nativeSrc": "6650:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:1"
																		},
																		"nativeSrc": "6629:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:1",
															"nodeType": "YulBlock",
															"src": "6702:115:1",
															"statements": [
																{
																	"nativeSrc": "6717:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:1",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:1"
																				},
																				"nativeSrc": "6775:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:1"
																		},
																		"nativeSrc": "6757:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:1",
														"nodeType": "YulTypedName",
														"src": "6398:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:1",
														"nodeType": "YulTypedName",
														"src": "6409:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:1",
														"nodeType": "YulTypedName",
														"src": "6421:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:1",
														"nodeType": "YulTypedName",
														"src": "6429:6:1",
														"type": ""
													}
												],
												"src": "6356:468:1"
											},
											{
												"body": {
													"nativeSrc": "6919:28:1",
													"nodeType": "YulBlock",
													"src": "6919:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:1"
																},
																"nativeSrc": "6929:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:1"
															},
															"nativeSrc": "6929:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:1"
											},
											{
												"body": {
													"nativeSrc": "7042:28:1",
													"nodeType": "YulBlock",
													"src": "7042:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:1"
																},
																"nativeSrc": "7052:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:1"
															},
															"nativeSrc": "7052:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:1"
											},
											{
												"body": {
													"nativeSrc": "7104:152:1",
													"nodeType": "YulBlock",
													"src": "7104:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:1"
																},
																"nativeSrc": "7114:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:1"
															},
															"nativeSrc": "7114:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:1"
																},
																"nativeSrc": "7211:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:1"
															},
															"nativeSrc": "7211:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:1"
																},
																"nativeSrc": "7235:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:1"
															},
															"nativeSrc": "7235:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:1"
											},
											{
												"body": {
													"nativeSrc": "7305:238:1",
													"nodeType": "YulBlock",
													"src": "7305:238:1",
													"statements": [
														{
															"nativeSrc": "7315:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:1"
																		},
																		"nativeSrc": "7345:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:1"
																},
																"nativeSrc": "7333:40:1",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:1",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:1",
																"nodeType": "YulBlock",
																"src": "7484:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:1"
																			},
																			"nativeSrc": "7486:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:1"
																		},
																		"nativeSrc": "7486:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:1",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:1"
																		},
																		"nativeSrc": "7424:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:1"
																		},
																		"nativeSrc": "7460:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:1"
																},
																"nativeSrc": "7421:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:1"
															},
															"nativeSrc": "7418:88:1",
															"nodeType": "YulIf",
															"src": "7418:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:1"
																},
																"nativeSrc": "7515:22:1",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:1"
															},
															"nativeSrc": "7515:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:1",
														"nodeType": "YulTypedName",
														"src": "7291:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:1",
														"nodeType": "YulTypedName",
														"src": "7299:4:1",
														"type": ""
													}
												],
												"src": "7262:281:1"
											},
											{
												"body": {
													"nativeSrc": "7590:88:1",
													"nodeType": "YulBlock",
													"src": "7590:88:1",
													"statements": [
														{
															"nativeSrc": "7600:30:1",
															"nodeType": "YulAssignment",
															"src": "7600:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:1"
																},
																"nativeSrc": "7610:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:1"
																},
																"nativeSrc": "7639:33:1",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:1"
															},
															"nativeSrc": "7639:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:1",
														"nodeType": "YulTypedName",
														"src": "7574:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:1",
														"nodeType": "YulTypedName",
														"src": "7583:6:1",
														"type": ""
													}
												],
												"src": "7549:129:1"
											},
											{
												"body": {
													"nativeSrc": "7750:241:1",
													"nodeType": "YulBlock",
													"src": "7750:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:1",
																"nodeType": "YulBlock",
																"src": "7855:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:1"
																			},
																			"nativeSrc": "7857:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:1"
																		},
																		"nativeSrc": "7857:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:1"
																},
																"nativeSrc": "7824:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:1"
															},
															"nativeSrc": "7821:56:1",
															"nodeType": "YulIf",
															"src": "7821:56:1"
														},
														{
															"nativeSrc": "7887:37:1",
															"nodeType": "YulAssignment",
															"src": "7887:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:1"
																},
																"nativeSrc": "7895:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:1"
																}
															]
														},
														{
															"nativeSrc": "7961:23:1",
															"nodeType": "YulAssignment",
															"src": "7961:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:1"
																},
																"nativeSrc": "7969:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:1",
														"nodeType": "YulTypedName",
														"src": "7734:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:1",
														"nodeType": "YulTypedName",
														"src": "7745:4:1",
														"type": ""
													}
												],
												"src": "7684:307:1"
											},
											{
												"body": {
													"nativeSrc": "8061:84:1",
													"nodeType": "YulBlock",
													"src": "8061:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:1"
																},
																"nativeSrc": "8072:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:1"
															},
															"nativeSrc": "8072:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:1"
																		},
																		"nativeSrc": "8118:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:1"
																},
																"nativeSrc": "8111:27:1",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:1"
															},
															"nativeSrc": "8111:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:1",
														"nodeType": "YulTypedName",
														"src": "8043:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:1",
														"nodeType": "YulTypedName",
														"src": "8048:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:1",
														"nodeType": "YulTypedName",
														"src": "8053:6:1",
														"type": ""
													}
												],
												"src": "7997:148:1"
											},
											{
												"body": {
													"nativeSrc": "8234:340:1",
													"nodeType": "YulBlock",
													"src": "8234:340:1",
													"statements": [
														{
															"nativeSrc": "8244:74:1",
															"nodeType": "YulAssignment",
															"src": "8244:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:1",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:1"
																		},
																		"nativeSrc": "8269:48:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:1"
																},
																"nativeSrc": "8253:65:1",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:1"
																},
																"nativeSrc": "8327:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:1"
															},
															"nativeSrc": "8327:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:1"
														},
														{
															"nativeSrc": "8357:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:1"
																},
																"nativeSrc": "8368:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:1",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:1",
																"nodeType": "YulBlock",
																"src": "8422:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:1"
																			},
																			"nativeSrc": "8424:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:1"
																		},
																		"nativeSrc": "8424:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:1"
																		},
																		"nativeSrc": "8399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:1"
																},
																"nativeSrc": "8396:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:1"
															},
															"nativeSrc": "8393:112:1",
															"nodeType": "YulIf",
															"src": "8393:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:1"
																},
																"nativeSrc": "8514:54:1",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:1"
															},
															"nativeSrc": "8514:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:1",
														"nodeType": "YulTypedName",
														"src": "8207:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:1",
														"nodeType": "YulTypedName",
														"src": "8212:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:1",
														"nodeType": "YulTypedName",
														"src": "8220:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:1",
														"nodeType": "YulTypedName",
														"src": "8228:5:1",
														"type": ""
													}
												],
												"src": "8151:423:1"
											},
											{
												"body": {
													"nativeSrc": "8654:277:1",
													"nodeType": "YulBlock",
													"src": "8654:277:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:1",
																"nodeType": "YulBlock",
																"src": "8703:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:1"
																			},
																			"nativeSrc": "8705:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:1"
																		},
																		"nativeSrc": "8705:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:1"
																				},
																				"nativeSrc": "8678:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:1"
																		},
																		"nativeSrc": "8674:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:1"
																},
																"nativeSrc": "8667:35:1",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:1"
															},
															"nativeSrc": "8664:122:1",
															"nodeType": "YulIf",
															"src": "8664:122:1"
														},
														{
															"nativeSrc": "8795:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:1"
																},
																"nativeSrc": "8809:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:1",
															"nodeType": "YulAssignment",
															"src": "8838:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:1",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:1"
																		},
																		"nativeSrc": "8894:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:1",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:1"
																},
																"nativeSrc": "8847:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:1",
														"nodeType": "YulTypedName",
														"src": "8632:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:1",
														"nodeType": "YulTypedName",
														"src": "8640:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:1",
														"nodeType": "YulTypedName",
														"src": "8648:5:1",
														"type": ""
													}
												],
												"src": "8593:338:1"
											},
											{
												"body": {
													"nativeSrc": "9063:817:1",
													"nodeType": "YulBlock",
													"src": "9063:817:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:1",
																"nodeType": "YulBlock",
																"src": "9110:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:1"
																			},
																			"nativeSrc": "9112:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:1"
																		},
																		"nativeSrc": "9112:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:1"
																		},
																		"nativeSrc": "9080:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:1"
																},
																"nativeSrc": "9076:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:1"
															},
															"nativeSrc": "9073:120:1",
															"nodeType": "YulIf",
															"src": "9073:120:1"
														},
														{
															"nativeSrc": "9203:117:1",
															"nodeType": "YulBlock",
															"src": "9203:117:1",
															"statements": [
																{
																	"nativeSrc": "9218:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:1"
																				},
																				"nativeSrc": "9278:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:1"
																		},
																		"nativeSrc": "9257:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:1",
															"nodeType": "YulBlock",
															"src": "9330:118:1",
															"statements": [
																{
																	"nativeSrc": "9345:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:1"
																				},
																				"nativeSrc": "9406:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:1"
																		},
																		"nativeSrc": "9385:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:1",
															"nodeType": "YulBlock",
															"src": "9458:118:1",
															"statements": [
																{
																	"nativeSrc": "9473:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:1"
																				},
																				"nativeSrc": "9534:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:1"
																		},
																		"nativeSrc": "9513:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:1",
															"nodeType": "YulBlock",
															"src": "9586:287:1",
															"statements": [
																{
																	"nativeSrc": "9601:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:1",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:1"
																				},
																				"nativeSrc": "9628:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:1"
																		},
																		"nativeSrc": "9615:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:1",
																		"nodeType": "YulBlock",
																		"src": "9694:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:1"
																					},
																					"nativeSrc": "9696:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:1"
																				},
																				"nativeSrc": "9696:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:1",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:1"
																		},
																		"nativeSrc": "9663:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:1"
																	},
																	"nativeSrc": "9660:117:1",
																	"nodeType": "YulIf",
																	"src": "9660:117:1"
																},
																{
																	"nativeSrc": "9791:72:1",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:1"
																				},
																				"nativeSrc": "9831:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:1"
																		},
																		"nativeSrc": "9801:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:1",
														"nodeType": "YulTypedName",
														"src": "9009:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:1",
														"nodeType": "YulTypedName",
														"src": "9020:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:1",
														"nodeType": "YulTypedName",
														"src": "9032:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:1",
														"nodeType": "YulTypedName",
														"src": "9040:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:1",
														"nodeType": "YulTypedName",
														"src": "9048:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:1",
														"nodeType": "YulTypedName",
														"src": "9056:6:1",
														"type": ""
													}
												],
												"src": "8937:943:1"
											},
											{
												"body": {
													"nativeSrc": "9969:391:1",
													"nodeType": "YulBlock",
													"src": "9969:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:1",
																"nodeType": "YulBlock",
																"src": "10015:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:1"
																			},
																			"nativeSrc": "10017:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:1"
																		},
																		"nativeSrc": "10017:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:1"
																		},
																		"nativeSrc": "9986:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:1"
																},
																"nativeSrc": "9982:32:1",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:1"
															},
															"nativeSrc": "9979:119:1",
															"nodeType": "YulIf",
															"src": "9979:119:1"
														},
														{
															"nativeSrc": "10108:117:1",
															"nodeType": "YulBlock",
															"src": "10108:117:1",
															"statements": [
																{
																	"nativeSrc": "10123:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:1"
																				},
																				"nativeSrc": "10183:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:1"
																		},
																		"nativeSrc": "10162:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:1",
															"nodeType": "YulBlock",
															"src": "10235:118:1",
															"statements": [
																{
																	"nativeSrc": "10250:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:1"
																				},
																				"nativeSrc": "10311:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:1"
																		},
																		"nativeSrc": "10290:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:1",
														"nodeType": "YulTypedName",
														"src": "9931:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:1",
														"nodeType": "YulTypedName",
														"src": "9942:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:1",
														"nodeType": "YulTypedName",
														"src": "9954:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:1",
														"nodeType": "YulTypedName",
														"src": "9962:6:1",
														"type": ""
													}
												],
												"src": "9886:474:1"
											},
											{
												"body": {
													"nativeSrc": "10394:152:1",
													"nodeType": "YulBlock",
													"src": "10394:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10414:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:1"
																},
																"nativeSrc": "10404:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10404:88:1"
															},
															"nativeSrc": "10404:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10404:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10508:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10508:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10511:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10511:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:1"
																},
																"nativeSrc": "10501:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10501:15:1"
															},
															"nativeSrc": "10501:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10501:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10532:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10532:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10525:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:1"
																},
																"nativeSrc": "10525:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10525:15:1"
															},
															"nativeSrc": "10525:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10525:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10366:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10366:180:1"
											},
											{
												"body": {
													"nativeSrc": "10603:269:1",
													"nodeType": "YulBlock",
													"src": "10603:269:1",
													"statements": [
														{
															"nativeSrc": "10613:22:1",
															"nodeType": "YulAssignment",
															"src": "10613:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10627:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10623:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:1"
																},
																"nativeSrc": "10623:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10623:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10613:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:1"
																}
															]
														},
														{
															"nativeSrc": "10644:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10644:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10674:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10674:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10670:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:1"
																},
																"nativeSrc": "10670:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10670:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10648:18:1",
																	"nodeType": "YulTypedName",
																	"src": "10648:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10721:51:1",
																"nodeType": "YulBlock",
																"src": "10721:51:1",
																"statements": [
																	{
																		"nativeSrc": "10735:27:1",
																		"nodeType": "YulAssignment",
																		"src": "10735:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10749:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "10749:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10757:4:1",
																					"nodeType": "YulLiteral",
																					"src": "10757:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10745:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10745:3:1"
																			},
																			"nativeSrc": "10745:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10735:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10694:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:1"
																},
																"nativeSrc": "10694:26:1",
																"nodeType": "YulFunctionCall",
																"src": "10694:26:1"
															},
															"nativeSrc": "10691:81:1",
															"nodeType": "YulIf",
															"src": "10691:81:1"
														},
														{
															"body": {
																"nativeSrc": "10824:42:1",
																"nodeType": "YulBlock",
																"src": "10824:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10838:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10838:16:1"
																			},
																			"nativeSrc": "10838:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10838:18:1"
																		},
																		"nativeSrc": "10838:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10838:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10788:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "10788:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10811:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10819:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10808:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10808:2:1"
																		},
																		"nativeSrc": "10808:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10785:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:1"
																},
																"nativeSrc": "10785:38:1",
																"nodeType": "YulFunctionCall",
																"src": "10785:38:1"
															},
															"nativeSrc": "10782:84:1",
															"nodeType": "YulIf",
															"src": "10782:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10552:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10587:4:1",
														"nodeType": "YulTypedName",
														"src": "10587:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10596:6:1",
														"nodeType": "YulTypedName",
														"src": "10596:6:1",
														"type": ""
													}
												],
												"src": "10552:320:1"
											},
											{
												"body": {
													"nativeSrc": "11032:288:1",
													"nodeType": "YulBlock",
													"src": "11032:288:1",
													"statements": [
														{
															"nativeSrc": "11042:26:1",
															"nodeType": "YulAssignment",
															"src": "11042:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11054:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11054:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11065:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11065:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11050:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11050:3:1"
																},
																"nativeSrc": "11050:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11050:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11042:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11042:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11122:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11122:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11135:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11135:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11146:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11146:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11131:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11131:3:1"
																		},
																		"nativeSrc": "11131:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11131:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11078:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11078:43:1"
																},
																"nativeSrc": "11078:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11078:71:1"
															},
															"nativeSrc": "11078:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11078:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11203:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11203:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11216:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11216:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11227:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11227:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11212:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11212:3:1"
																		},
																		"nativeSrc": "11212:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11212:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11159:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11159:43:1"
																},
																"nativeSrc": "11159:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11159:72:1"
															},
															"nativeSrc": "11159:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11159:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11285:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11285:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11298:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11298:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11309:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11309:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11294:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11294:3:1"
																		},
																		"nativeSrc": "11294:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11294:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11241:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11241:43:1"
																},
																"nativeSrc": "11241:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11241:72:1"
															},
															"nativeSrc": "11241:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11241:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10878:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10988:9:1",
														"nodeType": "YulTypedName",
														"src": "10988:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11000:6:1",
														"nodeType": "YulTypedName",
														"src": "11000:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11008:6:1",
														"nodeType": "YulTypedName",
														"src": "11008:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11016:6:1",
														"nodeType": "YulTypedName",
														"src": "11016:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11027:4:1",
														"nodeType": "YulTypedName",
														"src": "11027:4:1",
														"type": ""
													}
												],
												"src": "10878:442:1"
											},
											{
												"body": {
													"nativeSrc": "11354:152:1",
													"nodeType": "YulBlock",
													"src": "11354:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11371:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11371:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11374:77:1",
																		"nodeType": "YulLiteral",
																		"src": "11374:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11364:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11364:6:1"
																},
																"nativeSrc": "11364:88:1",
																"nodeType": "YulFunctionCall",
																"src": "11364:88:1"
															},
															"nativeSrc": "11364:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "11364:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11468:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11468:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11471:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11471:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11461:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11461:6:1"
																},
																"nativeSrc": "11461:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11461:15:1"
															},
															"nativeSrc": "11461:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11461:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11492:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11492:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11495:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11495:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11485:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11485:6:1"
																},
																"nativeSrc": "11485:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11485:15:1"
															},
															"nativeSrc": "11485:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11485:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11326:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11326:180:1"
											},
											{
												"body": {
													"nativeSrc": "11555:190:1",
													"nodeType": "YulBlock",
													"src": "11555:190:1",
													"statements": [
														{
															"nativeSrc": "11565:33:1",
															"nodeType": "YulAssignment",
															"src": "11565:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11592:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11592:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11574:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11574:17:1"
																},
																"nativeSrc": "11574:24:1",
																"nodeType": "YulFunctionCall",
																"src": "11574:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11565:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11565:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11688:22:1",
																"nodeType": "YulBlock",
																"src": "11688:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11690:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11690:16:1"
																			},
																			"nativeSrc": "11690:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11690:18:1"
																		},
																		"nativeSrc": "11690:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11690:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11613:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11613:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11620:66:1",
																		"nodeType": "YulLiteral",
																		"src": "11620:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11610:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11610:2:1"
																},
																"nativeSrc": "11610:77:1",
																"nodeType": "YulFunctionCall",
																"src": "11610:77:1"
															},
															"nativeSrc": "11607:103:1",
															"nodeType": "YulIf",
															"src": "11607:103:1"
														},
														{
															"nativeSrc": "11719:20:1",
															"nodeType": "YulAssignment",
															"src": "11719:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11730:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11730:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11737:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11726:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11726:3:1"
																},
																"nativeSrc": "11726:13:1",
																"nodeType": "YulFunctionCall",
																"src": "11726:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11719:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11512:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11541:5:1",
														"nodeType": "YulTypedName",
														"src": "11541:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11551:3:1",
														"nodeType": "YulTypedName",
														"src": "11551:3:1",
														"type": ""
													}
												],
												"src": "11512:233:1"
											},
											{
												"body": {
													"nativeSrc": "11865:34:1",
													"nodeType": "YulBlock",
													"src": "11865:34:1",
													"statements": [
														{
															"nativeSrc": "11875:18:1",
															"nodeType": "YulAssignment",
															"src": "11875:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "11890:3:1",
																"nodeType": "YulIdentifier",
																"src": "11890:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11875:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "11875:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11751:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11837:3:1",
														"nodeType": "YulTypedName",
														"src": "11837:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11842:6:1",
														"nodeType": "YulTypedName",
														"src": "11842:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11853:11:1",
														"nodeType": "YulTypedName",
														"src": "11853:11:1",
														"type": ""
													}
												],
												"src": "11751:148:1"
											},
											{
												"body": {
													"nativeSrc": "12015:280:1",
													"nodeType": "YulBlock",
													"src": "12015:280:1",
													"statements": [
														{
															"nativeSrc": "12025:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12025:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12072:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12072:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12039:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "12039:32:1"
																},
																"nativeSrc": "12039:39:1",
																"nodeType": "YulFunctionCall",
																"src": "12039:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12029:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12029:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12087:96:1",
															"nodeType": "YulAssignment",
															"src": "12087:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12171:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12171:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12176:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12176:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12094:76:1",
																	"nodeType": "YulIdentifier",
																	"src": "12094:76:1"
																},
																"nativeSrc": "12094:89:1",
																"nodeType": "YulFunctionCall",
																"src": "12094:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12087:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12087:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12231:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12231:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12238:4:1",
																				"nodeType": "YulLiteral",
																				"src": "12238:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12227:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12227:3:1"
																		},
																		"nativeSrc": "12227:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12227:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12245:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12245:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12250:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12250:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12192:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "12192:34:1"
																},
																"nativeSrc": "12192:65:1",
																"nodeType": "YulFunctionCall",
																"src": "12192:65:1"
															},
															"nativeSrc": "12192:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "12192:65:1"
														},
														{
															"nativeSrc": "12266:23:1",
															"nodeType": "YulAssignment",
															"src": "12266:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12277:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12277:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12282:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12282:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12273:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12273:3:1"
																},
																"nativeSrc": "12273:16:1",
																"nodeType": "YulFunctionCall",
																"src": "12273:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12266:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12266:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11905:390:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11996:5:1",
														"nodeType": "YulTypedName",
														"src": "11996:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12003:3:1",
														"nodeType": "YulTypedName",
														"src": "12003:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12011:3:1",
														"nodeType": "YulTypedName",
														"src": "12011:3:1",
														"type": ""
													}
												],
												"src": "11905:390:1"
											},
											{
												"body": {
													"nativeSrc": "12485:251:1",
													"nodeType": "YulBlock",
													"src": "12485:251:1",
													"statements": [
														{
															"nativeSrc": "12496:102:1",
															"nodeType": "YulAssignment",
															"src": "12496:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12585:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12585:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12594:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12594:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12503:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "12503:81:1"
																},
																"nativeSrc": "12503:95:1",
																"nodeType": "YulFunctionCall",
																"src": "12503:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12496:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12496:3:1"
																}
															]
														},
														{
															"nativeSrc": "12608:102:1",
															"nodeType": "YulAssignment",
															"src": "12608:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12697:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12697:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12706:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12706:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12615:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "12615:81:1"
																},
																"nativeSrc": "12615:95:1",
																"nodeType": "YulFunctionCall",
																"src": "12615:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12608:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:1"
																}
															]
														},
														{
															"nativeSrc": "12720:10:1",
															"nodeType": "YulAssignment",
															"src": "12720:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "12727:3:1",
																"nodeType": "YulIdentifier",
																"src": "12727:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12720:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12720:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12301:435:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12456:3:1",
														"nodeType": "YulTypedName",
														"src": "12456:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12462:6:1",
														"nodeType": "YulTypedName",
														"src": "12462:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12470:6:1",
														"nodeType": "YulTypedName",
														"src": "12470:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12481:3:1",
														"nodeType": "YulTypedName",
														"src": "12481:3:1",
														"type": ""
													}
												],
												"src": "12301:435:1"
											},
											{
												"body": {
													"nativeSrc": "12800:40:1",
													"nodeType": "YulBlock",
													"src": "12800:40:1",
													"statements": [
														{
															"nativeSrc": "12811:22:1",
															"nodeType": "YulAssignment",
															"src": "12811:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12827:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12821:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12821:5:1"
																},
																"nativeSrc": "12821:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12821:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12811:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12811:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12742:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12783:5:1",
														"nodeType": "YulTypedName",
														"src": "12783:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12793:6:1",
														"nodeType": "YulTypedName",
														"src": "12793:6:1",
														"type": ""
													}
												],
												"src": "12742:98:1"
											},
											{
												"body": {
													"nativeSrc": "12941:73:1",
													"nodeType": "YulBlock",
													"src": "12941:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12958:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12958:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12963:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12963:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12951:6:1"
																},
																"nativeSrc": "12951:19:1",
																"nodeType": "YulFunctionCall",
																"src": "12951:19:1"
															},
															"nativeSrc": "12951:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "12951:19:1"
														},
														{
															"nativeSrc": "12979:29:1",
															"nodeType": "YulAssignment",
															"src": "12979:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12998:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12998:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13003:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13003:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12994:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12994:3:1"
																},
																"nativeSrc": "12994:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12994:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12979:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "12979:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12846:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12913:3:1",
														"nodeType": "YulTypedName",
														"src": "12913:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12918:6:1",
														"nodeType": "YulTypedName",
														"src": "12918:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12929:11:1",
														"nodeType": "YulTypedName",
														"src": "12929:11:1",
														"type": ""
													}
												],
												"src": "12846:168:1"
											},
											{
												"body": {
													"nativeSrc": "13110:283:1",
													"nodeType": "YulBlock",
													"src": "13110:283:1",
													"statements": [
														{
															"nativeSrc": "13120:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13120:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13166:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13166:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "13134:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "13134:31:1"
																},
																"nativeSrc": "13134:38:1",
																"nodeType": "YulFunctionCall",
																"src": "13134:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13124:6:1",
																	"nodeType": "YulTypedName",
																	"src": "13124:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13181:77:1",
															"nodeType": "YulAssignment",
															"src": "13181:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13246:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13246:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13251:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13251:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13188:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "13188:57:1"
																},
																"nativeSrc": "13188:70:1",
																"nodeType": "YulFunctionCall",
																"src": "13188:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13181:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13181:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13306:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "13306:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13313:4:1",
																				"nodeType": "YulLiteral",
																				"src": "13313:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13302:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13302:3:1"
																		},
																		"nativeSrc": "13302:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13302:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13320:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13320:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13325:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13325:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13267:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "13267:34:1"
																},
																"nativeSrc": "13267:65:1",
																"nodeType": "YulFunctionCall",
																"src": "13267:65:1"
															},
															"nativeSrc": "13267:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "13267:65:1"
														},
														{
															"nativeSrc": "13341:46:1",
															"nodeType": "YulAssignment",
															"src": "13341:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13352:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13352:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13379:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13379:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "13357:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "13357:21:1"
																		},
																		"nativeSrc": "13357:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13357:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13348:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13348:3:1"
																},
																"nativeSrc": "13348:39:1",
																"nodeType": "YulFunctionCall",
																"src": "13348:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13341:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13341:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "13020:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13091:5:1",
														"nodeType": "YulTypedName",
														"src": "13091:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13098:3:1",
														"nodeType": "YulTypedName",
														"src": "13098:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13106:3:1",
														"nodeType": "YulTypedName",
														"src": "13106:3:1",
														"type": ""
													}
												],
												"src": "13020:373:1"
											},
											{
												"body": {
													"nativeSrc": "13599:440:1",
													"nodeType": "YulBlock",
													"src": "13599:440:1",
													"statements": [
														{
															"nativeSrc": "13609:27:1",
															"nodeType": "YulAssignment",
															"src": "13609:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13621:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13621:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13632:3:1",
																		"nodeType": "YulLiteral",
																		"src": "13632:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13617:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13617:3:1"
																},
																"nativeSrc": "13617:19:1",
																"nodeType": "YulFunctionCall",
																"src": "13617:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13609:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13609:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13690:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13690:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13703:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13703:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13714:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13714:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13699:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13699:3:1"
																		},
																		"nativeSrc": "13699:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13699:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13646:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13646:43:1"
																},
																"nativeSrc": "13646:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13646:71:1"
															},
															"nativeSrc": "13646:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13646:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13771:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13771:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13784:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13784:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13795:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13795:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13780:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13780:3:1"
																		},
																		"nativeSrc": "13780:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13780:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13727:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13727:43:1"
																},
																"nativeSrc": "13727:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13727:72:1"
															},
															"nativeSrc": "13727:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13727:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13853:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13853:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13866:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13866:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13877:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13877:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13862:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13862:3:1"
																		},
																		"nativeSrc": "13862:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13862:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13809:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13809:43:1"
																},
																"nativeSrc": "13809:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13809:72:1"
															},
															"nativeSrc": "13809:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13809:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13902:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13902:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13913:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13913:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13898:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13898:3:1"
																		},
																		"nativeSrc": "13898:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13898:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13922:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "13922:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13918:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13918:3:1"
																		},
																		"nativeSrc": "13918:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13918:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13891:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13891:6:1"
																},
																"nativeSrc": "13891:48:1",
																"nodeType": "YulFunctionCall",
																"src": "13891:48:1"
															},
															"nativeSrc": "13891:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "13891:48:1"
														},
														{
															"nativeSrc": "13948:84:1",
															"nodeType": "YulAssignment",
															"src": "13948:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14018:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14018:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14027:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14027:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13956:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "13956:61:1"
																},
																"nativeSrc": "13956:76:1",
																"nodeType": "YulFunctionCall",
																"src": "13956:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13948:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13948:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "13399:640:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13547:9:1",
														"nodeType": "YulTypedName",
														"src": "13547:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13559:6:1",
														"nodeType": "YulTypedName",
														"src": "13559:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13567:6:1",
														"nodeType": "YulTypedName",
														"src": "13567:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13575:6:1",
														"nodeType": "YulTypedName",
														"src": "13575:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13583:6:1",
														"nodeType": "YulTypedName",
														"src": "13583:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13594:4:1",
														"nodeType": "YulTypedName",
														"src": "13594:4:1",
														"type": ""
													}
												],
												"src": "13399:640:1"
											},
											{
												"body": {
													"nativeSrc": "14107:79:1",
													"nodeType": "YulBlock",
													"src": "14107:79:1",
													"statements": [
														{
															"nativeSrc": "14117:22:1",
															"nodeType": "YulAssignment",
															"src": "14117:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14132:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14132:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14126:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "14126:5:1"
																},
																"nativeSrc": "14126:13:1",
																"nodeType": "YulFunctionCall",
																"src": "14126:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14117:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "14117:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14174:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "14174:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "14148:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "14148:25:1"
																},
																"nativeSrc": "14148:32:1",
																"nodeType": "YulFunctionCall",
																"src": "14148:32:1"
															},
															"nativeSrc": "14148:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "14148:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "14045:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14085:6:1",
														"nodeType": "YulTypedName",
														"src": "14085:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14093:3:1",
														"nodeType": "YulTypedName",
														"src": "14093:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14101:5:1",
														"nodeType": "YulTypedName",
														"src": "14101:5:1",
														"type": ""
													}
												],
												"src": "14045:141:1"
											},
											{
												"body": {
													"nativeSrc": "14268:273:1",
													"nodeType": "YulBlock",
													"src": "14268:273:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "14314:83:1",
																"nodeType": "YulBlock",
																"src": "14314:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14316:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "14316:77:1"
																			},
																			"nativeSrc": "14316:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14316:79:1"
																		},
																		"nativeSrc": "14316:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "14316:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14289:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "14289:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14298:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14298:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14285:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14285:3:1"
																		},
																		"nativeSrc": "14285:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14285:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14310:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14310:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14281:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14281:3:1"
																},
																"nativeSrc": "14281:32:1",
																"nodeType": "YulFunctionCall",
																"src": "14281:32:1"
															},
															"nativeSrc": "14278:119:1",
															"nodeType": "YulIf",
															"src": "14278:119:1"
														},
														{
															"nativeSrc": "14407:127:1",
															"nodeType": "YulBlock",
															"src": "14407:127:1",
															"statements": [
																{
																	"nativeSrc": "14422:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14422:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14436:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14436:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14426:6:1",
																			"nodeType": "YulTypedName",
																			"src": "14426:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14451:73:1",
																	"nodeType": "YulAssignment",
																	"src": "14451:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14496:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "14496:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14507:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "14507:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14492:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "14492:3:1"
																				},
																				"nativeSrc": "14492:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14492:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14516:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "14516:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "14461:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "14461:30:1"
																		},
																		"nativeSrc": "14461:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14461:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14451:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "14451:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "14192:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14238:9:1",
														"nodeType": "YulTypedName",
														"src": "14238:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14249:7:1",
														"nodeType": "YulTypedName",
														"src": "14249:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14261:6:1",
														"nodeType": "YulTypedName",
														"src": "14261:6:1",
														"type": ""
													}
												],
												"src": "14192:349:1"
											},
											{
												"body": {
													"nativeSrc": "14575:152:1",
													"nodeType": "YulBlock",
													"src": "14575:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14592:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14592:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14595:77:1",
																		"nodeType": "YulLiteral",
																		"src": "14595:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14585:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14585:6:1"
																},
																"nativeSrc": "14585:88:1",
																"nodeType": "YulFunctionCall",
																"src": "14585:88:1"
															},
															"nativeSrc": "14585:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "14585:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14689:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14689:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14692:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14692:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14682:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14682:6:1"
																},
																"nativeSrc": "14682:15:1",
																"nodeType": "YulFunctionCall",
																"src": "14682:15:1"
															},
															"nativeSrc": "14682:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "14682:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14713:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14713:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14716:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14716:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14706:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14706:6:1"
																},
																"nativeSrc": "14706:15:1",
																"nodeType": "YulFunctionCall",
																"src": "14706:15:1"
															},
															"nativeSrc": "14706:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "14706:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14547:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14547:180:1"
											},
											{
												"body": {
													"nativeSrc": "14859:206:1",
													"nodeType": "YulBlock",
													"src": "14859:206:1",
													"statements": [
														{
															"nativeSrc": "14869:26:1",
															"nodeType": "YulAssignment",
															"src": "14869:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14881:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14881:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14892:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14892:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14877:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14877:3:1"
																},
																"nativeSrc": "14877:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14877:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14869:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14869:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14949:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14962:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14973:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14973:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14958:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14958:3:1"
																		},
																		"nativeSrc": "14958:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14958:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14905:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14905:43:1"
																},
																"nativeSrc": "14905:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14905:71:1"
															},
															"nativeSrc": "14905:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14905:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15030:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15030:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15043:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15043:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15054:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15054:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15039:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15039:3:1"
																		},
																		"nativeSrc": "15039:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15039:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14986:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14986:43:1"
																},
																"nativeSrc": "14986:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14986:72:1"
															},
															"nativeSrc": "14986:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14986:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14733:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14823:9:1",
														"nodeType": "YulTypedName",
														"src": "14823:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14835:6:1",
														"nodeType": "YulTypedName",
														"src": "14835:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14843:6:1",
														"nodeType": "YulTypedName",
														"src": "14843:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14854:4:1",
														"nodeType": "YulTypedName",
														"src": "14854:4:1",
														"type": ""
													}
												],
												"src": "14733:332:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x339 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1FB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x41F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x42F JUMPI POP PUSH2 0x42E DUP3 PUSH2 0x980 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4CF DUP3 PUSH2 0x9E9 JUMP JUMPDEST POP PUSH2 0x4D9 DUP3 PUSH2 0xA6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F2 DUP3 DUP3 PUSH2 0x4ED PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x566 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x579 DUP4 DUP4 PUSH2 0x574 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5EF JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5FD PUSH2 0xCCC JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x610 SWAP1 PUSH2 0x1E55 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x620 DUP3 DUP3 PUSH2 0xD53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x63E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x64D DUP3 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x71B PUSH0 PUSH2 0xD70 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x754 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x780 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0x7E0 PUSH2 0xAA8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE33 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7F6 DUP5 DUP5 DUP5 PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0x802 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF9C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x813 DUP3 PUSH2 0x9E9 JUMP JUMPDEST POP PUSH0 PUSH2 0x81D PUSH2 0x114E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x866 JUMP JUMPDEST DUP1 PUSH2 0x845 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x856 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x904 PUSH2 0xCCC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x974 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97D DUP2 PUSH2 0xD70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9F4 DUP4 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA66 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xABC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x128E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xACC DUP5 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0D JUMPI PUSH2 0xB0C DUP2 DUP5 DUP7 PUSH2 0x144D JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB98 JUMPI PUSH2 0xB4C PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC17 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0xAA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF2 PUSH2 0x71D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD51 JUMPI PUSH2 0xD15 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD48 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xD6C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1510 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA3 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9A SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF8F SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1148 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFDF PUSH2 0xAA8 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x103C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10BD JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x106F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x10B5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AC SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1146 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113D SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68747470733A2F2F676F6F676C652E636F6D0000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1199 DUP5 PUSH2 0x152B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x1BB4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x124A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x123F JUMPI PUSH2 0x123E PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x11F6 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x12C6 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x13F8 JUMPI PUSH0 PUSH2 0x12D5 DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x133F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1352 JUMPI POP PUSH2 0x1350 DUP2 DUP5 PUSH2 0x86E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1394 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x13F6 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1458 DUP4 DUP4 DUP4 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x150B JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14CC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1502 SWAP3 SWAP2 SWAP1 PUSH2 0x2001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x151A DUP4 DUP4 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x1526 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xF9C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1587 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x157D JUMPI PUSH2 0x157C PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15C4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x15BA JUMPI PUSH2 0x15B9 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15F3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x161C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1612 JUMPI PUSH2 0x1611 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1641 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1637 JUMPI PUSH2 0x1636 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1664 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x165A JUMPI PUSH2 0x1659 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1673 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1733 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16F4 JUMPI POP PUSH2 0x16F3 DUP5 DUP5 PUSH2 0x86E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1732 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x171A DUP4 PUSH2 0xA6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A3 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x17B8 DUP4 DUP4 PUSH0 PUSH2 0xAC1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1874 DUP2 PUSH2 0x1840 JUMP JUMPDEST DUP2 EQ PUSH2 0x187E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188F DUP2 PUSH2 0x186B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP2 PUSH2 0x18C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18ED PUSH0 DUP4 ADD DUP5 PUSH2 0x18CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1935 DUP3 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x193F DUP2 DUP6 PUSH2 0x18FD JUMP JUMPDEST SWAP4 POP PUSH2 0x194F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190D JUMP JUMPDEST PUSH2 0x1958 DUP2 PUSH2 0x191B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x197B DUP2 DUP5 PUSH2 0x192B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP2 EQ PUSH2 0x199F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B0 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CB JUMPI PUSH2 0x19CA PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D8 DUP5 DUP3 DUP6 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0A DUP3 PUSH2 0x19E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1A DUP2 PUSH2 0x1A00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A33 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A42 DUP2 PUSH2 0x1A00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A5D DUP2 PUSH2 0x1A39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A86 DUP6 DUP3 DUP7 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A97 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC5 DUP7 DUP3 DUP8 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AD6 DUP7 DUP3 DUP8 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AE7 DUP7 DUP3 DUP8 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH2 0x1B05 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B13 DUP5 DUP3 DUP6 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B25 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3E PUSH0 DUP4 ADD DUP5 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B4D DUP2 PUSH2 0x18C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B57 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B68 DUP2 PUSH2 0x1B44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B84 JUMPI PUSH2 0x1B83 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B91 DUP6 DUP3 DUP7 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BA2 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1BEA DUP3 PUSH2 0x191B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x1BB4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1B PUSH2 0x182F JUMP JUMPDEST SWAP1 POP PUSH2 0x1C27 DUP3 DUP3 PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C46 JUMPI PUSH2 0x1C45 PUSH2 0x1BB4 JUMP JUMPDEST JUMPDEST PUSH2 0x1C4F DUP3 PUSH2 0x191B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7C PUSH2 0x1C77 DUP5 PUSH2 0x1C2C JUMP JUMPDEST PUSH2 0x1C12 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C98 JUMPI PUSH2 0x1C97 PUSH2 0x1BB0 JUMP JUMPDEST JUMPDEST PUSH2 0x1CA3 DUP5 DUP3 DUP6 PUSH2 0x1C5C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CBF JUMPI PUSH2 0x1CBE PUSH2 0x1BAC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CCF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CF0 JUMPI PUSH2 0x1CEF PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CFD DUP8 DUP3 DUP9 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D0E DUP8 DUP3 DUP9 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D1F DUP8 DUP3 DUP9 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D40 JUMPI PUSH2 0x1D3F PUSH2 0x183C JUMP JUMPDEST JUMPDEST PUSH2 0x1D4C DUP8 DUP3 DUP9 ADD PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D6E JUMPI PUSH2 0x1D6D PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7B DUP6 DUP3 DUP7 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D8C DUP6 DUP3 DUP7 ADD PUSH2 0x1A4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DDA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DED JUMPI PUSH2 0x1DEC PUSH2 0x1D96 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E06 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1E13 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x1E20 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A11 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E5F DUP3 PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB0 DUP3 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x1EBA DUP2 DUP6 PUSH2 0x1E9C JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE1 DUP3 DUP6 PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EED DUP3 DUP5 PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1D DUP3 PUSH2 0x1EF9 JUMP JUMPDEST PUSH2 0x1F27 DUP2 DUP6 PUSH2 0x1F03 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190D JUMP JUMPDEST PUSH2 0x1F40 DUP2 PUSH2 0x191B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F5E PUSH0 DUP4 ADD DUP8 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1F6B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1F78 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B1C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 DUP5 PUSH2 0x1F13 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FA3 DUP2 PUSH2 0x186B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBE JUMPI PUSH2 0x1FBD PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FCB DUP5 DUP3 DUP6 ADD PUSH2 0x1F95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2014 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x2021 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B1C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 RETURNDATASIZE 0xE3 0x4F DUP8 CALLER OR GASPRICE 0x26 RETURNDATACOPY SWAP5 0x2A 0xC8 0x4F SDIV 0xC4 CALLDATACOPY 0xDD 0x26 PUSH4 0x82C273F9 SLOAD DUP11 0xC2 PUSH23 0x44ACF28E64736F6C634300081A00330000000000000000 ",
							"sourceMap": "56066:443:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36788:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37592:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38724:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38550:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;39370:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;56379:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;40014:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;37412:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37147:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55200:101;;;:::i;:::-;;54545:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37745:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38945:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;40212:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;37904:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39155:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55450:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;36788:300;36890:4;36940:25;36925:40;;;:11;:40;;;;:104;;;;36996:33;36981:48;;;:11;:48;;;;36925:104;:156;;;;37045:36;37069:11;37045:23;:36::i;:::-;36925:156;36906:175;;36788:300;;;:::o;37592:89::-;37637:13;37669:5;37662:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37592:89;:::o;38724:154::-;38791:7;38810:22;38824:7;38810:13;:22::i;:::-;;38850:21;38863:7;38850:12;:21::i;:::-;38843:28;;38724:154;;;:::o;38550:113::-;38621:35;38630:2;38634:7;38643:12;:10;:12::i;:::-;38621:8;:35::i;:::-;38550:113;;:::o;39370:578::-;39478:1;39464:16;;:2;:16;;;39460:87;;39533:1;39503:33;;;;;;;;;;;:::i;:::-;;;;;;;;39460:87;39765:21;39789:34;39797:2;39801:7;39810:12;:10;:12::i;:::-;39789:7;:34::i;:::-;39765:58;;39854:4;39837:21;;:13;:21;;;39833:109;;39902:4;39908:7;39917:13;39881:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;39833:109;39450:498;39370:578;;;:::o;56379:128::-;54438:13;:11;:13::i;:::-;56436:15:::1;56454:12;;:14;;;;;;;;;:::i;:::-;;;;;56436:32;;56478:22;56488:2;56492:7;56478:9;:22::i;:::-;56426:81;56379:128:::0;:::o;40014:132::-;40100:39;40117:4;40123:2;40127:7;40100:39;;;;;;;;;;;;:16;:39::i;:::-;40014:132;;;:::o;37412:118::-;37475:7;37501:22;37515:7;37501:13;:22::i;:::-;37494:29;;37412:118;;;:::o;37147:208::-;37210:7;37250:1;37233:19;;:5;:19;;;37229:87;;37302:1;37275:30;;;;;;;;;;;:::i;:::-;;;;;;;;37229:87;37332:9;:16;37342:5;37332:16;;;;;;;;;;;;;;;;37325:23;;37147:208;;;:::o;55200:101::-;54438:13;:11;:13::i;:::-;55264:30:::1;55291:1;55264:18;:30::i;:::-;55200:101::o:0;54545:85::-;54591:7;54617:6;;;;;;;;;;;54610:13;;54545:85;:::o;37745:93::-;37792:13;37824:7;37817:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37745:93;:::o;38945:144::-;39030:52;39049:12;:10;:12::i;:::-;39063:8;39073;39030:18;:52::i;:::-;38945:144;;:::o;40212:208::-;40325:31;40338:4;40344:2;40348:7;40325:12;:31::i;:::-;40366:47;40389:4;40395:2;40399:7;40408:4;40366:22;:47::i;:::-;40212:208;;;;:::o;37904:255::-;37968:13;37993:22;38007:7;37993:13;:22::i;:::-;;38026:21;38050:10;:8;:10::i;:::-;38026:34;;38101:1;38083:7;38077:21;:25;:75;;;;;;;;;;;;;;;;;38119:7;38128:18;:7;:16;:18::i;:::-;38105:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;38077:75;38070:82;;;37904:255;;;:::o;39155:153::-;39243:4;39266:18;:25;39285:5;39266:25;;;;;;;;;;;;;;;:35;39292:8;39266:35;;;;;;;;;;;;;;;;;;;;;;;;;39259:42;;39155:153;;;;:::o;55450:215::-;54438:13;:11;:13::i;:::-;55554:1:::1;55534:22;;:8;:22;;::::0;55530:91:::1;;55607:1;55579:31;;;;;;;;;;;:::i;:::-;;;;;;;;55530:91;55630:28;55649:8;55630:18;:28::i;:::-;55450:215:::0;:::o;28873:146::-;28949:4;28987:25;28972:40;;;:11;:40;;;;28965:47;;28873:146;;;:::o;51365:241::-;51428:7;51447:13;51463:17;51472:7;51463:8;:17::i;:::-;51447:33;;51511:1;51494:19;;:5;:19;;;51490:88;;51559:7;51536:31;;;;;;;;;;;:::i;:::-;;;;;;;;51490:88;51594:5;51587:12;;;51365:241;;;:::o;41165:127::-;41235:7;41261:15;:24;41277:7;41261:24;;;;;;;;;;;;;;;;;;;;;41254:31;;41165:127;;;:::o;8338:96::-;8391:7;8417:10;8410:17;;8338:96;:::o;49645:120::-;49725:33;49734:2;49738:7;49747:4;49753;49725:8;:33::i;:::-;49645:120;;;:::o;44065:795::-;44151:7;44170:12;44185:17;44194:7;44185:8;:17::i;:::-;44170:32;;44278:1;44262:18;;:4;:18;;;44258:86;;44296:37;44313:4;44319;44325:7;44296:16;:37::i;:::-;44258:86;44404:1;44388:18;;:4;:18;;;44384:256;;44504:48;44521:1;44525:7;44542:1;44546:5;44504:8;:48::i;:::-;44614:1;44595:9;:15;44605:4;44595:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;44384:256;44668:1;44654:16;;:2;:16;;;44650:107;;44731:1;44714:9;:13;44724:2;44714:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;44650:107;44786:2;44767:7;:16;44775:7;44767:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;44823:7;44819:2;44804:27;;44813:4;44804:27;;;;;;;;;;;;44849:4;44842:11;;;44065:795;;;;;:::o;54703:162::-;54773:12;:10;:12::i;:::-;54762:23;;:7;:5;:7::i;:::-;:23;;;54758:101;;54835:12;:10;:12::i;:::-;54808:40;;;;;;;;;;;:::i;:::-;;;;;;;;54758:101;54703:162::o;45860:100::-;45927:26;45937:2;45941:7;45927:26;;;;;;;;;;;;:9;:26::i;:::-;45860:100;;:::o;55819:187::-;55892:16;55911:6;;;;;;;;;;;55892:25;;55936:8;55927:6;;:17;;;;;;;;;;;;;;;;;;55990:8;55959:40;;55980:8;55959:40;;;;;;;;;;;;55882:124;55819:187;:::o;50818:312::-;50945:1;50925:22;;:8;:22;;;50921:91;;50992:8;50970:31;;;;;;;;;;;:::i;:::-;;;;;;;;50921:91;51059:8;51021:18;:25;51040:5;51021:25;;;;;;;;;;;;;;;:35;51047:8;51021:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;51104:8;51082:41;;51097:5;51082:41;;;51114:8;51082:41;;;;;;:::i;:::-;;;;;;;;50818:312;;;:::o;52145:782::-;52278:1;52261:2;:14;;;:18;52257:664;;;52315:2;52299:36;;;52336:12;:10;:12::i;:::-;52350:4;52356:7;52365:4;52299:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;52295:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52625:1;52608:6;:13;:18;52604:293;;52679:2;52657:25;;;;;;;;;;;:::i;:::-;;;;;;;;52604:293;52849:6;52843:13;52834:6;52830:2;52826:15;52819:38;52295:616;52427:41;;;52417:51;;;:6;:51;;;;52413:130;;52521:2;52499:25;;;;;;;;;;;:::i;:::-;;;;;;;;52413:130;52371:186;52257:664;52145:782;;;;:::o;56262:111::-;56314:13;56339:27;;;;;;;;;;;;;;;;;;;56262:111;:::o;25653:698::-;25709:13;25758:14;25795:1;25775:17;25786:5;25775:10;:17::i;:::-;:21;25758:38;;25810:20;25844:6;25833:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25810:41;;25865:11;25991:6;25987:2;25983:15;25975:6;25971:28;25964:35;;26026:282;26033:4;26026:282;;;26057:5;;;;;;;;26196:10;26191:2;26184:5;26180:14;26175:32;26170:3;26162:46;26252:2;26243:11;;;;;;:::i;:::-;;;;;26285:1;26276:5;:10;26026:282;26272:21;26026:282;26328:6;26321:13;;;;;25653:698;;;:::o;40934:115::-;41000:7;41026;:16;41034:7;41026:16;;;;;;;;;;;;;;;;;;;;;41019:23;;40934:115;;;:::o;49947:662::-;50107:9;:31;;;;50136:1;50120:18;;:4;:18;;;;50107:31;50103:460;;;50154:13;50170:22;50184:7;50170:13;:22::i;:::-;50154:38;;50336:1;50320:18;;:4;:18;;;;:35;;;;;50351:4;50342:13;;:5;:13;;;;50320:35;:69;;;;;50360:29;50377:5;50384:4;50360:16;:29::i;:::-;50359:30;50320:69;50316:142;;;50438:4;50416:27;;;;;;;;;;;:::i;:::-;;;;;;;;50316:142;50476:9;50472:81;;;50530:7;50526:2;50510:28;;50519:5;50510:28;;;;;;;;;;;;50472:81;50140:423;50103:460;50600:2;50573:15;:24;50589:7;50573:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;49947:662;;;;:::o;42309:368::-;42421:38;42435:5;42442:7;42451;42421:13;:38::i;:::-;42416:255;;42496:1;42479:19;;:5;:19;;;42475:186;;42548:7;42525:31;;;;;;;;;;;:::i;:::-;;;;;;;;42475:186;42629:7;42638;42602:44;;;;;;;;;;;;:::i;:::-;;;;;;;;42416:255;42309:368;;;:::o;46181:182::-;46275:18;46281:2;46285:7;46275:5;:18::i;:::-;46303:53;46334:1;46338:2;46342:7;46351:4;46303:22;:53::i;:::-;46181:182;;;:::o;20883:916::-;20936:7;20955:14;20972:1;20955:18;;21020:8;21011:5;:17;21007:103;;21057:8;21048:17;;;;;;:::i;:::-;;;;;21093:2;21083:12;;;;21007:103;21136:8;21127:5;:17;21123:103;;21173:8;21164:17;;;;;;:::i;:::-;;;;;21209:2;21199:12;;;;21123:103;21252:8;21243:5;:17;21239:103;;21289:8;21280:17;;;;;;:::i;:::-;;;;;21325:2;21315:12;;;;21239:103;21368:7;21359:5;:16;21355:100;;21404:7;21395:16;;;;;;:::i;:::-;;;;;21439:1;21429:11;;;;21355:100;21481:7;21472:5;:16;21468:100;;21517:7;21508:16;;;;;;:::i;:::-;;;;;21552:1;21542:11;;;;21468:100;21594:7;21585:5;:16;21581:100;;21630:7;21621:16;;;;;;:::i;:::-;;;;;21665:1;21655:11;;;;21581:100;21707:7;21698:5;:16;21694:66;;21744:1;21734:11;;;;21694:66;21786:6;21779:13;;;20883:916;;;:::o;41603:272::-;41706:4;41760:1;41741:21;;:7;:21;;;;:127;;;;;41788:7;41779:16;;:5;:16;;;:52;;;;41799:32;41816:5;41823:7;41799:16;:32::i;:::-;41779:52;:88;;;;41860:7;41835:32;;:21;41848:7;41835:12;:21::i;:::-;:32;;;41779:88;41741:127;41722:146;;41603:272;;;;;:::o;45182:327::-;45263:1;45249:16;;:2;:16;;;45245:87;;45318:1;45288:33;;;;;;;;;;;:::i;:::-;;;;;;;;45245:87;45341:21;45365:32;45373:2;45377:7;45394:1;45365:7;:32::i;:::-;45341:56;;45436:1;45411:27;;:13;:27;;;45407:96;;45489:1;45461:31;;;;;;;;;;;:::i;:::-;;;;;;;;45407:96;45235:274;45182:327;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:329::-;5467:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:119;;;5522:79;;:::i;:::-;5484:119;5642:1;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5613:117;5408:329;;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:180::-;10414:77;10411:1;10404:88;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15;10552:320;10596:6;10633:1;10627:4;10623:12;10613:22;;10680:1;10674:4;10670:12;10701:18;10691:81;;10757:4;10749:6;10745:17;10735:27;;10691:81;10819:2;10811:6;10808:14;10788:18;10785:38;10782:84;;10838:18;;:::i;:::-;10782:84;10603:269;10552:320;;;:::o;10878:442::-;11027:4;11065:2;11054:9;11050:18;11042:26;;11078:71;11146:1;11135:9;11131:17;11122:6;11078:71;:::i;:::-;11159:72;11227:2;11216:9;11212:18;11203:6;11159:72;:::i;:::-;11241;11309:2;11298:9;11294:18;11285:6;11241:72;:::i;:::-;10878:442;;;;;;:::o;11326:180::-;11374:77;11371:1;11364:88;11471:4;11468:1;11461:15;11495:4;11492:1;11485:15;11512:233;11551:3;11574:24;11592:5;11574:24;:::i;:::-;11565:33;;11620:66;11613:5;11610:77;11607:103;;11690:18;;:::i;:::-;11607:103;11737:1;11730:5;11726:13;11719:20;;11512:233;;;:::o;11751:148::-;11853:11;11890:3;11875:18;;11751:148;;;;:::o;11905:390::-;12011:3;12039:39;12072:5;12039:39;:::i;:::-;12094:89;12176:6;12171:3;12094:89;:::i;:::-;12087:96;;12192:65;12250:6;12245:3;12238:4;12231:5;12227:16;12192:65;:::i;:::-;12282:6;12277:3;12273:16;12266:23;;12015:280;11905:390;;;;:::o;12301:435::-;12481:3;12503:95;12594:3;12585:6;12503:95;:::i;:::-;12496:102;;12615:95;12706:3;12697:6;12615:95;:::i;:::-;12608:102;;12727:3;12720:10;;12301:435;;;;;:::o;12742:98::-;12793:6;12827:5;12821:12;12811:22;;12742:98;;;:::o;12846:168::-;12929:11;12963:6;12958:3;12951:19;13003:4;12998:3;12994:14;12979:29;;12846:168;;;;:::o;13020:373::-;13106:3;13134:38;13166:5;13134:38;:::i;:::-;13188:70;13251:6;13246:3;13188:70;:::i;:::-;13181:77;;13267:65;13325:6;13320:3;13313:4;13306:5;13302:16;13267:65;:::i;:::-;13357:29;13379:6;13357:29;:::i;:::-;13352:3;13348:39;13341:46;;13110:283;13020:373;;;;:::o;13399:640::-;13594:4;13632:3;13621:9;13617:19;13609:27;;13646:71;13714:1;13703:9;13699:17;13690:6;13646:71;:::i;:::-;13727:72;13795:2;13784:9;13780:18;13771:6;13727:72;:::i;:::-;13809;13877:2;13866:9;13862:18;13853:6;13809:72;:::i;:::-;13928:9;13922:4;13918:20;13913:2;13902:9;13898:18;13891:48;13956:76;14027:4;14018:6;13956:76;:::i;:::-;13948:84;;13399:640;;;;;;;:::o;14045:141::-;14101:5;14132:6;14126:13;14117:22;;14148:32;14174:5;14148:32;:::i;:::-;14045:141;;;;:::o;14192:349::-;14261:6;14310:2;14298:9;14289:7;14285:23;14281:32;14278:119;;;14316:79;;:::i;:::-;14278:119;14436:1;14461:63;14516:7;14507:6;14496:9;14492:22;14461:63;:::i;:::-;14451:73;;14407:127;14192:349;;;;:::o;14547:180::-;14595:77;14592:1;14585:88;14692:4;14689:1;14682:15;14716:4;14713:1;14706:15;14733:332;14854:4;14892:2;14881:9;14877:18;14869:26;;14905:71;14973:1;14962:9;14958:17;14949:6;14905:71;:::i;:::-;14986:72;15054:2;15043:9;15039:18;15030:6;14986:72;:::i;:::-;14733:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1657200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeMint(address)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56066,
									"end": 56509,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 56148,
									"end": 56256,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56236,
									"end": 56248,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "566F6C756E746565724E46540000000000000000000000000000000000000000"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "PUSH",
									"source": 0,
									"value": "564C4E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36682,
									"end": 36687,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36674,
									"end": 36679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36674,
									"end": 36687,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36674,
									"end": 36687,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36674,
									"end": 36687,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 36674,
									"end": 36687,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36674,
									"end": 36687,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36674,
									"end": 36687,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 36674,
									"end": 36687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36674,
									"end": 36687,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 36674,
									"end": 36687,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36674,
									"end": 36687,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36707,
									"end": 36714,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36697,
									"end": 36704,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36697,
									"end": 36714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36697,
									"end": 36714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36697,
									"end": 36714,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 36697,
									"end": 36714,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36697,
									"end": 36714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36697,
									"end": 36714,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 36697,
									"end": 36714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36697,
									"end": 36714,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 36697,
									"end": 36714,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36697,
									"end": 36714,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36608,
									"end": 36721,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 54204,
									"end": 54205,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54180,
									"end": 54206,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 54180,
									"end": 54206,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 54180,
									"end": 54192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54180,
									"end": 54206,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 54180,
									"end": 54206,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 54180,
									"end": 54206,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 54176,
									"end": 54271,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 54176,
									"end": 54271,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 54257,
									"end": 54258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 54229,
									"end": 54260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54229,
									"end": 54260,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 54176,
									"end": 54271,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 54176,
									"end": 54271,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54280,
									"end": 54312,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 54299,
									"end": 54311,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54280,
									"end": 54298,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 54280,
									"end": 54298,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 54280,
									"end": 54298,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 54280,
									"end": 54312,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 54280,
									"end": 54312,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 54280,
									"end": 54312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54280,
									"end": 54312,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 54280,
									"end": 54312,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54132,
									"end": 54319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56148,
									"end": 56256,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55819,
									"end": 56006,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 55819,
									"end": 56006,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55892,
									"end": 55908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55911,
									"end": 55917,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55892,
									"end": 55917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55892,
									"end": 55917,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55936,
									"end": 55944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55933,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 55927,
									"end": 55933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55927,
									"end": 55944,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55990,
									"end": 55998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55980,
									"end": 55988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55999,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 55882,
									"end": 56006,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55819,
									"end": 56006,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55819,
									"end": 56006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56066,
									"end": 56509,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220843de34f8733173a263e942ac84f05c437dd266382c273f9548ac27644acf28e64736f6c634300081a0033",
									".code": [
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "40D097C3"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56066,
											"end": 56509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 36788,
											"end": 37088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 36788,
											"end": 37088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 36788,
											"end": 37088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 37592,
											"end": 37681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37592,
											"end": 37681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 38724,
											"end": 38878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38724,
											"end": 38878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38724,
											"end": 38878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 38550,
											"end": 38663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 38550,
											"end": 38663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 39370,
											"end": 39948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 39370,
											"end": 39948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 56379,
											"end": 56507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 56379,
											"end": 56507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 40014,
											"end": 40146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 40014,
											"end": 40146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37412,
											"end": 37530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 37412,
											"end": 37530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37412,
											"end": 37530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 37147,
											"end": 37355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37147,
											"end": 37355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 37147,
											"end": 37355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55301,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 55200,
											"end": 55301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 55200,
											"end": 55301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 55200,
											"end": 55301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55301,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 55200,
											"end": 55301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55301,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 54545,
											"end": 54630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 54545,
											"end": 54630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 37745,
											"end": 37838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37745,
											"end": 37838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38945,
											"end": 39089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38945,
											"end": 39089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 40212,
											"end": 40420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 40212,
											"end": 40420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37904,
											"end": 38159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 37904,
											"end": 38159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37904,
											"end": 38159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 39155,
											"end": 39308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 39155,
											"end": 39308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 39155,
											"end": 39308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 55450,
											"end": 55665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 55450,
											"end": 55665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36890,
											"end": 36894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36940,
											"end": 36965,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36925,
											"end": 36965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36925,
											"end": 36965,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 36965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 36936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 36965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36925,
											"end": 36965,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 36965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 36965,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 37029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 37029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 36925,
											"end": 37029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 37029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36996,
											"end": 37029,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36981,
											"end": 37029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36981,
											"end": 37029,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 36992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36981,
											"end": 37029,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 37029,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 37029,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 36925,
											"end": 37029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 37081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 37081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 36925,
											"end": 37081,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 37081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 37069,
											"end": 37080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 37045,
											"end": 37081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37081,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 37045,
											"end": 37081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36925,
											"end": 37081,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 36925,
											"end": 37081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36906,
											"end": 37081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36906,
											"end": 37081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 37088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37637,
											"end": 37650,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37669,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 37662,
											"end": 37674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 37662,
											"end": 37674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37662,
											"end": 37674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37592,
											"end": 37681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38791,
											"end": 38798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38810,
											"end": 38832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 38824,
											"end": 38831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38810,
											"end": 38823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 38810,
											"end": 38832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38810,
											"end": 38832,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 38810,
											"end": 38832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38810,
											"end": 38832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38850,
											"end": 38871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 38863,
											"end": 38870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38850,
											"end": 38862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 38850,
											"end": 38871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38850,
											"end": 38871,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 38850,
											"end": 38871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38843,
											"end": 38871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38843,
											"end": 38871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38724,
											"end": 38878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38621,
											"end": 38656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38630,
											"end": 38632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38634,
											"end": 38641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38643,
											"end": 38655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 38643,
											"end": 38653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 38643,
											"end": 38655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38643,
											"end": 38655,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 38643,
											"end": 38655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38621,
											"end": 38629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 38621,
											"end": 38656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38621,
											"end": 38656,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38621,
											"end": 38656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39478,
											"end": 39479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39464,
											"end": 39480,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39464,
											"end": 39480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39464,
											"end": 39466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39464,
											"end": 39480,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39464,
											"end": 39480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39464,
											"end": 39480,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39460,
											"end": 39547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 39460,
											"end": 39547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39533,
											"end": 39534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 39503,
											"end": 39536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39503,
											"end": 39536,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39460,
											"end": 39547,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 39460,
											"end": 39547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39765,
											"end": 39786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39789,
											"end": 39823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 39797,
											"end": 39799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39801,
											"end": 39808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 39810,
											"end": 39820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 39810,
											"end": 39822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39822,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 39810,
											"end": 39822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39789,
											"end": 39796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 39789,
											"end": 39823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39789,
											"end": 39823,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 39789,
											"end": 39823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39765,
											"end": 39823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39765,
											"end": 39823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39854,
											"end": 39858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39837,
											"end": 39858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39837,
											"end": 39858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39837,
											"end": 39850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39837,
											"end": 39858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39837,
											"end": 39858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39837,
											"end": 39858,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39833,
											"end": 39942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 39833,
											"end": 39942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39902,
											"end": 39906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39908,
											"end": 39915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 39930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 39881,
											"end": 39931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39931,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39833,
											"end": 39942,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 39833,
											"end": 39942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39450,
											"end": 39948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39370,
											"end": 39948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54438,
											"end": 54451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 54438,
											"end": 54449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 54438,
											"end": 54451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54438,
											"end": 54451,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 54438,
											"end": 54451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56436,
											"end": 56451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56454,
											"end": 56466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56454,
											"end": 56466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 56454,
											"end": 56468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56454,
											"end": 56468,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56436,
											"end": 56468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56436,
											"end": 56468,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56478,
											"end": 56500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 56488,
											"end": 56490,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56492,
											"end": 56499,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56478,
											"end": 56487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 56478,
											"end": 56500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56478,
											"end": 56500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 56478,
											"end": 56500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56426,
											"end": 56507,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 40117,
											"end": 40121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40123,
											"end": 40125,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40127,
											"end": 40134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 40100,
											"end": 40139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 40100,
											"end": 40139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40014,
											"end": 40146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37475,
											"end": 37482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37501,
											"end": 37523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 37515,
											"end": 37522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37501,
											"end": 37514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 37501,
											"end": 37523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37501,
											"end": 37523,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 37501,
											"end": 37523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37494,
											"end": 37523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37494,
											"end": 37523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37250,
											"end": 37251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37233,
											"end": 37252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37233,
											"end": 37252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37233,
											"end": 37238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37233,
											"end": 37252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37233,
											"end": 37252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37233,
											"end": 37252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37229,
											"end": 37316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 37229,
											"end": 37316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37302,
											"end": 37303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "PUSH",
											"source": 0,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37275,
											"end": 37305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37275,
											"end": 37305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37229,
											"end": 37316,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 37229,
											"end": 37316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37341,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37342,
											"end": 37347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37332,
											"end": 37348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37325,
											"end": 37348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37147,
											"end": 37355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55301,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 55200,
											"end": 55301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54438,
											"end": 54451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 54438,
											"end": 54449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 54438,
											"end": 54451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54438,
											"end": 54451,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 54438,
											"end": 54451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55264,
											"end": 55294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55291,
											"end": 55292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55264,
											"end": 55282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 55264,
											"end": 55294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55264,
											"end": 55294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55264,
											"end": 55294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54591,
											"end": 54598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54617,
											"end": 54623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54610,
											"end": 54623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54610,
											"end": 54623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54545,
											"end": 54630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37792,
											"end": 37805,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37824,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 37817,
											"end": 37831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 37817,
											"end": 37831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39030,
											"end": 39082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39049,
											"end": 39061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39049,
											"end": 39059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 39049,
											"end": 39061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39049,
											"end": 39061,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39049,
											"end": 39061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39063,
											"end": 39071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39073,
											"end": 39081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39030,
											"end": 39048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 39030,
											"end": 39082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39030,
											"end": 39082,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39030,
											"end": 39082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 39089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40325,
											"end": 40356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 40338,
											"end": 40342,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40344,
											"end": 40346,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40348,
											"end": 40355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40325,
											"end": 40337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40325,
											"end": 40356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40325,
											"end": 40356,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 40325,
											"end": 40356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40366,
											"end": 40413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 40389,
											"end": 40393,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40395,
											"end": 40397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40399,
											"end": 40406,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40408,
											"end": 40412,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40366,
											"end": 40388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 40366,
											"end": 40413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40366,
											"end": 40413,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 40366,
											"end": 40413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40212,
											"end": 40420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37968,
											"end": 37981,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37993,
											"end": 38015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 38007,
											"end": 38014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37993,
											"end": 38006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 37993,
											"end": 38015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37993,
											"end": 38015,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37993,
											"end": 38015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37993,
											"end": 38015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38026,
											"end": 38047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38050,
											"end": 38060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 38050,
											"end": 38058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 38050,
											"end": 38060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38050,
											"end": 38060,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 38050,
											"end": 38060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38026,
											"end": 38060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38026,
											"end": 38060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38101,
											"end": 38102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38083,
											"end": 38090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38102,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38128,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 38128,
											"end": 38135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38128,
											"end": 38144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 38128,
											"end": 38146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38128,
											"end": 38146,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 38128,
											"end": 38146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 38105,
											"end": 38147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38105,
											"end": 38147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 38077,
											"end": 38152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38070,
											"end": 38152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38070,
											"end": 38152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38070,
											"end": 38152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37904,
											"end": 38159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39266,
											"end": 39284,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39285,
											"end": 39290,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39266,
											"end": 39291,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39292,
											"end": 39300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39266,
											"end": 39301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39259,
											"end": 39301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39259,
											"end": 39301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39155,
											"end": 39308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54438,
											"end": 54451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 54438,
											"end": 54449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 54438,
											"end": 54451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54438,
											"end": 54451,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 54438,
											"end": 54451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55554,
											"end": 55555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55534,
											"end": 55556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55534,
											"end": 55556,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55534,
											"end": 55542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55534,
											"end": 55556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55534,
											"end": 55556,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55534,
											"end": 55556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55530,
											"end": 55621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 55530,
											"end": 55621,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55607,
											"end": 55608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 55579,
											"end": 55610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55579,
											"end": 55610,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55530,
											"end": 55621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 55530,
											"end": 55621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 55658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 55649,
											"end": 55657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 55648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 55630,
											"end": 55658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 55658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 55630,
											"end": 55658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55450,
											"end": 55665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 29019,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28873,
											"end": 29019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28949,
											"end": 28953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28987,
											"end": 29012,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28972,
											"end": 29012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28972,
											"end": 29012,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28972,
											"end": 29012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28972,
											"end": 28983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28972,
											"end": 29012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28972,
											"end": 29012,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28972,
											"end": 29012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28972,
											"end": 29012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28965,
											"end": 29012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28965,
											"end": 29012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 29019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 29019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 29019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28873,
											"end": 29019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51365,
											"end": 51606,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 51365,
											"end": 51606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51428,
											"end": 51435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51447,
											"end": 51460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51463,
											"end": 51480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 51472,
											"end": 51479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51463,
											"end": 51471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 51463,
											"end": 51480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51463,
											"end": 51480,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 51463,
											"end": 51480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51447,
											"end": 51480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51447,
											"end": 51480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51511,
											"end": 51512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51494,
											"end": 51513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51494,
											"end": 51513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51494,
											"end": 51499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51494,
											"end": 51513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51494,
											"end": 51513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51494,
											"end": 51513,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51490,
											"end": 51578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 51490,
											"end": 51578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 51566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 51536,
											"end": 51567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51536,
											"end": 51567,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51490,
											"end": 51578,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 51490,
											"end": 51578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51594,
											"end": 51599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51587,
											"end": 51599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51587,
											"end": 51599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51587,
											"end": 51599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51365,
											"end": 51606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51365,
											"end": 51606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51365,
											"end": 51606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51365,
											"end": 51606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41292,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 41165,
											"end": 41292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41235,
											"end": 41242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41261,
											"end": 41276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41277,
											"end": 41284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41261,
											"end": 41285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41254,
											"end": 41285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41254,
											"end": 41285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8434,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8338,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8427,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49645,
											"end": 49765,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 49645,
											"end": 49765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49725,
											"end": 49758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 49734,
											"end": 49736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49738,
											"end": 49745,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49747,
											"end": 49751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49757,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49725,
											"end": 49733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 49725,
											"end": 49758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49725,
											"end": 49758,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 49725,
											"end": 49758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49645,
											"end": 49765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49645,
											"end": 49765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49645,
											"end": 49765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49645,
											"end": 49765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44065,
											"end": 44860,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 44065,
											"end": 44860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44151,
											"end": 44158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44170,
											"end": 44182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 44194,
											"end": 44201,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 44185,
											"end": 44202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44202,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 44185,
											"end": 44202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44170,
											"end": 44202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44170,
											"end": 44202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44262,
											"end": 44280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44262,
											"end": 44280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44262,
											"end": 44266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44262,
											"end": 44280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44262,
											"end": 44280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44262,
											"end": 44280,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44258,
											"end": 44344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 44258,
											"end": 44344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44296,
											"end": 44333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 44313,
											"end": 44317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44319,
											"end": 44323,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44325,
											"end": 44332,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44296,
											"end": 44312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 44296,
											"end": 44333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44296,
											"end": 44333,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 44296,
											"end": 44333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44258,
											"end": 44344,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 44258,
											"end": 44344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44404,
											"end": 44405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44388,
											"end": 44406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44388,
											"end": 44406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44388,
											"end": 44392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44388,
											"end": 44406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44388,
											"end": 44406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44388,
											"end": 44406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44384,
											"end": 44640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 44384,
											"end": 44640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44504,
											"end": 44552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 44521,
											"end": 44522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44525,
											"end": 44532,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44542,
											"end": 44543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44546,
											"end": 44551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44504,
											"end": 44512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 44504,
											"end": 44552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44504,
											"end": 44552,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 44504,
											"end": 44552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44614,
											"end": 44615,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44595,
											"end": 44604,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44605,
											"end": 44609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44595,
											"end": 44615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44384,
											"end": 44640,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 44384,
											"end": 44640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44668,
											"end": 44669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44654,
											"end": 44670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44654,
											"end": 44670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44654,
											"end": 44656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44654,
											"end": 44670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44654,
											"end": 44670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44654,
											"end": 44670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44650,
											"end": 44757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 44650,
											"end": 44757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44731,
											"end": 44732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44714,
											"end": 44723,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44724,
											"end": 44726,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44714,
											"end": 44732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44650,
											"end": 44757,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 44650,
											"end": 44757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44786,
											"end": 44788,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44774,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44775,
											"end": 44782,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44767,
											"end": 44788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44823,
											"end": 44830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44819,
											"end": 44821,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44813,
											"end": 44817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44804,
											"end": 44831,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 44849,
											"end": 44853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44842,
											"end": 44853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44842,
											"end": 44853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44842,
											"end": 44853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44065,
											"end": 44860,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44065,
											"end": 44860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44065,
											"end": 44860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44065,
											"end": 44860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44065,
											"end": 44860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44065,
											"end": 44860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54703,
											"end": 54865,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 54703,
											"end": 54865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54773,
											"end": 54785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 54773,
											"end": 54783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 54773,
											"end": 54785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54773,
											"end": 54785,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 54773,
											"end": 54785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54762,
											"end": 54785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54762,
											"end": 54785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54762,
											"end": 54769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 54762,
											"end": 54767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 54762,
											"end": 54769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54762,
											"end": 54769,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 54762,
											"end": 54769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54762,
											"end": 54785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54762,
											"end": 54785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54762,
											"end": 54785,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54758,
											"end": 54859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 54758,
											"end": 54859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54835,
											"end": 54847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 54835,
											"end": 54845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 54835,
											"end": 54847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54835,
											"end": 54847,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 54835,
											"end": 54847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 54808,
											"end": 54848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54808,
											"end": 54848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54758,
											"end": 54859,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 54758,
											"end": 54859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54703,
											"end": 54865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45860,
											"end": 45960,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 45860,
											"end": 45960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 45937,
											"end": 45939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45941,
											"end": 45948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 45927,
											"end": 45953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 45927,
											"end": 45953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45860,
											"end": 45960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45860,
											"end": 45960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45860,
											"end": 45960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55819,
											"end": 56006,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 55819,
											"end": 56006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55892,
											"end": 55908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55911,
											"end": 55917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55892,
											"end": 55917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55892,
											"end": 55917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55936,
											"end": 55944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55933,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55927,
											"end": 55933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 55944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55990,
											"end": 55998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55980,
											"end": 55988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55959,
											"end": 55999,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 55882,
											"end": 56006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55819,
											"end": 56006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55819,
											"end": 56006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50818,
											"end": 51130,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 50818,
											"end": 51130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50945,
											"end": 50946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50925,
											"end": 50947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50925,
											"end": 50947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50925,
											"end": 50933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50925,
											"end": 50947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50925,
											"end": 50947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50925,
											"end": 50947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50921,
											"end": 51012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 50921,
											"end": 51012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50992,
											"end": 51000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "PUSH",
											"source": 0,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 50970,
											"end": 51001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50921,
											"end": 51012,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 50921,
											"end": 51012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51059,
											"end": 51067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51039,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51040,
											"end": 51045,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51021,
											"end": 51046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51047,
											"end": 51055,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51021,
											"end": 51067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51104,
											"end": 51112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51097,
											"end": 51102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 51114,
											"end": 51122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 51082,
											"end": 51123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51082,
											"end": 51123,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 50818,
											"end": 51130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50818,
											"end": 51130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50818,
											"end": 51130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50818,
											"end": 51130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52145,
											"end": 52927,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 52145,
											"end": 52927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52278,
											"end": 52279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52261,
											"end": 52263,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52261,
											"end": 52275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52261,
											"end": 52275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52261,
											"end": 52275,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 52261,
											"end": 52279,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 52257,
											"end": 52921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52257,
											"end": 52921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 52257,
											"end": 52921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52315,
											"end": 52317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52335,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52299,
											"end": 52335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52335,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 52336,
											"end": 52348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 52336,
											"end": 52346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 52336,
											"end": 52348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52336,
											"end": 52348,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 52336,
											"end": 52348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52350,
											"end": 52354,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52363,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52365,
											"end": 52369,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 52299,
											"end": 52370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 52299,
											"end": 52370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 52299,
											"end": 52370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52625,
											"end": 52626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52608,
											"end": 52614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52608,
											"end": 52621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52608,
											"end": 52626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52604,
											"end": 52897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 52604,
											"end": 52897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52679,
											"end": 52681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 52657,
											"end": 52682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52657,
											"end": 52682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52604,
											"end": 52897,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 52604,
											"end": 52897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52849,
											"end": 52855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52843,
											"end": 52856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52834,
											"end": 52840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52830,
											"end": 52832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52826,
											"end": 52841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52819,
											"end": 52857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 52295,
											"end": 52911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52427,
											"end": 52468,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 52427,
											"end": 52468,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 52427,
											"end": 52468,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 52417,
											"end": 52468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52417,
											"end": 52468,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52417,
											"end": 52468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52417,
											"end": 52423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52417,
											"end": 52468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52417,
											"end": 52468,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52417,
											"end": 52468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52417,
											"end": 52468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52413,
											"end": 52543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 52413,
											"end": 52543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52521,
											"end": 52523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 52499,
											"end": 52524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52499,
											"end": 52524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52413,
											"end": 52543,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 52413,
											"end": 52543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52371,
											"end": 52557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52257,
											"end": 52921,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 52257,
											"end": 52921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52145,
											"end": 52927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52145,
											"end": 52927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52145,
											"end": 52927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52145,
											"end": 52927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52145,
											"end": 52927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56262,
											"end": 56373,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 56262,
											"end": 56373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56314,
											"end": 56327,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "PUSH",
											"source": 0,
											"value": "68747470733A2F2F676F6F676C652E636F6D0000000000000000000000000000"
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56339,
											"end": 56366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56262,
											"end": 56373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56262,
											"end": 56373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25653,
											"end": 26351,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 25653,
											"end": 26351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25722,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25758,
											"end": 25772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25795,
											"end": 25796,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25775,
											"end": 25792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 25786,
											"end": 25791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25775,
											"end": 25785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25775,
											"end": 25792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25775,
											"end": 25792,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 25775,
											"end": 25792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25775,
											"end": 25796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25758,
											"end": 25796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25758,
											"end": 25796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25844,
											"end": 25850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 25833,
											"end": 25851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25865,
											"end": 25876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25991,
											"end": 25997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25987,
											"end": 25989,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25983,
											"end": 25998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25975,
											"end": 25981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25971,
											"end": 25999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25964,
											"end": 25999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25964,
											"end": 25999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26308,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 26026,
											"end": 26308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26037,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26026,
											"end": 26308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 26026,
											"end": 26308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26062,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26057,
											"end": 26062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26062,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26196,
											"end": 26206,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 26191,
											"end": 26193,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26184,
											"end": 26189,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26180,
											"end": 26194,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26207,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 26170,
											"end": 26173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26162,
											"end": 26208,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 26252,
											"end": 26254,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26243,
											"end": 26254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26243,
											"end": 26254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26285,
											"end": 26286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26276,
											"end": 26281,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 26272,
											"end": 26293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26308,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 26026,
											"end": 26308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26328,
											"end": 26334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26321,
											"end": 26334,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26321,
											"end": 26334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26321,
											"end": 26334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26321,
											"end": 26334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26321,
											"end": 26334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25653,
											"end": 26351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25653,
											"end": 26351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25653,
											"end": 26351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25653,
											"end": 26351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41049,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 40934,
											"end": 41049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41000,
											"end": 41007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41026,
											"end": 41033,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41034,
											"end": 41041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41026,
											"end": 41042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41019,
											"end": 41042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41019,
											"end": 41042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49947,
											"end": 50609,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 49947,
											"end": 50609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50107,
											"end": 50116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50107,
											"end": 50138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50107,
											"end": 50138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 50107,
											"end": 50138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50107,
											"end": 50138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50136,
											"end": 50137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50120,
											"end": 50138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50120,
											"end": 50138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50120,
											"end": 50138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50107,
											"end": 50138,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 50107,
											"end": 50138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50103,
											"end": 50563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50103,
											"end": 50563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 50103,
											"end": 50563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50154,
											"end": 50167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50170,
											"end": 50192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 50184,
											"end": 50191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50170,
											"end": 50183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 50170,
											"end": 50192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50170,
											"end": 50192,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 50170,
											"end": 50192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50154,
											"end": 50192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50154,
											"end": 50192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50336,
											"end": 50337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50320,
											"end": 50338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50320,
											"end": 50338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50320,
											"end": 50338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50338,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 50320,
											"end": 50355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50351,
											"end": 50355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50342,
											"end": 50355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50342,
											"end": 50355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50342,
											"end": 50347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50342,
											"end": 50355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50342,
											"end": 50355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50342,
											"end": 50355,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50342,
											"end": 50355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50355,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 50320,
											"end": 50355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 50320,
											"end": 50389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50360,
											"end": 50389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 50377,
											"end": 50382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50384,
											"end": 50388,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50360,
											"end": 50376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 50360,
											"end": 50389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50360,
											"end": 50389,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 50360,
											"end": 50389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50320,
											"end": 50389,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 50320,
											"end": 50389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50316,
											"end": 50458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50316,
											"end": 50458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 50316,
											"end": 50458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50438,
											"end": 50442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "PUSH",
											"source": 0,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 50416,
											"end": 50443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50416,
											"end": 50443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50316,
											"end": 50458,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 50316,
											"end": 50458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50476,
											"end": 50485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50472,
											"end": 50553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50472,
											"end": 50553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 50472,
											"end": 50553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50530,
											"end": 50537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50526,
											"end": 50528,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50519,
											"end": 50524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50510,
											"end": 50538,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 50472,
											"end": 50553,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 50472,
											"end": 50553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50140,
											"end": 50563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50103,
											"end": 50563,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 50103,
											"end": 50563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50589,
											"end": 50596,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50573,
											"end": 50602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49947,
											"end": 50609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49947,
											"end": 50609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49947,
											"end": 50609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49947,
											"end": 50609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49947,
											"end": 50609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42677,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 42309,
											"end": 42677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42421,
											"end": 42459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 42435,
											"end": 42440,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42442,
											"end": 42449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42451,
											"end": 42458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42421,
											"end": 42434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 42421,
											"end": 42459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42421,
											"end": 42459,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 42421,
											"end": 42459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 42416,
											"end": 42671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 42497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42479,
											"end": 42498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42479,
											"end": 42498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42479,
											"end": 42484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42479,
											"end": 42498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42479,
											"end": 42498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42479,
											"end": 42498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42475,
											"end": 42661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 42475,
											"end": 42661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42548,
											"end": 42555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 42525,
											"end": 42556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42475,
											"end": 42661,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 42475,
											"end": 42661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42629,
											"end": 42636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "PUSH",
											"source": 0,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 42602,
											"end": 42646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42602,
											"end": 42646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42671,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 42416,
											"end": 42671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46363,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 46181,
											"end": 46363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46275,
											"end": 46293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 46281,
											"end": 46283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46285,
											"end": 46292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46275,
											"end": 46280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 46275,
											"end": 46293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46275,
											"end": 46293,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 46275,
											"end": 46293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46303,
											"end": 46356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 46334,
											"end": 46335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46338,
											"end": 46340,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46342,
											"end": 46349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46351,
											"end": 46355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46303,
											"end": 46325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 46303,
											"end": 46356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46303,
											"end": 46356,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 46303,
											"end": 46356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46181,
											"end": 46363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 21799,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 20883,
											"end": 21799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20955,
											"end": 20969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20972,
											"end": 20973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20955,
											"end": 20973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20955,
											"end": 20973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21020,
											"end": 21028,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 21011,
											"end": 21016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 21007,
											"end": 21110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21057,
											"end": 21065,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 21048,
											"end": 21065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21083,
											"end": 21095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21110,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 21007,
											"end": 21110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21136,
											"end": 21144,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 21127,
											"end": 21132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 21123,
											"end": 21226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21181,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 21164,
											"end": 21181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21164,
											"end": 21181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21209,
											"end": 21211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21199,
											"end": 21211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21199,
											"end": 21211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21199,
											"end": 21211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21199,
											"end": 21211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21226,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 21123,
											"end": 21226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21252,
											"end": 21260,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 21243,
											"end": 21248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21243,
											"end": 21260,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21239,
											"end": 21342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 21239,
											"end": 21342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21289,
											"end": 21297,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 21280,
											"end": 21297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21327,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21315,
											"end": 21327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21239,
											"end": 21342,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 21239,
											"end": 21342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21368,
											"end": 21375,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 21359,
											"end": 21364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21375,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21355,
											"end": 21455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 21355,
											"end": 21455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21404,
											"end": 21411,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 21395,
											"end": 21411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21439,
											"end": 21440,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21429,
											"end": 21440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21429,
											"end": 21440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21429,
											"end": 21440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21429,
											"end": 21440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21355,
											"end": 21455,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 21355,
											"end": 21455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21481,
											"end": 21488,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 21472,
											"end": 21477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21488,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 21468,
											"end": 21568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21517,
											"end": 21524,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 21508,
											"end": 21524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21552,
											"end": 21553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21542,
											"end": 21553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21568,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 21468,
											"end": 21568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21594,
											"end": 21601,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21585,
											"end": 21590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21585,
											"end": 21601,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 21681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 21581,
											"end": 21681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21630,
											"end": 21637,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 21621,
											"end": 21637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21665,
											"end": 21666,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21655,
											"end": 21666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21655,
											"end": 21666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21655,
											"end": 21666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21655,
											"end": 21666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 21681,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 21581,
											"end": 21681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21707,
											"end": 21714,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 21698,
											"end": 21703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21698,
											"end": 21714,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 21694,
											"end": 21760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21744,
											"end": 21745,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21734,
											"end": 21745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21734,
											"end": 21745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21760,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 21694,
											"end": 21760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21786,
											"end": 21792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21779,
											"end": 21792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21779,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21779,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 21799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 21799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 21799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 21799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41875,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 41603,
											"end": 41875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41706,
											"end": 41710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41760,
											"end": 41761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41741,
											"end": 41762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41741,
											"end": 41762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41762,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 41741,
											"end": 41868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41779,
											"end": 41795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41779,
											"end": 41795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41795,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 41779,
											"end": 41831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41799,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 41816,
											"end": 41821,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41823,
											"end": 41830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41799,
											"end": 41815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 41799,
											"end": 41831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41799,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 41799,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 41779,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 41779,
											"end": 41867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41860,
											"end": 41867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41835,
											"end": 41867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 41848,
											"end": 41855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 41835,
											"end": 41856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41856,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 41835,
											"end": 41856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41835,
											"end": 41867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41867,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41779,
											"end": 41867,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 41779,
											"end": 41867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41868,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 41741,
											"end": 41868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41722,
											"end": 41868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41722,
											"end": 41868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41875,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45182,
											"end": 45509,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 45182,
											"end": 45509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45263,
											"end": 45264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45249,
											"end": 45265,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45249,
											"end": 45265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45249,
											"end": 45251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45249,
											"end": 45265,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45249,
											"end": 45265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45249,
											"end": 45265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45245,
											"end": 45332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 45245,
											"end": 45332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45318,
											"end": 45319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 45288,
											"end": 45321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45288,
											"end": 45321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45245,
											"end": 45332,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 45245,
											"end": 45332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45341,
											"end": 45362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45365,
											"end": 45397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 45373,
											"end": 45375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45377,
											"end": 45384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45394,
											"end": 45395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45365,
											"end": 45372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 45365,
											"end": 45397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45365,
											"end": 45397,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 45365,
											"end": 45397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45341,
											"end": 45397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45341,
											"end": 45397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45436,
											"end": 45437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45411,
											"end": 45438,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45411,
											"end": 45438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45411,
											"end": 45424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45411,
											"end": 45438,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45411,
											"end": 45438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45411,
											"end": 45438,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45407,
											"end": 45503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 45407,
											"end": 45503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45489,
											"end": 45490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "PUSH",
											"source": 0,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 45461,
											"end": 45492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45461,
											"end": 45492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45407,
											"end": 45503,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 45407,
											"end": 45503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45235,
											"end": 45509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45182,
											"end": 45509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45182,
											"end": 45509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45182,
											"end": 45509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5519,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5522,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5830,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 5855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6064,
											"end": 6081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6011,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10414,
											"end": 10491,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10540,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10670,
											"end": 10682,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10823,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10838,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10603,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11067,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11054,
											"end": 11063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11131,
											"end": 11148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11122,
											"end": 11128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 11078,
											"end": 11149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11216,
											"end": 11225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11203,
											"end": 11209,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 11159,
											"end": 11231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 11309,
											"end": 11311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11298,
											"end": 11307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11294,
											"end": 11312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11291,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 11241,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 11320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11506,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11326,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11451,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11371,
											"end": 11372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11364,
											"end": 11452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11471,
											"end": 11475,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11468,
											"end": 11469,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11461,
											"end": 11476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11495,
											"end": 11499,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11492,
											"end": 11493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11485,
											"end": 11500,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11551,
											"end": 11554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 11592,
											"end": 11597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 11574,
											"end": 11598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11565,
											"end": 11598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11565,
											"end": 11598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11620,
											"end": 11686,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11613,
											"end": 11618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11687,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11607,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 11607,
											"end": 11710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11690,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 11690,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11690,
											"end": 11708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11690,
											"end": 11708,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 11690,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11607,
											"end": 11710,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 11607,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11737,
											"end": 11738,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11730,
											"end": 11735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11726,
											"end": 11739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11853,
											"end": 11864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11875,
											"end": 11893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11875,
											"end": 11893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12011,
											"end": 12014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 12072,
											"end": 12077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 12039,
											"end": 12078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12078,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 12039,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 12176,
											"end": 12182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12171,
											"end": 12174,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 12094,
											"end": 12183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12183,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 12094,
											"end": 12183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12087,
											"end": 12183,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12087,
											"end": 12183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12192,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 12250,
											"end": 12256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12245,
											"end": 12248,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12231,
											"end": 12236,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12227,
											"end": 12243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12192,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 12192,
											"end": 12257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12192,
											"end": 12257,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 12192,
											"end": 12257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12282,
											"end": 12288,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12280,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12273,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12266,
											"end": 12289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12266,
											"end": 12289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12015,
											"end": 12295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12503,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 12594,
											"end": 12597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12585,
											"end": 12591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12503,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 12503,
											"end": 12598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12503,
											"end": 12598,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 12503,
											"end": 12598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12615,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 12706,
											"end": 12709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12697,
											"end": 12703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12615,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 12615,
											"end": 12710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12615,
											"end": 12710,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 12615,
											"end": 12710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12608,
											"end": 12710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12608,
											"end": 12710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12727,
											"end": 12730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12793,
											"end": 12799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12833,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12811,
											"end": 12833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12811,
											"end": 12833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12742,
											"end": 12840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12742,
											"end": 12840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12958,
											"end": 12961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13003,
											"end": 13007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12994,
											"end": 13008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12979,
											"end": 13008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12979,
											"end": 13008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 13014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 13014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13134,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 13166,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13134,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 13134,
											"end": 13172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13134,
											"end": 13172,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 13134,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 13251,
											"end": 13257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13246,
											"end": 13249,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 13188,
											"end": 13258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13258,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 13188,
											"end": 13258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13181,
											"end": 13258,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13181,
											"end": 13258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13267,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 13325,
											"end": 13331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13320,
											"end": 13323,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13306,
											"end": 13311,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13267,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 13267,
											"end": 13332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13267,
											"end": 13332,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 13267,
											"end": 13332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 13379,
											"end": 13385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 13357,
											"end": 13386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13386,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 13357,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13352,
											"end": 13355,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13341,
											"end": 13387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13341,
											"end": 13387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13020,
											"end": 13393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13020,
											"end": 13393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13594,
											"end": 13598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13635,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13617,
											"end": 13636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13609,
											"end": 13636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13609,
											"end": 13636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 13714,
											"end": 13715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13703,
											"end": 13712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13690,
											"end": 13696,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 13646,
											"end": 13717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13717,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 13646,
											"end": 13717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13727,
											"end": 13799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 13795,
											"end": 13797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13784,
											"end": 13793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13771,
											"end": 13777,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13727,
											"end": 13799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 13727,
											"end": 13799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13727,
											"end": 13799,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 13727,
											"end": 13799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13809,
											"end": 13881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 13877,
											"end": 13879,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13866,
											"end": 13875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13862,
											"end": 13880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13853,
											"end": 13859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13809,
											"end": 13881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13809,
											"end": 13881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13809,
											"end": 13881,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 13809,
											"end": 13881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13922,
											"end": 13926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13918,
											"end": 13938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13915,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13902,
											"end": 13911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13898,
											"end": 13916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13956,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 14027,
											"end": 14031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14018,
											"end": 14024,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13956,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 13956,
											"end": 14032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13956,
											"end": 14032,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 13956,
											"end": 14032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 14039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 14039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14101,
											"end": 14106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14132,
											"end": 14138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14126,
											"end": 14139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14117,
											"end": 14139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14117,
											"end": 14139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14148,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 14174,
											"end": 14179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14148,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 14148,
											"end": 14180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14148,
											"end": 14180,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 14148,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14261,
											"end": 14267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14310,
											"end": 14312,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14298,
											"end": 14307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14285,
											"end": 14308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14313,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14316,
											"end": 14395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 14316,
											"end": 14395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 14316,
											"end": 14395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14316,
											"end": 14395,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 14316,
											"end": 14395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 14278,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14436,
											"end": 14437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14461,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 14516,
											"end": 14523,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14507,
											"end": 14513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14505,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14461,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 14461,
											"end": 14524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14461,
											"end": 14524,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 14461,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14407,
											"end": 14534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14547,
											"end": 14727,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 14547,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14595,
											"end": 14672,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14592,
											"end": 14593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14585,
											"end": 14673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14692,
											"end": 14696,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 14689,
											"end": 14690,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14716,
											"end": 14720,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14713,
											"end": 14714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14706,
											"end": 14721,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14854,
											"end": 14858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14892,
											"end": 14894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14881,
											"end": 14890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14877,
											"end": 14895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14869,
											"end": 14895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14869,
											"end": 14895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14905,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 14973,
											"end": 14974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14962,
											"end": 14971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14958,
											"end": 14975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14949,
											"end": 14955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14905,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14905,
											"end": 14976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14905,
											"end": 14976,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 14905,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14986,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 15054,
											"end": 15056,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15043,
											"end": 15052,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15030,
											"end": 15036,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14986,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 14986,
											"end": 15058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14986,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 14986,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 15065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 15065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"VolunteerNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VolunteerNFT_flattened.sol\":\"VolunteerNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"VolunteerNFT_flattened.sol\":{\"keccak256\":\"0x3c6596d73484286274a53da779c35ce0abe720e3da21c0ed15e4da9f0c4727cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77051be66377049e136f9501c24e428e0284082d9775d5dd8a5dd14e36e6e92b\",\"dweb:/ipfs/QmUhhfX4Pove34Ge4hJ7rstdV5odgDv4TtQndKjMoPH236\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1777,
								"contract": "VolunteerNFT_flattened.sol:VolunteerNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1779,
								"contract": "VolunteerNFT_flattened.sol:VolunteerNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1783,
								"contract": "VolunteerNFT_flattened.sol:VolunteerNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1787,
								"contract": "VolunteerNFT_flattened.sol:VolunteerNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1791,
								"contract": "VolunteerNFT_flattened.sol:VolunteerNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1797,
								"contract": "VolunteerNFT_flattened.sol:VolunteerNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2759,
								"contract": "VolunteerNFT_flattened.sol:VolunteerNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2905,
								"contract": "VolunteerNFT_flattened.sol:VolunteerNFT",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"VolunteerNFT_flattened.sol": {
				"ast": {
					"absolutePath": "VolunteerNFT_flattened.sol",
					"exportedSymbols": {
						"Context": [
							196
						],
						"ERC165": [
							1624
						],
						"ERC721": [
							2753
						],
						"IERC1155Errors": [
							1760
						],
						"IERC165": [
							11
						],
						"IERC20Errors": [
							1665
						],
						"IERC721": [
							125
						],
						"IERC721Errors": [
							1713
						],
						"IERC721Metadata": [
							167
						],
						"IERC721Receiver": [
							142
						],
						"Math": [
							1249
						],
						"Ownable": [
							2898
						],
						"SignedMath": [
							1353
						],
						"Strings": [
							1603
						],
						"VolunteerNFT": [
							2946
						]
					},
					"id": 2947,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "182:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "208:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "498:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "512:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "866:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "891:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "884:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "884:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "927:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "927:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:6:0"
									},
									"scope": 11,
									"src": "857:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2947,
							"src": "488:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 12,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1073:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 14,
										"name": "IERC165",
										"nameLocations": [
											"1189:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1189:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "1189:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 13,
								"nodeType": "StructuredDocumentation",
								"src": "1100:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								11
							],
							"name": "IERC721",
							"nameLocation": "1178:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "1203:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 24,
									"name": "Transfer",
									"nameLocation": "1302:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1327:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1311:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1349:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1333:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1353:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:67:0"
									},
									"src": "1296:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1384:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 33,
									"name": "Approval",
									"nameLocation": "1489:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1514:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1498:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1537:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1521:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1563:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1547:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1497:74:0"
									},
									"src": "1483:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1578:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1706:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1737:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1721:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1760:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1744:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1775:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1770:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:64:0"
									},
									"src": "1700:85:0"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1791:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1881:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1899:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1891:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:15:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1937:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:17:0"
									},
									"scope": 125,
									"src": "1872:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1952:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2097:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2113:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2105:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:17:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2153:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:15:0"
									},
									"scope": 125,
									"src": "2088:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2166:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2745:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2770:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2762:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2784:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2776:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2796:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2788:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2820:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2805:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 66,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2805:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:64:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2834:0:0"
									},
									"scope": 125,
									"src": "2736:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2841:705:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3560:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3585:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3577:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3599:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3591:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3611:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3603:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3576:43:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3628:0:0"
									},
									"scope": 125,
									"src": "3551:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3635:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4381:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4402:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4394:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4416:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4408:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4428:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4420:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4393:43:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4445:0:0"
									},
									"scope": 125,
									"src": "4372:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4452:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4918:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4934:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4926:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4946:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4938:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4925:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4963:0:0"
									},
									"scope": 125,
									"src": "4909:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "4970:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5299:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5325:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5317:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5340:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5335:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:33:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5358:0:0"
									},
									"scope": 125,
									"src": "5290:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5365:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5518:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5538:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "5530:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5529:17:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "5570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5569:18:0"
									},
									"scope": 125,
									"src": "5509:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "5594:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5746:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5771:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5763:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5786:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5778:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5762:33:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5819:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5818:6:0"
									},
									"scope": 125,
									"src": "5737:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2947,
							"src": "1168:4659:0",
							"usedErrors": [],
							"usedEvents": [
								24,
								33,
								42
							]
						},
						{
							"id": 126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "5981:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 127,
								"nodeType": "StructuredDocumentation",
								"src": "6007:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC721Receiver",
							"nameLocation": "6170:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "6192:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "6706:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6740:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6732:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6766:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6758:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6788:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6780:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6820:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6805:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6805:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6722:108:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6849:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 138,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6849:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6848:8:0"
									},
									"scope": 142,
									"src": "6697:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2947,
							"src": "6160:699:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7035:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 145,
										"name": "IERC721",
										"nameLocations": [
											"7225:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "7225:7:0"
									},
									"id": 146,
									"nodeType": "InheritanceSpecifier",
									"src": "7225:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 144,
								"nodeType": "StructuredDocumentation",
								"src": "7062:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167,
								125,
								11
							],
							"name": "IERC721Metadata",
							"nameLocation": "7206:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "7239:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7311:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7315:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "7341:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7340:15:0"
									},
									"scope": 167,
									"src": "7302:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "7362:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7436:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7442:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "7468:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7467:15:0"
									},
									"scope": 167,
									"src": "7427:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "7489:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7593:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "7602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7601:17:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "7642:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7642:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7641:15:0"
									},
									"scope": 167,
									"src": "7584:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2947,
							"src": "7196:463:0",
							"usedErrors": [],
							"usedEvents": [
								24,
								33,
								42
							]
						},
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7783:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "7809:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "Context",
							"nameLocation": "8324:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "8400:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 174,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8417:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8421:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8417:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 173,
												"id": 176,
												"nodeType": "Return",
												"src": "8410:17:0"
											}
										]
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "8347:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8357:2:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "8391:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8390:9:0"
									},
									"scope": 196,
									"src": "8338:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "8507:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 183,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8524:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8528:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "8524:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 182,
												"id": 185,
												"nodeType": "Return",
												"src": "8517:15:0"
											}
										]
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "8449:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8457:2:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "8491:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8491:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8490:16:0"
									},
									"scope": 196,
									"src": "8440:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "8617:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8634:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 191,
												"id": 193,
												"nodeType": "Return",
												"src": "8627:8:0"
											}
										]
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "8554:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8574:2:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "8608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8607:9:0"
									},
									"scope": 196,
									"src": "8545:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2947,
							"src": "8306:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 197,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "8772:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 198,
								"nodeType": "StructuredDocumentation",
								"src": "8798:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1249,
							"linearizedBaseContracts": [
								1249
							],
							"name": "Math",
							"nameLocation": "8880:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "8891:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 201,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "8952:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8972:2:0"
									},
									"src": "8946:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 206,
									"members": [
										{
											"id": 202,
											"name": "Floor",
											"nameLocation": "9005:5:0",
											"nodeType": "EnumValue",
											"src": "9005:5:0"
										},
										{
											"id": 203,
											"name": "Ceil",
											"nameLocation": "9048:4:0",
											"nodeType": "EnumValue",
											"src": "9048:4:0"
										},
										{
											"id": 204,
											"name": "Trunc",
											"nameLocation": "9090:5:0",
											"nodeType": "EnumValue",
											"src": "9090:5:0"
										},
										{
											"id": 205,
											"name": "Expand",
											"nameLocation": "9120:6:0",
											"nodeType": "EnumValue",
											"src": "9120:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "8986:8:0",
									"nodeType": "EnumDefinition",
									"src": "8981:169:0"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "9330:140:0",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "9340:124:0",
												"statements": [
													{
														"assignments": [
															219
														],
														"declarations": [
															{
																"constant": false,
																"id": 219,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "9372:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 236,
																"src": "9364:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 218,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9364:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 223,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 220,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "9376:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "9380:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9376:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9364:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "9399:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 225,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "9403:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9399:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 231,
														"nodeType": "IfStatement",
														"src": "9395:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9414:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9421:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 229,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9413:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 217,
															"id": 230,
															"nodeType": "Return",
															"src": "9406:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9445:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 233,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "9451:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9444:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 217,
														"id": 235,
														"nodeType": "Return",
														"src": "9437:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "9156:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "9263:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9278:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "9270:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9289:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "9281:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9269:22:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "9315:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9315:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "9321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9314:15:0"
									},
									"scope": 1249,
									"src": "9254:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "9653:113:0",
										"statements": [
											{
												"id": 264,
												"nodeType": "UncheckedBlock",
												"src": "9663:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 250,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "9691:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 251,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "9695:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 257,
														"nodeType": "IfStatement",
														"src": "9687:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9706:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9713:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9705:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 249,
															"id": 256,
															"nodeType": "Return",
															"src": "9698:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9737:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 259,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "9743:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 260,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "9747:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9743:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 262,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9736:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 249,
														"id": 263,
														"nodeType": "Return",
														"src": "9729:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "9476:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "9586:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9601:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9593:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9612:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9604:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9592:22:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9638:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9644:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9637:15:0"
									},
									"scope": 1249,
									"src": "9577:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "9952:417:0",
										"statements": [
											{
												"id": 306,
												"nodeType": "UncheckedBlock",
												"src": "9962:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "10220:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10225:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10220:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 285,
														"nodeType": "IfStatement",
														"src": "10216:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10236:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10242:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10235:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 277,
															"id": 284,
															"nodeType": "Return",
															"src": "10228:16:0"
														}
													},
													{
														"assignments": [
															287
														],
														"declarations": [
															{
																"constant": false,
																"id": 287,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "10266:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 306,
																"src": "10258:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 286,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10258:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 291,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "10270:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 289,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "10274:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10270:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10258:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 292,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "10293:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 293,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "10297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10293:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 295,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "10302:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10293:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 301,
														"nodeType": "IfStatement",
														"src": "10289:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10313:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10320:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10312:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 277,
															"id": 300,
															"nodeType": "Return",
															"src": "10305:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10344:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 303,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "10350:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 304,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10343:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 277,
														"id": 305,
														"nodeType": "Return",
														"src": "10336:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "9772:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "9885:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9900:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9892:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9911:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9903:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9891:22:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9937:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9936:15:0"
									},
									"scope": 1249,
									"src": "9876:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "10556:114:0",
										"statements": [
											{
												"id": 334,
												"nodeType": "UncheckedBlock",
												"src": "10566:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10594:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10599:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10594:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 327,
														"nodeType": "IfStatement",
														"src": "10590:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10610:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10617:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 325,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10609:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 319,
															"id": 326,
															"nodeType": "Return",
															"src": "10602:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10641:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 329,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "10647:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 330,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "10651:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10647:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 332,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10640:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 319,
														"id": 333,
														"nodeType": "Return",
														"src": "10633:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "10375:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "10489:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10504:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10496:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10515:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10507:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10495:22:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10541:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10541:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10547:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10540:15:0"
									},
									"scope": 1249,
									"src": "10480:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "10867:114:0",
										"statements": [
											{
												"id": 362,
												"nodeType": "UncheckedBlock",
												"src": "10877:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "10905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10910:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 355,
														"nodeType": "IfStatement",
														"src": "10901:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10921:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10928:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10920:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 347,
															"id": 354,
															"nodeType": "Return",
															"src": "10913:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10952:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 357,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "10958:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 358,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "10962:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10958:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 360,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10951:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 347,
														"id": 361,
														"nodeType": "Return",
														"src": "10944:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "10676:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "10800:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10815:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10807:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10826:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10818:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10806:22:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10852:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10858:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10851:15:0"
									},
									"scope": 1249,
									"src": "10791:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "11118:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 374,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11135:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 375,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "11139:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11135:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 378,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "11147:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11135:13:0",
													"trueExpression": {
														"id": 377,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "11143:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 380,
												"nodeType": "Return",
												"src": "11128:20:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "10987:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "11060:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11072:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "11064:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11083:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "11075:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11063:22:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "11109:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11108:9:0"
									},
									"scope": 1249,
									"src": "11051:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "11293:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 392,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "11310:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 393,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "11314:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11310:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 396,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "11322:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11310:13:0",
													"trueExpression": {
														"id": 395,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "11318:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 398,
												"nodeType": "Return",
												"src": "11303:20:0"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "11161:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "11235:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11247:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "11239:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11258:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "11250:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11238:22:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "11284:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11283:9:0"
									},
									"scope": 1249,
									"src": "11226:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "11514:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 410,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "11569:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 411,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "11573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11569:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 413,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11568:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 414,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "11579:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 415,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "11583:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11579:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 417,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11578:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11588:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "11578:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11568:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 409,
												"id": 421,
												"nodeType": "Return",
												"src": "11561:28:0"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "11336:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "11452:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11468:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "11460:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11479:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "11471:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11459:22:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "11505:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11504:9:0"
									},
									"scope": 1249,
									"src": "11443:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "11888:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 433,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "11902:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11907:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11902:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "11898:127:0",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "11910:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 436,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "12009:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 437,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "12013:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12009:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 432,
															"id": 439,
															"nodeType": "Return",
															"src": "12002:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 442,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "12113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12118:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12113:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 446,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 426,
																			"src": "12127:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12127:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 449,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12126:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 450,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "12136:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12126:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12140:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "12126:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12113:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12122:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 455,
												"nodeType": "Return",
												"src": "12106:35:0"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "11602:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "11826:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "11834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11853:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "11845:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11833:22:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "11879:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11878:9:0"
									},
									"scope": 1249,
									"src": "11817:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "12570:4018:0",
										"statements": [
											{
												"id": 581,
												"nodeType": "UncheckedBlock",
												"src": "12580:4002:0",
												"statements": [
													{
														"assignments": [
															470
														],
														"declarations": [
															{
																"constant": false,
																"id": 470,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "12909:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "12901:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 469,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12901:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 474,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 471,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "12917:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 472,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "12921:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12917:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12901:21:0"
													},
													{
														"assignments": [
															476
														],
														"declarations": [
															{
																"constant": false,
																"id": 476,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "12989:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "12981:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 475,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12981:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 477,
														"nodeType": "VariableDeclarationStatement",
														"src": "12981:13:0"
													},
													{
														"AST": {
															"nativeSrc": "13061:122:0",
															"nodeType": "YulBlock",
															"src": "13061:122:0",
															"statements": [
																{
																	"nativeSrc": "13079:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13079:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "13096:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13096:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "13099:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13099:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13106:1:0",
																						"nodeType": "YulLiteral",
																						"src": "13106:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "13102:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "13102:3:0"
																				},
																				"nativeSrc": "13102:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13102:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "13089:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "13089:6:0"
																		},
																		"nativeSrc": "13089:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13089:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "13083:2:0",
																			"nodeType": "YulTypedName",
																			"src": "13083:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13126:43:0",
																	"nodeType": "YulAssignment",
																	"src": "13126:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "13143:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "13143:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "13147:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "13147:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13139:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "13139:3:0"
																				},
																				"nativeSrc": "13139:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13139:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "13158:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "13158:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "13162:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "13162:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "13155:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "13155:2:0"
																				},
																				"nativeSrc": "13155:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13155:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13135:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13135:3:0"
																		},
																		"nativeSrc": "13135:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13135:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "13126:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "13126:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "13147:5:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "13162:5:0",
																"valueSize": 1
															},
															{
																"declaration": 476,
																"isOffset": false,
																"isSlot": false,
																"src": "13126:5:0",
																"valueSize": 1
															},
															{
																"declaration": 460,
																"isOffset": false,
																"isSlot": false,
																"src": "13096:1:0",
																"valueSize": 1
															},
															{
																"declaration": 462,
																"isOffset": false,
																"isSlot": false,
																"src": "13099:1:0",
																"valueSize": 1
															}
														],
														"id": 478,
														"nodeType": "InlineAssembly",
														"src": "13052:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 479,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "13264:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13273:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13264:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 487,
														"nodeType": "IfStatement",
														"src": "13260:368:0",
														"trueBody": {
															"id": 486,
															"nodeType": "Block",
															"src": "13276:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 482,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "13594:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 483,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "13602:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13594:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 468,
																	"id": 485,
																	"nodeType": "Return",
																	"src": "13587:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 488,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "13734:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 489,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "13749:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13734:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 495,
														"nodeType": "IfStatement",
														"src": "13730:88:0",
														"trueBody": {
															"id": 494,
															"nodeType": "Block",
															"src": "13756:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 491,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "13781:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13781:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 493,
																	"nodeType": "RevertStatement",
																	"src": "13774:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															497
														],
														"declarations": [
															{
																"constant": false,
																"id": 497,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "14081:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "14073:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 496,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14073:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 498,
														"nodeType": "VariableDeclarationStatement",
														"src": "14073:17:0"
													},
													{
														"AST": {
															"nativeSrc": "14113:291:0",
															"nodeType": "YulBlock",
															"src": "14113:291:0",
															"statements": [
																{
																	"nativeSrc": "14182:38:0",
																	"nodeType": "YulAssignment",
																	"src": "14182:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "14202:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "14202:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "14205:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "14205:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "14208:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "14208:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "14195:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "14195:6:0"
																		},
																		"nativeSrc": "14195:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14195:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "14182:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "14182:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14302:41:0",
																	"nodeType": "YulAssignment",
																	"src": "14302:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "14315:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "14315:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "14325:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "14325:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "14336:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "14336:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "14322:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "14322:2:0"
																				},
																				"nativeSrc": "14322:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14322:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14311:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14311:3:0"
																		},
																		"nativeSrc": "14311:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14311:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "14302:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14302:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14360:30:0",
																	"nodeType": "YulAssignment",
																	"src": "14360:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "14373:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "14373:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "14380:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "14380:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14369:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14369:3:0"
																		},
																		"nativeSrc": "14369:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14369:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "14360:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14360:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 464,
																"isOffset": false,
																"isSlot": false,
																"src": "14208:11:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14336:5:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14360:5:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14373:5:0",
																"valueSize": 1
															},
															{
																"declaration": 476,
																"isOffset": false,
																"isSlot": false,
																"src": "14302:5:0",
																"valueSize": 1
															},
															{
																"declaration": 476,
																"isOffset": false,
																"isSlot": false,
																"src": "14315:5:0",
																"valueSize": 1
															},
															{
																"declaration": 497,
																"isOffset": false,
																"isSlot": false,
																"src": "14182:9:0",
																"valueSize": 1
															},
															{
																"declaration": 497,
																"isOffset": false,
																"isSlot": false,
																"src": "14325:9:0",
																"valueSize": 1
															},
															{
																"declaration": 497,
																"isOffset": false,
																"isSlot": false,
																"src": "14380:9:0",
																"valueSize": 1
															},
															{
																"declaration": 460,
																"isOffset": false,
																"isSlot": false,
																"src": "14202:1:0",
																"valueSize": 1
															},
															{
																"declaration": 462,
																"isOffset": false,
																"isSlot": false,
																"src": "14205:1:0",
																"valueSize": 1
															}
														],
														"id": 499,
														"nodeType": "InlineAssembly",
														"src": "14104:300:0"
													},
													{
														"assignments": [
															501
														],
														"declarations": [
															{
																"constant": false,
																"id": 501,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "14616:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "14608:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 500,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14608:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 508,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "14623:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14638:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 504,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "14642:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14638:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 506,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14637:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14623:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14608:46:0"
													},
													{
														"AST": {
															"nativeSrc": "14677:362:0",
															"nodeType": "YulBlock",
															"src": "14677:362:0",
															"statements": [
																{
																	"nativeSrc": "14742:37:0",
																	"nodeType": "YulAssignment",
																	"src": "14742:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "14761:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "14761:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "14774:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "14774:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "14757:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14757:3:0"
																		},
																		"nativeSrc": "14757:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14757:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "14742:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "14742:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14846:25:0",
																	"nodeType": "YulAssignment",
																	"src": "14846:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "14859:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "14859:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "14866:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "14866:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "14855:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14855:3:0"
																		},
																		"nativeSrc": "14855:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14855:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "14846:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14846:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14986:39:0",
																	"nodeType": "YulAssignment",
																	"src": "14986:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15006:1:0",
																								"nodeType": "YulLiteral",
																								"src": "15006:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "15009:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "15009:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "15002:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "15002:3:0"
																						},
																						"nativeSrc": "15002:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "15002:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "15016:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "15016:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "14998:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "14998:3:0"
																				},
																				"nativeSrc": "14998:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14998:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15023:1:0",
																				"nodeType": "YulLiteral",
																				"src": "15023:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14994:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14994:3:0"
																		},
																		"nativeSrc": "14994:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14994:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "14986:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "14986:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 464,
																"isOffset": false,
																"isSlot": false,
																"src": "14742:11:0",
																"valueSize": 1
															},
															{
																"declaration": 464,
																"isOffset": false,
																"isSlot": false,
																"src": "14761:11:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14846:5:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14859:5:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "14774:4:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "14866:4:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "14986:4:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "15009:4:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "15016:4:0",
																"valueSize": 1
															}
														],
														"id": 509,
														"nodeType": "InlineAssembly",
														"src": "14668:371:0"
													},
													{
														"expression": {
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 510,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "15105:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 511,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "15114:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 512,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "15122:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15114:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15105:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 515,
														"nodeType": "ExpressionStatement",
														"src": "15105:21:0"
													},
													{
														"assignments": [
															517
														],
														"declarations": [
															{
																"constant": false,
																"id": 517,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "15452:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "15444:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 516,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15444:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 524,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15463:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 519,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "15467:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15463:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 521,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15462:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15482:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "15462:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15444:39:0"
													},
													{
														"expression": {
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 525,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15700:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15711:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 527,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15715:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 528,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "15729:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15715:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15711:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15700:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 532,
														"nodeType": "ExpressionStatement",
														"src": "15700:36:0"
													},
													{
														"expression": {
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 533,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15784:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 536,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "15798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15784:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15780:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15769:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 540,
														"nodeType": "ExpressionStatement",
														"src": "15769:36:0"
													},
													{
														"expression": {
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 541,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15839:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15850:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 543,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15854:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 544,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "15868:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15854:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15850:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15839:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 548,
														"nodeType": "ExpressionStatement",
														"src": "15839:36:0"
													},
													{
														"expression": {
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 549,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15909:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15920:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 551,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15924:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 552,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "15938:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15924:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15920:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15909:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 556,
														"nodeType": "ExpressionStatement",
														"src": "15909:36:0"
													},
													{
														"expression": {
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 557,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15979:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15990:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 559,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15994:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 560,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "16008:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15994:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15990:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15979:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 564,
														"nodeType": "ExpressionStatement",
														"src": "15979:36:0"
													},
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 565,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "16050:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 567,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "16065:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 568,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "16079:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16065:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16061:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16050:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "16050:36:0"
													},
													{
														"expression": {
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 573,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "16520:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 574,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "16529:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 575,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "16537:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16529:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16520:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "16520:24:0"
													},
													{
														"expression": {
															"id": 579,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "16565:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 468,
														"id": 580,
														"nodeType": "Return",
														"src": "16558:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "12154:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "12481:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "12496:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "12488:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "12507:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "12499:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "12518:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "12510:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12487:43:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12562:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "12554:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12553:16:0"
									},
									"scope": 1249,
									"src": "12472:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "16830:192:0",
										"statements": [
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16848:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "16840:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [
														{
															"id": 601,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "16864:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "16867:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 603,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "16870:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															626
														],
														"referencedDeclaration": 583,
														"src": "16857:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16857:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16840:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 607,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "16913:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$206",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$206",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 606,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "16896:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16896:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 610,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16933:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 611,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 612,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "16939:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 609,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "16926:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16926:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16954:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16926:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16896:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "16892:101:0",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "16957:36:0",
													"statements": [
														{
															"expression": {
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 617,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "16971:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16981:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16971:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 620,
															"nodeType": "ExpressionStatement",
															"src": "16971:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 623,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 599,
													"src": "17009:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 597,
												"id": 624,
												"nodeType": "Return",
												"src": "17002:13:0"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "16594:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "16729:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "16744:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16736:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "16755:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16747:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "16766:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16758:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "16788:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16779:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "Rounding",
														"nameLocations": [
															"16779:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "16779:8:0"
													},
													"referencedDeclaration": 206,
													"src": "16779:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16735:62:0"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16820:9:0"
									},
									"scope": 1249,
									"src": "16720:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "17313:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "17327:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17332:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17327:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 640,
												"nodeType": "IfStatement",
												"src": "17323:45:0",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "17335:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17356:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 633,
															"id": 638,
															"nodeType": "Return",
															"src": "17349:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18055:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "18047:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18047:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 651,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18064:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 645,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "18075:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 644,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			905,
																			940
																		],
																		"referencedDeclaration": 905,
																		"src": "18070:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18070:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18081:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18070:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 649,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18069:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18064:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18047:36:0"
											},
											{
												"id": 736,
												"nodeType": "UncheckedBlock",
												"src": "18484:408:0",
												"statements": [
													{
														"expression": {
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 652,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18508:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 653,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18518:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 654,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18527:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 655,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18531:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18527:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18518:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 658,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18517:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18542:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18517:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18508:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 662,
														"nodeType": "ExpressionStatement",
														"src": "18508:35:0"
													},
													{
														"expression": {
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 663,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18557:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 664,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18567:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 665,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18576:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 666,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18580:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18576:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18567:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 669,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18566:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18591:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18566:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18557:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 673,
														"nodeType": "ExpressionStatement",
														"src": "18557:35:0"
													},
													{
														"expression": {
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 674,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18606:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 675,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18616:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 676,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18625:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 677,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18629:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18625:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18616:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 680,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18615:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18640:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18615:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18606:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 684,
														"nodeType": "ExpressionStatement",
														"src": "18606:35:0"
													},
													{
														"expression": {
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 685,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18655:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 686,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18665:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 687,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18674:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 688,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18678:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18674:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18665:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 691,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18664:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18689:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18664:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18655:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 695,
														"nodeType": "ExpressionStatement",
														"src": "18655:35:0"
													},
													{
														"expression": {
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 696,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18704:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 697,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18714:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 698,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18723:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 699,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18727:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18723:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18714:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18713:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18738:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18713:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18704:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "18704:35:0"
													},
													{
														"expression": {
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 707,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18753:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 708,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18763:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 709,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18772:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 710,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18776:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18772:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18763:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 713,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18762:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18787:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18762:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18753:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 717,
														"nodeType": "ExpressionStatement",
														"src": "18753:35:0"
													},
													{
														"expression": {
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 718,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18802:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 719,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18812:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 720,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18821:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 721,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18825:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18821:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18812:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18811:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18836:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18811:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18802:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 728,
														"nodeType": "ExpressionStatement",
														"src": "18802:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 730,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "18862:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 731,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "18870:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 732,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "18874:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18870:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 729,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "18858:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18858:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 633,
														"id": 735,
														"nodeType": "Return",
														"src": "18851:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "17028:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "17265:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17278:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "17270:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17269:11:0"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "17304:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17303:9:0"
									},
									"scope": 1249,
									"src": "17256:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "19074:164:0",
										"statements": [
											{
												"id": 771,
												"nodeType": "UncheckedBlock",
												"src": "19084:148:0",
												"statements": [
													{
														"assignments": [
															750
														],
														"declarations": [
															{
																"constant": false,
																"id": 750,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "19116:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 771,
																"src": "19108:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 749,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19108:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 754,
														"initialValue": {
															"arguments": [
																{
																	"id": 752,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "19130:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 751,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	738,
																	773
																],
																"referencedDeclaration": 738,
																"src": "19125:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19125:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19108:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "19153:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 757,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 744,
																						"src": "19180:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 756,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "19163:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19163:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 761,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 759,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 750,
																						"src": "19193:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 760,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 750,
																						"src": "19202:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19193:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 762,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 741,
																					"src": "19211:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19193:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19163:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19219:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "19163:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19215:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 768,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19162:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "19153:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 748,
														"id": 770,
														"nodeType": "Return",
														"src": "19146:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "18904:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "19007:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19020:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "19012:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19032:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "19023:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 742,
														"name": "Rounding",
														"nameLocations": [
															"19023:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "19023:8:0"
													},
													"referencedDeclaration": 206,
													"src": "19023:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19011:30:0"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "19065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19064:9:0"
									},
									"scope": 1249,
									"src": "18998:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "19429:922:0",
										"statements": [
											{
												"assignments": [
													782
												],
												"declarations": [
													{
														"constant": false,
														"id": 782,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "19447:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "19439:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 781,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"hexValue": "30",
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19456:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19439:18:0"
											},
											{
												"id": 901,
												"nodeType": "UncheckedBlock",
												"src": "19467:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 785,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19495:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19504:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "19495:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19510:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19495:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 799,
														"nodeType": "IfStatement",
														"src": "19491:99:0",
														"trueBody": {
															"id": 798,
															"nodeType": "Block",
															"src": "19513:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 790,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19531:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19541:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19531:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "19531:13:0"
																},
																{
																	"expression": {
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 794,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19562:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19572:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19562:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 797,
																	"nodeType": "ExpressionStatement",
																	"src": "19562:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 800,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19607:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19616:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "19607:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19621:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19607:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 814,
														"nodeType": "IfStatement",
														"src": "19603:96:0",
														"trueBody": {
															"id": 813,
															"nodeType": "Block",
															"src": "19624:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 805,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19642:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19652:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19642:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 808,
																	"nodeType": "ExpressionStatement",
																	"src": "19642:12:0"
																},
																{
																	"expression": {
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 809,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19672:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19682:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19672:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 812,
																	"nodeType": "ExpressionStatement",
																	"src": "19672:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 815,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19716:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19725:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "19716:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19730:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19716:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 829,
														"nodeType": "IfStatement",
														"src": "19712:96:0",
														"trueBody": {
															"id": 828,
															"nodeType": "Block",
															"src": "19733:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 820,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19751:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19761:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19751:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 823,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:12:0"
																},
																{
																	"expression": {
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 824,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19781:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19791:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19781:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 827,
																	"nodeType": "ExpressionStatement",
																	"src": "19781:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 830,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19825:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19834:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "19825:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19839:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19825:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 844,
														"nodeType": "IfStatement",
														"src": "19821:96:0",
														"trueBody": {
															"id": 843,
															"nodeType": "Block",
															"src": "19842:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 835,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19860:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19870:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19860:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 838,
																	"nodeType": "ExpressionStatement",
																	"src": "19860:12:0"
																},
																{
																	"expression": {
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 839,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19890:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19900:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19890:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 842,
																	"nodeType": "ExpressionStatement",
																	"src": "19890:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 845,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19934:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19943:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "19934:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19947:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19934:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 859,
														"nodeType": "IfStatement",
														"src": "19930:93:0",
														"trueBody": {
															"id": 858,
															"nodeType": "Block",
															"src": "19950:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 850,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19968:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19978:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19968:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 853,
																	"nodeType": "ExpressionStatement",
																	"src": "19968:11:0"
																},
																{
																	"expression": {
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 854,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19997:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20007:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19997:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 857,
																	"nodeType": "ExpressionStatement",
																	"src": "19997:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 860,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "20040:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20049:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "20040:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20053:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20040:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 874,
														"nodeType": "IfStatement",
														"src": "20036:93:0",
														"trueBody": {
															"id": 873,
															"nodeType": "Block",
															"src": "20056:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 865,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "20074:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20084:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20074:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 868,
																	"nodeType": "ExpressionStatement",
																	"src": "20074:11:0"
																},
																{
																	"expression": {
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 869,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "20103:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20113:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20103:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 872,
																	"nodeType": "ExpressionStatement",
																	"src": "20103:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 875,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "20146:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "20146:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20159:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20146:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 889,
														"nodeType": "IfStatement",
														"src": "20142:93:0",
														"trueBody": {
															"id": 888,
															"nodeType": "Block",
															"src": "20162:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 880,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "20180:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20190:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20180:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "20180:11:0"
																},
																{
																	"expression": {
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 884,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "20209:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20219:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20209:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 887,
																	"nodeType": "ExpressionStatement",
																	"src": "20209:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 890,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "20252:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20261:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20252:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20252:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 900,
														"nodeType": "IfStatement",
														"src": "20248:64:0",
														"trueBody": {
															"id": 899,
															"nodeType": "Block",
															"src": "20268:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 895,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "20286:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20296:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20286:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 898,
																	"nodeType": "ExpressionStatement",
																	"src": "20286:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 902,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 782,
													"src": "20338:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 780,
												"id": 903,
												"nodeType": "Return",
												"src": "20331:13:0"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "19244:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "19377:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19390:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "19382:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19381:15:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "19420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19419:9:0"
									},
									"scope": 1249,
									"src": "19368:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "20584:168:0",
										"statements": [
											{
												"id": 938,
												"nodeType": "UncheckedBlock",
												"src": "20594:152:0",
												"statements": [
													{
														"assignments": [
															917
														],
														"declarations": [
															{
																"constant": false,
																"id": 917,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "20626:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 938,
																"src": "20618:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 916,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20618:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 921,
														"initialValue": {
															"arguments": [
																{
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "20640:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 918,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	905,
																	940
																],
																"referencedDeclaration": 905,
																"src": "20635:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20635:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20618:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 922,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "20667:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 924,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 911,
																						"src": "20694:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 923,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "20677:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20677:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 930,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 928,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 926,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "20707:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 927,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 917,
																						"src": "20712:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "20707:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 929,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "20721:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20707:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "20677:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20733:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "20677:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20729:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20676:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "20667:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 915,
														"id": 937,
														"nodeType": "Return",
														"src": "20660:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "20357:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "20513:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20526:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "20518:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "20542:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "20533:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 910,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 909,
														"name": "Rounding",
														"nameLocations": [
															"20533:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "20533:8:0"
													},
													"referencedDeclaration": 206,
													"src": "20533:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20517:34:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "20575:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20574:9:0"
									},
									"scope": 1249,
									"src": "20504:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "20945:854:0",
										"statements": [
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20963:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "20955:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20955:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 951,
												"initialValue": {
													"hexValue": "30",
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20972:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20955:18:0"
											},
											{
												"id": 1065,
												"nodeType": "UncheckedBlock",
												"src": "20983:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 952,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21011:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21020:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21026:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21020:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "21011:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 968,
														"nodeType": "IfStatement",
														"src": "21007:103:0",
														"trueBody": {
															"id": 967,
															"nodeType": "Block",
															"src": "21030:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 957,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21048:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21057:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21063:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "21057:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "21048:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "21048:17:0"
																},
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 963,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21083:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21093:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21083:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "21083:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 969,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21127:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21136:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21142:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "21136:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "21127:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 985,
														"nodeType": "IfStatement",
														"src": "21123:103:0",
														"trueBody": {
															"id": 984,
															"nodeType": "Block",
															"src": "21146:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 974,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21164:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21173:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21179:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "21173:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "21164:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 979,
																	"nodeType": "ExpressionStatement",
																	"src": "21164:17:0"
																},
																{
																	"expression": {
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 980,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21199:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21209:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21199:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 983,
																	"nodeType": "ExpressionStatement",
																	"src": "21199:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 986,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21243:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21252:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21258:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "21252:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "21243:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1002,
														"nodeType": "IfStatement",
														"src": "21239:103:0",
														"trueBody": {
															"id": 1001,
															"nodeType": "Block",
															"src": "21262:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 991,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21280:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21289:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21295:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "21289:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "21280:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 996,
																	"nodeType": "ExpressionStatement",
																	"src": "21280:17:0"
																},
																{
																	"expression": {
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 997,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21315:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21325:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21315:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1000,
																	"nodeType": "ExpressionStatement",
																	"src": "21315:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21359:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21368:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21374:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "21368:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "21359:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1019,
														"nodeType": "IfStatement",
														"src": "21355:100:0",
														"trueBody": {
															"id": 1018,
															"nodeType": "Block",
															"src": "21377:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1008,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21395:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21404:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21410:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "21404:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "21395:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1013,
																	"nodeType": "ExpressionStatement",
																	"src": "21395:16:0"
																},
																{
																	"expression": {
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1014,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21429:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21439:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "21429:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1017,
																	"nodeType": "ExpressionStatement",
																	"src": "21429:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1020,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21472:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21481:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21487:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "21481:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "21472:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1036,
														"nodeType": "IfStatement",
														"src": "21468:100:0",
														"trueBody": {
															"id": 1035,
															"nodeType": "Block",
															"src": "21490:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1025,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21508:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21517:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21523:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "21517:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "21508:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1030,
																	"nodeType": "ExpressionStatement",
																	"src": "21508:16:0"
																},
																{
																	"expression": {
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1031,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21542:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21552:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "21542:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1034,
																	"nodeType": "ExpressionStatement",
																	"src": "21542:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1037,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21585:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21594:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21600:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "21594:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "21585:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1053,
														"nodeType": "IfStatement",
														"src": "21581:100:0",
														"trueBody": {
															"id": 1052,
															"nodeType": "Block",
															"src": "21603:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1042,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21621:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21630:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21636:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "21630:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "21621:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1047,
																	"nodeType": "ExpressionStatement",
																	"src": "21621:16:0"
																},
																{
																	"expression": {
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1048,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21655:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21665:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "21655:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1051,
																	"nodeType": "ExpressionStatement",
																	"src": "21655:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21698:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21707:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21713:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21707:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "21698:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1064,
														"nodeType": "IfStatement",
														"src": "21694:66:0",
														"trueBody": {
															"id": 1063,
															"nodeType": "Block",
															"src": "21716:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1059,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21734:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21744:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "21734:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1062,
																	"nodeType": "ExpressionStatement",
																	"src": "21734:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1066,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "21786:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 947,
												"id": 1067,
												"nodeType": "Return",
												"src": "21779:13:0"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "20758:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "20892:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20906:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "20898:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20897:15:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "20936:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20935:9:0"
									},
									"scope": 1249,
									"src": "20883:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "22034:170:0",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "22044:154:0",
												"statements": [
													{
														"assignments": [
															1081
														],
														"declarations": [
															{
																"constant": false,
																"id": 1081,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22076:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "22068:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1080,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22068:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1085,
														"initialValue": {
															"arguments": [
																{
																	"id": 1083,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "22091:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1082,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1069,
																	1104
																],
																"referencedDeclaration": 1069,
																"src": "22085:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22085:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22068:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "22118:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1088,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1075,
																						"src": "22145:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1087,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "22128:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22128:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1090,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22158:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1091,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1081,
																						"src": "22164:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22158:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1093,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1072,
																					"src": "22173:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22158:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22128:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22185:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22128:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22181:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22127:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22118:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1079,
														"id": 1101,
														"nodeType": "Return",
														"src": "22111:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "21805:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "21962:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21976:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "21968:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21992:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "21983:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1074,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1073,
														"name": "Rounding",
														"nameLocations": [
															"21983:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "21983:8:0"
													},
													"referencedDeclaration": 206,
													"src": "21983:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21967:34:0"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "22025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22024:9:0"
									},
									"scope": 1249,
									"src": "21953:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "22524:600:0",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "22542:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "22534:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22534:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"hexValue": "30",
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22551:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22534:18:0"
											},
											{
												"id": 1187,
												"nodeType": "UncheckedBlock",
												"src": "22562:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "22590:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22599:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "22590:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22605:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22590:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1130,
														"nodeType": "IfStatement",
														"src": "22586:98:0",
														"trueBody": {
															"id": 1129,
															"nodeType": "Block",
															"src": "22608:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "22626:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22636:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "22626:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1124,
																	"nodeType": "ExpressionStatement",
																	"src": "22626:13:0"
																},
																{
																	"expression": {
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1125,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "22657:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22667:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22657:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1128,
																	"nodeType": "ExpressionStatement",
																	"src": "22657:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "22701:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22710:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "22701:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22701:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1145,
														"nodeType": "IfStatement",
														"src": "22697:95:0",
														"trueBody": {
															"id": 1144,
															"nodeType": "Block",
															"src": "22718:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1136,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "22736:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22746:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "22736:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1139,
																	"nodeType": "ExpressionStatement",
																	"src": "22736:12:0"
																},
																{
																	"expression": {
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "22766:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22776:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22766:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1143,
																	"nodeType": "ExpressionStatement",
																	"src": "22766:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "22809:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22818:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22809:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22823:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22809:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1160,
														"nodeType": "IfStatement",
														"src": "22805:95:0",
														"trueBody": {
															"id": 1159,
															"nodeType": "Block",
															"src": "22826:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "22844:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22854:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22844:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1154,
																	"nodeType": "ExpressionStatement",
																	"src": "22844:12:0"
																},
																{
																	"expression": {
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1155,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "22874:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22884:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22874:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1158,
																	"nodeType": "ExpressionStatement",
																	"src": "22874:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "22917:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22926:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "22917:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22931:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22917:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1175,
														"nodeType": "IfStatement",
														"src": "22913:95:0",
														"trueBody": {
															"id": 1174,
															"nodeType": "Block",
															"src": "22934:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1166,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "22952:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22962:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22952:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1169,
																	"nodeType": "ExpressionStatement",
																	"src": "22952:12:0"
																},
																{
																	"expression": {
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1170,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "22982:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22992:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22982:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1173,
																	"nodeType": "ExpressionStatement",
																	"src": "22982:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1176,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "23025:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23034:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "23025:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23038:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23025:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1186,
														"nodeType": "IfStatement",
														"src": "23021:64:0",
														"trueBody": {
															"id": 1185,
															"nodeType": "Block",
															"src": "23041:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1181,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "23059:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23069:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23059:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1184,
																	"nodeType": "ExpressionStatement",
																	"src": "23059:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1188,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1113,
													"src": "23111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1189,
												"nodeType": "Return",
												"src": "23104:13:0"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "22210:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "22470:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22485:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "22477:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22476:15:0"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "22515:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22514:9:0"
									},
									"scope": 1249,
									"src": "22461:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "23361:177:0",
										"statements": [
											{
												"id": 1227,
												"nodeType": "UncheckedBlock",
												"src": "23371:161:0",
												"statements": [
													{
														"assignments": [
															1203
														],
														"declarations": [
															{
																"constant": false,
																"id": 1203,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23403:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1227,
																"src": "23395:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1202,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23395:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1207,
														"initialValue": {
															"arguments": [
																{
																	"id": 1205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "23419:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1204,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1191,
																	1229
																],
																"referencedDeclaration": 1191,
																"src": "23412:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23412:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23395:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1208,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "23446:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1210,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1197,
																						"src": "23473:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1209,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "23456:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23456:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1217,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1212,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "23486:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1215,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1213,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1203,
																									"src": "23492:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1214,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "23502:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "23492:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1216,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "23491:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23486:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1218,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1194,
																					"src": "23507:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23486:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "23456:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23519:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "23456:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23515:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1224,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23455:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "23446:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1201,
														"id": 1226,
														"nodeType": "Return",
														"src": "23439:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "23130:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "23288:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23303:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "23295:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23319:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "23310:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1195,
														"name": "Rounding",
														"nameLocations": [
															"23310:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "23310:8:0"
													},
													"referencedDeclaration": 206,
													"src": "23310:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23294:34:0"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "23352:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23351:9:0"
									},
									"scope": 1249,
									"src": "23279:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "23736:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1240,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "23759:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$206",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$206",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23753:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1238,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "23753:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23753:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23771:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "23753:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23776:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "23753:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1246,
												"nodeType": "Return",
												"src": "23746:31:0"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "23544:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "23671:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "23688:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1231,
														"name": "Rounding",
														"nameLocations": [
															"23688:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "23688:8:0"
													},
													"referencedDeclaration": 206,
													"src": "23688:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23687:19:0"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "23730:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23729:6:0"
									},
									"scope": 1249,
									"src": "23662:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2947,
							"src": "8872:14914:0",
							"usedErrors": [
								201
							],
							"usedEvents": []
						},
						{
							"id": 1250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23926:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1251,
								"nodeType": "StructuredDocumentation",
								"src": "23952:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1353,
							"linearizedBaseContracts": [
								1353
							],
							"name": "SignedMath",
							"nameLocation": "24041:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "24193:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1261,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "24210:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1262,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "24214:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "24210:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1265,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "24222:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "24210:13:0",
													"trueExpression": {
														"id": 1264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "24218:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1267,
												"nodeType": "Return",
												"src": "24203:20:0"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "24058:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "24138:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24149:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "24142:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1253,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24142:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24159:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "24152:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1255,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24152:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24141:20:0"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "24185:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1258,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24185:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24184:8:0"
									},
									"scope": 1353,
									"src": "24129:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "24372:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1279,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "24389:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1280,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "24393:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "24389:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1283,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "24401:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "24389:13:0",
													"trueExpression": {
														"id": 1282,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "24397:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1285,
												"nodeType": "Return",
												"src": "24382:20:0"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "24236:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "24317:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24328:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "24321:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1271,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "24331:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1273,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24331:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24320:20:0"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "24364:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1276,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24364:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24363:8:0"
									},
									"scope": 1353,
									"src": "24308:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "24614:162:0",
										"statements": [
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "24683:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "24676:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1297,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "24676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1299,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "24688:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1300,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "24692:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "24688:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1302,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24687:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1303,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1290,
																				"src": "24699:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1304,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "24703:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "24699:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24698:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24698:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1309,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24697:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24687:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24676:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1312,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "24728:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1317,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1298,
																						"src": "24748:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "24740:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1315,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "24740:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24740:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24754:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "24740:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "24733:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1313,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "24733:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24733:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1322,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1290,
																				"src": "24762:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1323,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "24766:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "24762:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24761:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "24733:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1327,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24732:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24728:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1329,
												"nodeType": "Return",
												"src": "24721:48:0"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "24415:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "24555:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24570:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "24563:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1289,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24563:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "24573:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1291,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24573:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24562:20:0"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "24606:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1294,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24606:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24605:8:0"
									},
									"scope": 1353,
									"src": "24546:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "24920:158:0",
										"statements": [
											{
												"id": 1350,
												"nodeType": "UncheckedBlock",
												"src": "24930:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1341,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "25045:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25050:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25045:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "25058:2:0",
																		"subExpression": {
																			"id": 1345,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "25059:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "25045:15:0",
																	"trueExpression": {
																		"id": 1344,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "25054:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25037:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1339,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25037:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25037:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1338,
														"id": 1349,
														"nodeType": "Return",
														"src": "25030:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "24782:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "24874:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "24885:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "24878:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1333,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24878:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24877:10:0"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "24911:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24910:9:0"
									},
									"scope": 1353,
									"src": "24865:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2947,
							"src": "24033:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25204:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1355,
								"nodeType": "StructuredDocumentation",
								"src": "25232:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1603,
							"linearizedBaseContracts": [
								1603
							],
							"name": "Strings",
							"nameLocation": "25275:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1358,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "25314:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "25289:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1356,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "25289:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25327:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1361,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "25374:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "25351:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1359,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "25351:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25391:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "25400:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1368,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "25492:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25529:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "25521:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "25544:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "25536:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25520:31:0"
									},
									"src": "25486:66:0"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "25724:627:0",
										"statements": [
											{
												"id": 1414,
												"nodeType": "UncheckedBlock",
												"src": "25734:611:0",
												"statements": [
													{
														"assignments": [
															1377
														],
														"declarations": [
															{
																"constant": false,
																"id": 1377,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "25766:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1414,
																"src": "25758:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1376,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25758:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1384,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1380,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "25786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1378,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "25775:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1249_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25780:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1069,
																	"src": "25775:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25775:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25795:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "25775:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25758:38:0"
													},
													{
														"assignments": [
															1386
														],
														"declarations": [
															{
																"constant": false,
																"id": 1386,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "25824:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1414,
																"src": "25810:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1385,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "25810:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1391,
														"initialValue": {
															"arguments": [
																{
																	"id": 1389,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "25844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "25833:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1387,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "25837:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25833:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25810:41:0"
													},
													{
														"assignments": [
															1393
														],
														"declarations": [
															{
																"constant": false,
																"id": 1393,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "25873:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1414,
																"src": "25865:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25865:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1394,
														"nodeType": "VariableDeclarationStatement",
														"src": "25865:11:0"
													},
													{
														"AST": {
															"nativeSrc": "25946:67:0",
															"nodeType": "YulBlock",
															"src": "25946:67:0",
															"statements": [
																{
																	"nativeSrc": "25964:35:0",
																	"nodeType": "YulAssignment",
																	"src": "25964:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "25975:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "25975:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25987:2:0",
																						"nodeType": "YulLiteral",
																						"src": "25987:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "25991:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "25991:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25983:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "25983:3:0"
																				},
																				"nativeSrc": "25983:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "25983:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25971:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25971:3:0"
																		},
																		"nativeSrc": "25971:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "25971:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "25964:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25964:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1386,
																"isOffset": false,
																"isSlot": false,
																"src": "25975:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1377,
																"isOffset": false,
																"isSlot": false,
																"src": "25991:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1393,
																"isOffset": false,
																"isSlot": false,
																"src": "25964:3:0",
																"valueSize": 1
															}
														],
														"id": 1395,
														"nodeType": "InlineAssembly",
														"src": "25937:76:0"
													},
													{
														"body": {
															"id": 1410,
															"nodeType": "Block",
															"src": "26039:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "26057:5:0",
																		"subExpression": {
																			"id": 1397,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1393,
																			"src": "26057:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "26057:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "26140:86:0",
																		"nodeType": "YulBlock",
																		"src": "26140:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "26170:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "26170:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "26184:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "26184:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "26191:2:0",
																											"nodeType": "YulLiteral",
																											"src": "26191:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "26180:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "26180:3:0"
																									},
																									"nativeSrc": "26180:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "26180:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "26196:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "26196:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "26175:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "26175:4:0"
																							},
																							"nativeSrc": "26175:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "26175:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "26162:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "26162:7:0"
																					},
																					"nativeSrc": "26162:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "26162:46:0"
																				},
																				"nativeSrc": "26162:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "26162:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1358,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "26196:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1393,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "26170:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1371,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "26184:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1400,
																	"nodeType": "InlineAssembly",
																	"src": "26131:95:0"
																},
																{
																	"expression": {
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1401,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "26243:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26252:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "26243:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1404,
																	"nodeType": "ExpressionStatement",
																	"src": "26243:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1405,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "26276:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26285:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "26276:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1409,
																	"nodeType": "IfStatement",
																	"src": "26272:21:0",
																	"trueBody": {
																		"id": 1408,
																		"nodeType": "Break",
																		"src": "26288:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26033:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1411,
														"nodeType": "WhileStatement",
														"src": "26026:282:0"
													},
													{
														"expression": {
															"id": 1412,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "26328:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1375,
														"id": 1413,
														"nodeType": "Return",
														"src": "26321:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "25558:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "25662:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "25671:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25670:15:0"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "25709:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25708:15:0"
									},
									"scope": 1603,
									"src": "25653:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "26527:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "26558:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26558:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26576:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "26558:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26570:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "26604:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1434,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1353,
																			"src": "26589:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1353_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "26600:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1352,
																		"src": "26589:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26589:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1433,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "26580:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26580:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26544:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1424,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "26544:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26551:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "26544:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26544:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1440,
												"nodeType": "Return",
												"src": "26537:75:0"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "26357:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "26460:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "26475:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1418,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26475:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26474:14:0"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "26512:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26511:15:0"
									},
									"scope": 1603,
									"src": "26451:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "26798:100:0",
										"statements": [
											{
												"id": 1460,
												"nodeType": "UncheckedBlock",
												"src": "26808:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "26851:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1454,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1445,
																				"src": "26870:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1452,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "26858:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1249_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26863:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1191,
																			"src": "26858:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26858:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26879:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "26858:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1450,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1462,
																	1545,
																	1565
																],
																"referencedDeclaration": 1545,
																"src": "26839:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26839:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1449,
														"id": 1459,
														"nodeType": "Return",
														"src": "26832:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "26625:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "26733:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26753:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "26745:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26744:15:0"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "26783:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26783:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26782:15:0"
									},
									"scope": 1603,
									"src": "26724:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "27111:435:0",
										"statements": [
											{
												"assignments": [
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "27129:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "27121:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"initialValue": {
													"id": 1474,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1465,
													"src": "27142:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27121:26:0"
											},
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "27170:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "27157:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1476,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "27157:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1486,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27189:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1481,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "27193:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27189:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27202:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "27189:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "27179:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1478,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "27183:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27179:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27157:47:0"
											},
											{
												"expression": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1487,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "27214:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1489,
														"indexExpression": {
															"hexValue": "30",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27221:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27214:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27226:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "27214:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "27214:15:0"
											},
											{
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1493,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "27239:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1495,
														"indexExpression": {
															"hexValue": "31",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27246:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27239:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27251:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "27239:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "27239:15:0"
											},
											{
												"body": {
													"id": 1527,
													"nodeType": "Block",
													"src": "27309:95:0",
													"statements": [
														{
															"expression": {
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1513,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "27323:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1515,
																	"indexExpression": {
																		"id": 1514,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1500,
																		"src": "27330:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27323:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1516,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "27335:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1520,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1517,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "27346:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27359:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "27346:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27335:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "27323:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1522,
															"nodeType": "ExpressionStatement",
															"src": "27323:40:0"
														},
														{
															"expression": {
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1523,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "27377:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27392:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27377:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1526,
															"nodeType": "ExpressionStatement",
															"src": "27377:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1507,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "27297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27301:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "27297:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1528,
												"initializationExpression": {
													"assignments": [
														1500
													],
													"declarations": [
														{
															"constant": false,
															"id": 1500,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "27277:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1528,
															"src": "27269:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1499,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27269:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1506,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27281:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1502,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "27285:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27281:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27294:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "27281:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "27269:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "27304:3:0",
														"subExpression": {
															"id": 1510,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "27306:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1512,
													"nodeType": "ExpressionStatement",
													"src": "27304:3:0"
												},
												"nodeType": "ForStatement",
												"src": "27264:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1529,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "27417:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27417:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1538,
												"nodeType": "IfStatement",
												"src": "27413:96:0",
												"trueBody": {
													"id": 1537,
													"nodeType": "Block",
													"src": "27434:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1533,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1465,
																		"src": "27484:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1534,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "27491:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1532,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "27455:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27455:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1536,
															"nodeType": "RevertStatement",
															"src": "27448:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1541,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "27532:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "27525:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1539,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "27525:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27525:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1471,
												"id": 1543,
												"nodeType": "Return",
												"src": "27518:21:0"
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "26904:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "27030:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27050:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "27042:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "27065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "27057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27041:31:0"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "27096:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27096:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27095:15:0"
									},
									"scope": 1603,
									"src": "27021:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "27778:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1558,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1548,
																			"src": "27823:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27815:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1556,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "27815:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27815:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27807:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1554,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27807:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27807:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1561,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "27831:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1553,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1462,
															1545,
															1565
														],
														"referencedDeclaration": 1545,
														"src": "27795:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27795:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1552,
												"id": 1563,
												"nodeType": "Return",
												"src": "27788:58:0"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "27552:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "27714:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "27734:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "27726:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27725:14:0"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "27763:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1550,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27763:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27762:15:0"
									},
									"scope": 1603,
									"src": "27705:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "28008:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1577,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1568,
																		"src": "28031:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28025:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1575,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "28025:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28025:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28034:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28025:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1582,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "28050:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28044:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1580,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "28044:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28044:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28053:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28044:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "28025:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1589,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "28079:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "28073:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1587,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "28073:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28073:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1586,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "28063:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28063:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1595,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "28102:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "28096:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1593,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "28096:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28096:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1592,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "28086:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28086:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "28063:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28025:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1574,
												"id": 1600,
												"nodeType": "Return",
												"src": "28018:87:0"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "27859:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "27939:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "27959:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "27945:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27945:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "27976:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "27962:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27962:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27944:34:0"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "28002:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28002:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28001:6:0"
									},
									"scope": 1603,
									"src": "27930:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2947,
							"src": "25267:2847:0",
							"usedErrors": [
								1368
							],
							"usedEvents": []
						},
						{
							"id": 1604,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28264:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1606,
										"name": "IERC165",
										"nameLocations": [
											"28798:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "28798:7:0"
									},
									"id": 1607,
									"nodeType": "InheritanceSpecifier",
									"src": "28798:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1605,
								"nodeType": "StructuredDocumentation",
								"src": "28291:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1624,
							"linearizedBaseContracts": [
								1624,
								11
							],
							"name": "ERC165",
							"nameLocation": "28788:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "28955:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1615,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "28972:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1617,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "28992:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1616,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "28987:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28987:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "29001:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "28987:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "28972:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1614,
												"id": 1621,
												"nodeType": "Return",
												"src": "28965:47:0"
											}
										]
									},
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "28812:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "28882:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "28907:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "28900:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1609,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "28900:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28899:20:0"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "28949:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28949:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28948:6:0"
									},
									"scope": 1624,
									"src": "28873:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2947,
							"src": "28770:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29168:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1626,
								"nodeType": "StructuredDocumentation",
								"src": "29194:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 1665,
							"linearizedBaseContracts": [
								1665
							],
							"name": "IERC20Errors",
							"nameLocation": "29344:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "29363:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1635,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "29683:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "29716:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29708:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "29732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "29749:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29741:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29707:49:0"
									},
									"src": "29677:80:0"
								},
								{
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "29763:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1640,
									"name": "ERC20InvalidSender",
									"nameLocation": "29926:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "29953:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "29945:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29944:16:0"
									},
									"src": "29920:41:0"
								},
								{
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "29967:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1645,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "30137:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "30166:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "30158:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30157:18:0"
									},
									"src": "30131:45:0"
								},
								{
									"documentation": {
										"id": 1646,
										"nodeType": "StructuredDocumentation",
										"src": "30182:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1654,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "30538:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "30573:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "30565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "30590:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "30582:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "30609:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "30601:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30564:52:0"
									},
									"src": "30532:85:0"
								},
								{
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "30623:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1659,
									"name": "ERC20InvalidApprover",
									"nameLocation": "30808:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "30837:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "30829:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30828:18:0"
									},
									"src": "30802:45:0"
								},
								{
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "30853:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1664,
									"name": "ERC20InvalidSpender",
									"nameLocation": "31059:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "31079:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31078:17:0"
									},
									"src": "31053:43:0"
								}
							],
							"scope": 2947,
							"src": "29334:1764:0",
							"usedErrors": [
								1635,
								1640,
								1645,
								1654,
								1659,
								1664
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1666,
								"nodeType": "StructuredDocumentation",
								"src": "31100:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 1713,
							"linearizedBaseContracts": [
								1713
							],
							"name": "IERC721Errors",
							"nameLocation": "31252:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "31272:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1671,
									"name": "ERC721InvalidOwner",
									"nameLocation": "31502:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "31529:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "31521:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31520:15:0"
									},
									"src": "31496:40:0"
								},
								{
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "31542:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1676,
									"name": "ERC721NonexistentToken",
									"nameLocation": "31685:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31716:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "31708:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31707:17:0"
									},
									"src": "31679:46:0"
								},
								{
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "31731:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1685,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "32031:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "32060:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32052:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32076:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32068:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32093:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32085:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32051:48:0"
									},
									"src": "32025:75:0"
								},
								{
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "32106:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1690,
									"name": "ERC721InvalidSender",
									"nameLocation": "32269:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "32297:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "32289:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32288:16:0"
									},
									"src": "32263:42:0"
								},
								{
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "32311:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1695,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "32481:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "32511:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "32503:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32502:18:0"
									},
									"src": "32475:46:0"
								},
								{
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "32527:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1702,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "32785:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "32820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "32812:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32838:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "32830:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32811:35:0"
									},
									"src": "32779:68:0"
								},
								{
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "32853:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1707,
									"name": "ERC721InvalidApprover",
									"nameLocation": "33038:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "33068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "33060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33059:18:0"
									},
									"src": "33032:46:0"
								},
								{
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "33084:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1712,
									"name": "ERC721InvalidOperator",
									"nameLocation": "33292:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "33322:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "33314:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33313:18:0"
									},
									"src": "33286:46:0"
								}
							],
							"scope": 2947,
							"src": "31242:2092:0",
							"usedErrors": [
								1671,
								1676,
								1685,
								1690,
								1695,
								1702,
								1707,
								1712
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1714,
								"nodeType": "StructuredDocumentation",
								"src": "33336:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1760,
							"linearizedBaseContracts": [
								1760
							],
							"name": "IERC1155Errors",
							"nameLocation": "33490:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "33511:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1725,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "33883:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "33918:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "33910:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "33934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "33926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "33951:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "33943:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33967:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "33959:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33909:66:0"
									},
									"src": "33877:99:0"
								},
								{
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "33982:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1730,
									"name": "ERC1155InvalidSender",
									"nameLocation": "34145:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "34174:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "34166:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34165:16:0"
									},
									"src": "34139:43:0"
								},
								{
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "34188:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1735,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "34358:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "34389:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "34381:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34380:18:0"
									},
									"src": "34352:47:0"
								},
								{
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "34405:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1742,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "34672:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "34709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "34701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34727:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "34719:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34700:33:0"
									},
									"src": "34666:68:0"
								},
								{
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "34740:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1747,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "34925:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "34956:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "34948:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34947:18:0"
									},
									"src": "34919:47:0"
								},
								{
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "34972:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1752,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "35180:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "35211:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "35203:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35202:18:0"
									},
									"src": "35174:47:0"
								},
								{
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "35227:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1759,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "35518:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "35552:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "35544:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "35571:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "35563:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35543:41:0"
									},
									"src": "35512:73:0"
								}
							],
							"scope": 2947,
							"src": "33480:2107:0",
							"usedErrors": [
								1725,
								1730,
								1735,
								1742,
								1747,
								1752,
								1759
							],
							"usedEvents": []
						},
						{
							"id": 1761,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35723:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1763,
										"name": "Context",
										"nameLocations": [
											"36031:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "36031:7:0"
									},
									"id": 1764,
									"nodeType": "InheritanceSpecifier",
									"src": "36031:7:0"
								},
								{
									"baseName": {
										"id": 1765,
										"name": "ERC165",
										"nameLocations": [
											"36040:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1624,
										"src": "36040:6:0"
									},
									"id": 1766,
									"nodeType": "InheritanceSpecifier",
									"src": "36040:6:0"
								},
								{
									"baseName": {
										"id": 1767,
										"name": "IERC721",
										"nameLocations": [
											"36048:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "36048:7:0"
									},
									"id": 1768,
									"nodeType": "InheritanceSpecifier",
									"src": "36048:7:0"
								},
								{
									"baseName": {
										"id": 1769,
										"name": "IERC721Metadata",
										"nameLocations": [
											"36057:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "36057:15:0"
									},
									"id": 1770,
									"nodeType": "InheritanceSpecifier",
									"src": "36057:15:0"
								},
								{
									"baseName": {
										"id": 1771,
										"name": "IERC721Errors",
										"nameLocations": [
											"36074:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1713,
										"src": "36074:13:0"
									},
									"id": 1772,
									"nodeType": "InheritanceSpecifier",
									"src": "36074:13:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1762,
								"nodeType": "StructuredDocumentation",
								"src": "35756:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2753,
							"linearizedBaseContracts": [
								2753,
								1713,
								167,
								125,
								1624,
								11,
								196
							],
							"name": "ERC721",
							"nameLocation": "36021:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1775,
									"libraryName": {
										"id": 1773,
										"name": "Strings",
										"nameLocations": [
											"36100:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1603,
										"src": "36100:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "36094:26:0",
									"typeName": {
										"id": 1774,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "36112:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1777,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "36159:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36144:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1776,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36144:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1779,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "36206:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36191:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1778,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36191:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1783,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "36264:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36220:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1782,
										"keyName": "tokenId",
										"keyNameLocation": "36236:7:0",
										"keyType": {
											"id": 1780,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36228:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "36220:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1781,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36247:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1787,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "36320:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36278:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1786,
										"keyName": "owner",
										"keyNameLocation": "36294:5:0",
										"keyType": {
											"id": 1784,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36286:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "36278:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1785,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36303:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1791,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "36380:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36336:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1790,
										"keyName": "tokenId",
										"keyNameLocation": "36352:7:0",
										"keyType": {
											"id": 1788,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36344:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "36336:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1789,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36363:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1797,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "36470:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36402:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1796,
										"keyName": "owner",
										"keyNameLocation": "36418:5:0",
										"keyType": {
											"id": 1792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36410:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "36402:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1795,
											"keyName": "operator",
											"keyNameLocation": "36443:8:0",
											"keyType": {
												"id": 1793,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "36435:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "36427:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1794,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "36455:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1813,
										"nodeType": "Block",
										"src": "36664:57:0",
										"statements": [
											{
												"expression": {
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1805,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "36674:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1806,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1800,
														"src": "36682:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "36674:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "36674:13:0"
											},
											{
												"expression": {
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1809,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "36697:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1810,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "36707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "36697:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1812,
												"nodeType": "ExpressionStatement",
												"src": "36697:17:0"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "36495:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1814,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "36634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "36620:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36620:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "36655:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "36641:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36641:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36619:44:0"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36664:0:0"
									},
									"scope": 2753,
									"src": "36608:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										10,
										1623
									],
									"body": {
										"id": 1844,
										"nodeType": "Block",
										"src": "36896:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1825,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "36925:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1827,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "36945:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$125_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$125_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1826,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "36940:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36940:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$125",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "36954:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "36940:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "36925:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1831,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "36981:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1833,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "37001:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$167_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$167_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1832,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "36996:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36996:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$167",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "37018:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "36996:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "36981:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "36925:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1840,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "37069:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1838,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "37045:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2753_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37051:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1623,
															"src": "37045:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37045:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36925:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1824,
												"id": 1843,
												"nodeType": "Return",
												"src": "36906:175:0"
											}
										]
									},
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "36727:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "36797:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1821,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1819,
												"name": "ERC165",
												"nameLocations": [
													"36864:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1624,
												"src": "36864:6:0"
											},
											{
												"id": 1820,
												"name": "IERC165",
												"nameLocations": [
													"36872:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "36872:7:0"
											}
										],
										"src": "36855:25:0"
									},
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "36822:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "36815:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1816,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "36815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36814:20:0"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "36890:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36890:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36889:6:0"
									},
									"scope": 2753,
									"src": "36788:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "37219:136:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1853,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "37233:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37250:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "37242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1854,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "37242:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37242:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37233:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1867,
												"nodeType": "IfStatement",
												"src": "37229:87:0",
												"trueBody": {
													"id": 1866,
													"nodeType": "Block",
													"src": "37254:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "37302:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37294:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1860,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37294:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37294:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1859,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "37275:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37275:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1865,
															"nodeType": "RevertStatement",
															"src": "37268:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1868,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "37332:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1870,
													"indexExpression": {
														"id": 1869,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "37342:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37332:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1852,
												"id": 1871,
												"nodeType": "Return",
												"src": "37325:23:0"
											}
										]
									},
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "37094:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "37156:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37174:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "37166:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37165:15:0"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "37210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37209:9:0"
									},
									"scope": 2753,
									"src": "37147:208:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "37484:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1882,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "37515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1881,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "37501:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37501:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1880,
												"id": 1884,
												"nodeType": "Return",
												"src": "37494:29:0"
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "37361:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "37421:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "37429:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37428:17:0"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "37475:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37474:9:0"
									},
									"scope": 2753,
									"src": "37412:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										152
									],
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "37652:29:0",
										"statements": [
											{
												"expression": {
													"id": 1892,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1777,
													"src": "37669:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1891,
												"id": 1893,
												"nodeType": "Return",
												"src": "37662:12:0"
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "37536:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "37601:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37605:2:0"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "37637:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1889,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37637:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37636:15:0"
									},
									"scope": 2753,
									"src": "37592:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										158
									],
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "37807:31:0",
										"statements": [
											{
												"expression": {
													"id": 1901,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1779,
													"src": "37824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1900,
												"id": 1902,
												"nodeType": "Return",
												"src": "37817:14:0"
											}
										]
									},
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "37687:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "37754:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37760:2:0"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "37792:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37792:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37791:15:0"
									},
									"scope": 2753,
									"src": "37745:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "37983:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1913,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "38007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1912,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "37993:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37993:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "37993:22:0"
											},
											{
												"assignments": [
													1917
												],
												"declarations": [
													{
														"constant": false,
														"id": 1917,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "38040:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1939,
														"src": "38026:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1916,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "38026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1918,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "38050:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38050:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38026:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1923,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1917,
																		"src": "38083:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38077:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1921,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "38077:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38077:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38092:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "38077:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38101:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "38077:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38150:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "38077:75:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 1931,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "38119:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1932,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1907,
																		"src": "38128:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "38136:8:0",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1416,
																	"src": "38128:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38128:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38105:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 1928,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "38105:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38112:6:0",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "38105:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38105:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1911,
												"id": 1938,
												"nodeType": "Return",
												"src": "38070:82:0"
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "37844:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "37913:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "37922:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37921:17:0"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "37968:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37968:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37967:15:0"
									},
									"scope": 2753,
									"src": "37904:255:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "38467:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "38484:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1945,
												"id": 1947,
												"nodeType": "Return",
												"src": "38477:9:0"
											}
										]
									},
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "38165:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "38410:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38418:2:0"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "38452:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38452:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38451:15:0"
									},
									"scope": 2753,
									"src": "38401:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										98
									],
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "38611:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "38630:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "38634:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1960,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "38643:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38643:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1957,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2556,
															2622
														],
														"referencedDeclaration": 2556,
														"src": "38621:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38621:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "38621:35:0"
											}
										]
									},
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "38499:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "38559:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38575:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "38567:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38587:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "38579:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38566:29:0"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38611:0:0"
									},
									"scope": 2753,
									"src": "38550:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "38800:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1974,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "38824:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1973,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "38810:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38810:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "38810:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1978,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "38863:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1977,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "38850:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38850:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1972,
												"id": 1980,
												"nodeType": "Return",
												"src": "38843:28:0"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "38669:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "38733:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38753:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "38745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38744:17:0"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "38791:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38790:9:0"
									},
									"scope": 2753,
									"src": "38724:154:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										106
									],
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "39020:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1991,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "39049:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39049:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1993,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "39063:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1994,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "39073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1990,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "39030:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39030:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "39030:52:0"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "38884:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "38954:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38980:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "38972:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "38995:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "38990:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38990:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38971:33:0"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39020:0:0"
									},
									"scope": 2753,
									"src": "38945:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										124
									],
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "39249:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2008,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "39266:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2010,
														"indexExpression": {
															"id": 2009,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "39285:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39266:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2012,
													"indexExpression": {
														"id": 2011,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "39292:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39266:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2007,
												"id": 2013,
												"nodeType": "Return",
												"src": "39259:42:0"
											}
										]
									},
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "39095:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "39164:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "39189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "39181:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39204:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "39196:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39180:33:0"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "39243:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39242:6:0"
									},
									"scope": 2753,
									"src": "39155:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										90
									],
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "39450:498:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2025,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "39464:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39478:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2026,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "39470:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39470:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39464:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2039,
												"nodeType": "IfStatement",
												"src": "39460:87:0",
												"trueBody": {
													"id": 2038,
													"nodeType": "Block",
													"src": "39482:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "39533:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "39525:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2032,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "39525:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39525:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2031,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "39503:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39503:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2037,
															"nodeType": "RevertStatement",
															"src": "39496:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2041
												],
												"declarations": [
													{
														"constant": false,
														"id": 2041,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "39773:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "39765:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2040,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "39765:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2048,
												"initialValue": {
													"arguments": [
														{
															"id": 2043,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "39797:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2044,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "39801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2045,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "39810:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39810:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2042,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "39789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39789:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39765:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2049,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "39837:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2050,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "39854:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39837:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2059,
												"nodeType": "IfStatement",
												"src": "39833:109:0",
												"trueBody": {
													"id": 2058,
													"nodeType": "Block",
													"src": "39860:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2053,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "39902:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2054,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "39908:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2055,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "39917:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2052,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "39881:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39881:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2057,
															"nodeType": "RevertStatement",
															"src": "39874:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "39314:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "39379:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39400:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "39392:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39414:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "39406:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39426:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "39418:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39391:43:0"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39450:0:0"
									},
									"scope": 2753,
									"src": "39370:578:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "40090:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2072,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "40117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2073,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "40123:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2074,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "40127:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40136:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2071,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2079,
															2105
														],
														"referencedDeclaration": 2105,
														"src": "40100:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40100:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "40100:39:0"
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "39954:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "40023:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40048:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "40040:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40062:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "40054:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40074:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "40066:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40039:43:0"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40090:0:0"
									},
									"scope": 2753,
									"src": "40014:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 2104,
										"nodeType": "Block",
										"src": "40315:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2092,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "40338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2093,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "40344:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2094,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "40348:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2091,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "40325:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40325:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "40325:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2098,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "40389:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2099,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "40395:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2100,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "40399:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "40408:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2097,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "40366:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40366:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "40366:47:0"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "40152:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "40221:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40246:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "40238:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40260:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "40252:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40272:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "40264:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40294:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "40281:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40237:62:0"
									},
									"returnParameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40315:0:0"
									},
									"scope": 2753,
									"src": "40212:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "41009:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2113,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "41026:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2115,
													"indexExpression": {
														"id": 2114,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2108,
														"src": "41034:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41026:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2112,
												"id": 2116,
												"nodeType": "Return",
												"src": "41019:23:0"
											}
										]
									},
									"documentation": {
										"id": 2106,
										"nodeType": "StructuredDocumentation",
										"src": "40426:503:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "40943:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40960:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "40952:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40951:17:0"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "41000:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40999:9:0"
									},
									"scope": 2753,
									"src": "40934:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "41244:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2126,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "41261:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2128,
													"indexExpression": {
														"id": 2127,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "41277:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41261:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2125,
												"id": 2129,
												"nodeType": "Return",
												"src": "41254:31:0"
											}
										]
									},
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "41055:105:0",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "41174:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "41187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41186:17:0"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "41235:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41234:9:0"
									},
									"scope": 2753,
									"src": "41165:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "41712:163:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2143,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "41741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "41760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41752:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2144,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "41752:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41752:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "41741:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2149,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2134,
																			"src": "41779:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2150,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2136,
																			"src": "41788:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "41779:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2153,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2134,
																				"src": "41816:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2154,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2136,
																				"src": "41823:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2152,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "41799:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41799:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "41779:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2158,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2138,
																				"src": "41848:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2157,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "41835:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41835:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2160,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "41860:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "41835:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "41779:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2163,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "41778:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "41741:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2142,
												"id": 2165,
												"nodeType": "Return",
												"src": "41722:146:0"
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "41298:300:0",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "41612:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "41634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "41626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "41649:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "41641:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41666:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "41658:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41625:49:0"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "41706:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41706:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41705:6:0"
									},
									"scope": 2753,
									"src": "41603:272:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "42406:271:0",
										"statements": [
											{
												"condition": {
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "42420:39:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2178,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "42435:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2179,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "42442:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2180,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "42451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2177,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "42421:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42421:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2202,
												"nodeType": "IfStatement",
												"src": "42416:255:0",
												"trueBody": {
													"id": 2201,
													"nodeType": "Block",
													"src": "42461:210:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2183,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "42479:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42496:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "42488:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2184,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "42488:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42488:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "42479:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2199,
																"nodeType": "Block",
																"src": "42577:84:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2195,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2172,
																					"src": "42629:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2196,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "42638:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2194,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1702,
																				"src": "42602:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42602:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2198,
																		"nodeType": "RevertStatement",
																		"src": "42595:51:0"
																	}
																]
															},
															"id": 2200,
															"nodeType": "IfStatement",
															"src": "42475:186:0",
															"trueBody": {
																"id": 2193,
																"nodeType": "Block",
																"src": "42500:71:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2190,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "42548:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2189,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "42525:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42525:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2192,
																		"nodeType": "RevertStatement",
																		"src": "42518:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "41881:423:0",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "42318:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "42343:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "42335:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "42358:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "42350:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42375:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "42367:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42334:49:0"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42406:0:0"
									},
									"scope": 2753,
									"src": "42309:368:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2219,
										"nodeType": "Block",
										"src": "43394:78:0",
										"statements": [
											{
												"id": 2218,
												"nodeType": "UncheckedBlock",
												"src": "43404:62:0",
												"statements": [
													{
														"expression": {
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2212,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "43428:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2214,
																"indexExpression": {
																	"id": 2213,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "43438:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "43428:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2215,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "43450:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "43428:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2217,
														"nodeType": "ExpressionStatement",
														"src": "43428:27:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "42683:631:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 2220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "43328:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "43353:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "43345:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43370:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "43362:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2208,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "43362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43344:32:0"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43394:0:0"
									},
									"scope": 2753,
									"src": "43319:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "44160:700:0",
										"statements": [
											{
												"assignments": [
													2233
												],
												"declarations": [
													{
														"constant": false,
														"id": 2233,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "44178:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2309,
														"src": "44170:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2232,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44170:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2237,
												"initialValue": {
													"arguments": [
														{
															"id": 2235,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "44194:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2234,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "44185:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44185:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44170:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2238,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2227,
														"src": "44262:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2239,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44270:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44270:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44262:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2251,
												"nodeType": "IfStatement",
												"src": "44258:86:0",
												"trueBody": {
													"id": 2250,
													"nodeType": "Block",
													"src": "44282:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2245,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "44313:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2246,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2227,
																		"src": "44319:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2247,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "44325:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2244,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "44296:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44296:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2249,
															"nodeType": "ExpressionStatement",
															"src": "44296:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2252,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2233,
														"src": "44388:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44404:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2253,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44396:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44396:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44388:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2279,
												"nodeType": "IfStatement",
												"src": "44384:256:0",
												"trueBody": {
													"id": 2278,
													"nodeType": "Block",
													"src": "44408:232:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44521:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "44513:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2259,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "44513:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44513:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2263,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "44525:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44542:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "44534:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2264,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "44534:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44534:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44546:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2258,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2556,
																		2622
																	],
																	"referencedDeclaration": 2622,
																	"src": "44504:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44504:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2270,
															"nodeType": "ExpressionStatement",
															"src": "44504:48:0"
														},
														{
															"id": 2277,
															"nodeType": "UncheckedBlock",
															"src": "44567:63:0",
															"statements": [
																{
																	"expression": {
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2271,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1787,
																				"src": "44595:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2273,
																			"indexExpression": {
																				"id": 2272,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2233,
																				"src": "44605:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "44595:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44614:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "44595:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2276,
																	"nodeType": "ExpressionStatement",
																	"src": "44595:20:0"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2280,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "44654:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2281,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44660:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44660:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44654:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2294,
												"nodeType": "IfStatement",
												"src": "44650:107:0",
												"trueBody": {
													"id": 2293,
													"nodeType": "Block",
													"src": "44672:85:0",
													"statements": [
														{
															"id": 2292,
															"nodeType": "UncheckedBlock",
															"src": "44686:61:0",
															"statements": [
																{
																	"expression": {
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2286,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1787,
																				"src": "44714:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2288,
																			"indexExpression": {
																				"id": 2287,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2223,
																				"src": "44724:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "44714:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44731:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "44714:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2291,
																	"nodeType": "ExpressionStatement",
																	"src": "44714:18:0"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2295,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "44767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2297,
														"indexExpression": {
															"id": 2296,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "44775:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "44767:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2298,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "44786:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44767:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2300,
												"nodeType": "ExpressionStatement",
												"src": "44767:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2302,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "44813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2303,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "44819:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2304,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "44823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2301,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "44804:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44804:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2306,
												"nodeType": "EmitStatement",
												"src": "44799:32:0"
											},
											{
												"expression": {
													"id": 2307,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2233,
													"src": "44849:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2231,
												"id": 2308,
												"nodeType": "Return",
												"src": "44842:11:0"
											}
										]
									},
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "43478:582:0",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "44074:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44090:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "44082:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44102:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "44094:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "44119:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "44111:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44081:43:0"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "44151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44150:9:0"
									},
									"scope": 2753,
									"src": "44065:795:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "45235:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2318,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "45249:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45263:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "45255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2319,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "45255:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45255:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45249:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2332,
												"nodeType": "IfStatement",
												"src": "45245:87:0",
												"trueBody": {
													"id": 2331,
													"nodeType": "Block",
													"src": "45267:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "45318:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "45310:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2325,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "45310:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45310:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2324,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "45288:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45288:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2330,
															"nodeType": "RevertStatement",
															"src": "45281:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2334
												],
												"declarations": [
													{
														"constant": false,
														"id": 2334,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "45349:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2359,
														"src": "45341:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2333,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45341:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2343,
												"initialValue": {
													"arguments": [
														{
															"id": 2336,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "45373:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "45377:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45394:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45386:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2338,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45386:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45386:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2335,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "45365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45365:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45341:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2344,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "45411:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45436:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "45428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "45428:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45428:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45411:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2358,
												"nodeType": "IfStatement",
												"src": "45407:96:0",
												"trueBody": {
													"id": 2357,
													"nodeType": "Block",
													"src": "45440:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "45489:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "45481:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "45481:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45481:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2350,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "45461:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45461:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2356,
															"nodeType": "RevertStatement",
															"src": "45454:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "44866:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "45191:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "45205:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "45197:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45217:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "45209:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45196:29:0"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45235:0:0"
									},
									"scope": 2753,
									"src": "45182:327:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2374,
										"nodeType": "Block",
										"src": "45917:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "45937:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "45941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45950:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2368,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2375,
															2401
														],
														"referencedDeclaration": 2401,
														"src": "45927:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45927:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2373,
												"nodeType": "ExpressionStatement",
												"src": "45927:26:0"
											}
										]
									},
									"documentation": {
										"id": 2361,
										"nodeType": "StructuredDocumentation",
										"src": "45515:340:0",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "45869:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "45887:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "45879:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45899:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "45891:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45878:29:0"
									},
									"returnParameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45917:0:0"
									},
									"scope": 2753,
									"src": "45860:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "46265:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2386,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "46281:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2387,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "46285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2385,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2360,
														"src": "46275:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46275:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "46275:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46334:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46326:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2391,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46326:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46326:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2395,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "46338:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2396,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "46342:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2397,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "46351:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2390,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "46303:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46303:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2399,
												"nodeType": "ExpressionStatement",
												"src": "46303:53:0"
											}
										]
									},
									"documentation": {
										"id": 2376,
										"nodeType": "StructuredDocumentation",
										"src": "45966:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "46190:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46208:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "46200:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46220:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "46212:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "46242:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "46229:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46229:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46199:48:0"
									},
									"returnParameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46265:0:0"
									},
									"scope": 2753,
									"src": "46181:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "46730:186:0",
										"statements": [
											{
												"assignments": [
													2408
												],
												"declarations": [
													{
														"constant": false,
														"id": 2408,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "46748:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2433,
														"src": "46740:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2407,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46740:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2420,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46772:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2410,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46772:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46772:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2414,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "46784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46801:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46793:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2415,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46793:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46793:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2409,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "46764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46764:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46740:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2421,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "46818:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46843:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46835:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2422,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "46835:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46835:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46818:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2432,
												"nodeType": "IfStatement",
												"src": "46814:96:0",
												"trueBody": {
													"id": 2431,
													"nodeType": "Block",
													"src": "46847:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2428,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2404,
																		"src": "46891:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2427,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "46868:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46868:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2430,
															"nodeType": "RevertStatement",
															"src": "46861:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2402,
										"nodeType": "StructuredDocumentation",
										"src": "46369:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "46698:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46712:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "46704:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46703:17:0"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46730:0:0"
									},
									"scope": 2753,
									"src": "46689:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2493,
										"nodeType": "Block",
										"src": "47311:389:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2444,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2439,
														"src": "47325:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47339:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47331:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2445,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47331:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47331:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47325:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2458,
												"nodeType": "IfStatement",
												"src": "47321:87:0",
												"trueBody": {
													"id": 2457,
													"nodeType": "Block",
													"src": "47343:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47394:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47386:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2451,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47386:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47386:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2450,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "47364:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47364:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2456,
															"nodeType": "RevertStatement",
															"src": "47357:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2460
												],
												"declarations": [
													{
														"constant": false,
														"id": 2460,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "47425:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2493,
														"src": "47417:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2459,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47417:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2469,
												"initialValue": {
													"arguments": [
														{
															"id": 2462,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2439,
															"src": "47449:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2463,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2441,
															"src": "47453:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47470:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "47462:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "47462:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47462:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2461,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "47441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47441:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47417:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2470,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2460,
														"src": "47487:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47512:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47504:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2471,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47504:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47504:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47487:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2481,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "47589:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2482,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "47606:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "47589:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2491,
													"nodeType": "IfStatement",
													"src": "47585:109:0",
													"trueBody": {
														"id": 2490,
														"nodeType": "Block",
														"src": "47612:82:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2485,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "47654:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2486,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "47660:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2487,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "47669:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2484,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "47633:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47633:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 2489,
																"nodeType": "RevertStatement",
																"src": "47626:57:0"
															}
														]
													}
												},
												"id": 2492,
												"nodeType": "IfStatement",
												"src": "47483:211:0",
												"trueBody": {
													"id": 2480,
													"nodeType": "Block",
													"src": "47516:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2477,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "47560:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2476,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "47537:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47537:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2479,
															"nodeType": "RevertStatement",
															"src": "47530:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "46922:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "47249:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47267:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "47259:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47281:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "47273:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47293:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "47285:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47258:43:0"
									},
									"returnParameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47311:0:0"
									},
									"scope": 2753,
									"src": "47240:460:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2511,
										"nodeType": "Block",
										"src": "48708:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2505,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "48732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2506,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "48738:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2507,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "48742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48751:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2504,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2512,
															2538
														],
														"referencedDeclaration": 2538,
														"src": "48718:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48718:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2510,
												"nodeType": "ExpressionStatement",
												"src": "48718:36:0"
											}
										]
									},
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "47706:922:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "48642:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "48664:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "48656:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48678:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "48670:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48690:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "48682:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48655:43:0"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48708:0:0"
									},
									"scope": 2753,
									"src": "48633:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "49100:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2525,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "49120:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2526,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2517,
															"src": "49126:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2527,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "49130:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2524,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2494,
														"src": "49110:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49110:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2529,
												"nodeType": "ExpressionStatement",
												"src": "49110:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2531,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "49171:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2532,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2517,
															"src": "49177:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2533,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "49181:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2534,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2521,
															"src": "49190:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2530,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "49148:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49148:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2536,
												"nodeType": "ExpressionStatement",
												"src": "49148:47:0"
											}
										]
									},
									"documentation": {
										"id": 2513,
										"nodeType": "StructuredDocumentation",
										"src": "48767:226:0",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "49007:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49029:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "49021:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49043:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "49035:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49055:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "49047:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "49077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "49064:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49064:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49020:62:0"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49100:0:0"
									},
									"scope": 2753,
									"src": "48998:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2555,
										"nodeType": "Block",
										"src": "49715:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2549,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2541,
															"src": "49734:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "49738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2551,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2545,
															"src": "49747:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2548,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2556,
															2622
														],
														"referencedDeclaration": 2622,
														"src": "49725:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49725:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2554,
												"nodeType": "ExpressionStatement",
												"src": "49725:33:0"
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "49208:432:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "49654:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49671:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "49663:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49683:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "49675:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "49700:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "49692:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49662:43:0"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49715:0:0"
									},
									"scope": 2753,
									"src": "49645:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2621,
										"nodeType": "Block",
										"src": "50041:568:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2568,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "50107:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2569,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "50120:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50136:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50128:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50128:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50128:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "50120:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "50107:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2614,
												"nodeType": "IfStatement",
												"src": "50103:460:0",
												"trueBody": {
													"id": 2613,
													"nodeType": "Block",
													"src": "50140:423:0",
													"statements": [
														{
															"assignments": [
																2577
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2577,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "50162:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2613,
																	"src": "50154:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2576,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "50154:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2581,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2579,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2561,
																		"src": "50184:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2578,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2688,
																	"src": "50170:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50170:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "50154:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2582,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "50320:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2585,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "50336:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "50328:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2583,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "50328:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "50328:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "50320:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2588,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2577,
																			"src": "50342:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2589,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "50351:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "50342:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "50320:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "50359:30:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2593,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2577,
																				"src": "50377:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2594,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2563,
																				"src": "50384:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2592,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "50360:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50360:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "50320:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2603,
															"nodeType": "IfStatement",
															"src": "50316:142:0",
															"trueBody": {
																"id": 2602,
																"nodeType": "Block",
																"src": "50391:67:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2599,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2563,
																					"src": "50438:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2598,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1707,
																				"src": "50416:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "50416:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2601,
																		"nodeType": "RevertStatement",
																		"src": "50409:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 2604,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2565,
																"src": "50476:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2612,
															"nodeType": "IfStatement",
															"src": "50472:81:0",
															"trueBody": {
																"id": 2611,
																"nodeType": "Block",
																"src": "50487:66:0",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2606,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2577,
																					"src": "50519:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2607,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "50526:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2608,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2561,
																					"src": "50530:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2605,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 33,
																				"src": "50510:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "50510:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2610,
																		"nodeType": "EmitStatement",
																		"src": "50505:33:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2615,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "50573:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2617,
														"indexExpression": {
															"id": 2616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "50589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50573:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2618,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2559,
														"src": "50600:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50573:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2620,
												"nodeType": "ExpressionStatement",
												"src": "50573:29:0"
											}
										]
									},
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "49771:171:0",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 2622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "49956:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49973:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "49965:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49985:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "49977:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "50002:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "49994:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "50013:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "50008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "50008:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49964:59:0"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50041:0:0"
									},
									"scope": 2753,
									"src": "49947:662:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2658,
										"nodeType": "Block",
										"src": "50911:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2632,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "50925:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50945:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50937:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2633,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50937:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50937:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50925:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2643,
												"nodeType": "IfStatement",
												"src": "50921:91:0",
												"trueBody": {
													"id": 2642,
													"nodeType": "Block",
													"src": "50949:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2639,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2627,
																		"src": "50992:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2638,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "50970:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50970:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2641,
															"nodeType": "RevertStatement",
															"src": "50963:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2644,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "51021:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2647,
															"indexExpression": {
																"id": 2645,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2625,
																"src": "51040:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "51021:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2648,
														"indexExpression": {
															"id": 2646,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2627,
															"src": "51047:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "51021:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2649,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2629,
														"src": "51059:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "51021:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2651,
												"nodeType": "ExpressionStatement",
												"src": "51021:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2653,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "51097:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2654,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2627,
															"src": "51104:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2655,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2629,
															"src": "51114:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2652,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "51082:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51082:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2657,
												"nodeType": "EmitStatement",
												"src": "51077:46:0"
											}
										]
									},
									"documentation": {
										"id": 2623,
										"nodeType": "StructuredDocumentation",
										"src": "50615:198:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 2659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "50827:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50854:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "50846:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "50869:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "50861:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "50884:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "50879:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "50879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50845:48:0"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50911:0:0"
									},
									"scope": 2753,
									"src": "50818:312:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "51437:169:0",
										"statements": [
											{
												"assignments": [
													2668
												],
												"declarations": [
													{
														"constant": false,
														"id": 2668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "51455:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2687,
														"src": "51447:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "51447:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2672,
												"initialValue": {
													"arguments": [
														{
															"id": 2670,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "51472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2669,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "51463:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51463:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51447:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2673,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2668,
														"src": "51494:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2674,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51503:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51503:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51494:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2684,
												"nodeType": "IfStatement",
												"src": "51490:88:0",
												"trueBody": {
													"id": 2683,
													"nodeType": "Block",
													"src": "51515:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2680,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2662,
																		"src": "51559:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2679,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "51536:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51536:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2682,
															"nodeType": "RevertStatement",
															"src": "51529:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2685,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2668,
													"src": "51594:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2666,
												"id": 2686,
												"nodeType": "Return",
												"src": "51587:12:0"
											}
										]
									},
									"documentation": {
										"id": 2660,
										"nodeType": "StructuredDocumentation",
										"src": "51136:224:0",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "51374:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "51388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51387:17:0"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "51428:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51427:9:0"
									},
									"scope": 2753,
									"src": "51365:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2751,
										"nodeType": "Block",
										"src": "52247:680:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2700,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "52261:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "52264:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "52261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52269:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "52261:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52278:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "52261:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2750,
												"nodeType": "IfStatement",
												"src": "52257:664:0",
												"trueBody": {
													"id": 2749,
													"nodeType": "Block",
													"src": "52281:640:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2729,
																		"nodeType": "Block",
																		"src": "52395:162:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2722,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2718,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2716,
																						"src": "52417:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2719,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 142,
																								"src": "52427:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$142_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2720,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "52443:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 141,
																							"src": "52427:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2721,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "52460:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "52427:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "52417:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2728,
																				"nodeType": "IfStatement",
																				"src": "52413:130:0",
																				"trueBody": {
																					"id": 2727,
																					"nodeType": "Block",
																					"src": "52470:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2724,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2693,
																										"src": "52521:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2723,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1695,
																									"src": "52499:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 2725,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "52499:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 2726,
																							"nodeType": "RevertStatement",
																							"src": "52492:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2730,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2717,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2716,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "52387:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2730,
																				"src": "52380:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2715,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "52380:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "52379:15:0"
																	},
																	"src": "52371:186:0"
																},
																{
																	"block": {
																		"id": 2746,
																		"nodeType": "Block",
																		"src": "52586:325:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2734,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2732,
																							"src": "52608:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2735,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "52615:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "52608:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2736,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "52625:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "52608:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2744,
																					"nodeType": "Block",
																					"src": "52707:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "52793:86:0",
																								"nodeType": "YulBlock",
																								"src": "52793:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "52830:2:0",
																															"nodeType": "YulLiteral",
																															"src": "52830:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "52834:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "52834:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "52826:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "52826:3:0"
																													},
																													"nativeSrc": "52826:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "52826:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "52849:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "52849:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "52843:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "52843:5:0"
																													},
																													"nativeSrc": "52843:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "52843:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "52819:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "52819:6:0"
																											},
																											"nativeSrc": "52819:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "52819:38:0"
																										},
																										"nativeSrc": "52819:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "52819:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 2732,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "52834:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2732,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "52849:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2743,
																							"nodeType": "InlineAssembly",
																							"src": "52784:95:0"
																						}
																					]
																				},
																				"id": 2745,
																				"nodeType": "IfStatement",
																				"src": "52604:293:0",
																				"trueBody": {
																					"id": 2742,
																					"nodeType": "Block",
																					"src": "52628:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2739,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2693,
																										"src": "52679:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2738,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1695,
																									"src": "52657:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 2740,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "52657:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 2741,
																							"nodeType": "RevertStatement",
																							"src": "52650:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2747,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2733,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2732,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "52578:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2747,
																				"src": "52565:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2731,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "52565:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "52564:21:0"
																	},
																	"src": "52558:353:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2709,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 178,
																			"src": "52336:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52336:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2711,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2691,
																		"src": "52350:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2712,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2695,
																		"src": "52356:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2713,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2697,
																		"src": "52365:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2706,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2693,
																				"src": "52315:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2705,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 142,
																			"src": "52299:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$142_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52299:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$142",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "52319:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "52299:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52299:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2748,
															"nodeType": "TryStatement",
															"src": "52295:616:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2689,
										"nodeType": "StructuredDocumentation",
										"src": "51612:528:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 2752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "52154:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52185:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "52177:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52199:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "52191:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52211:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "52203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52233:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "52220:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52176:62:0"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52247:0:0"
									},
									"scope": 2753,
									"src": "52145:782:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2947,
							"src": "36003:16926:0",
							"usedErrors": [
								1671,
								1676,
								1685,
								1690,
								1695,
								1702,
								1707,
								1712
							],
							"usedEvents": [
								24,
								33,
								42
							]
						},
						{
							"id": 2754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "53055:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2756,
										"name": "Context",
										"nameLocations": [
											"53599:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "53599:7:0"
									},
									"id": 2757,
									"nodeType": "InheritanceSpecifier",
									"src": "53599:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2755,
								"nodeType": "StructuredDocumentation",
								"src": "53082:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2898,
							"linearizedBaseContracts": [
								2898,
								196
							],
							"name": "Ownable",
							"nameLocation": "53588:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2759,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "53629:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "53613:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2758,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "53613:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2760,
										"nodeType": "StructuredDocumentation",
										"src": "53642:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 2764,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "53738:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "53773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "53765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53764:17:0"
									},
									"src": "53732:50:0"
								},
								{
									"documentation": {
										"id": 2765,
										"nodeType": "StructuredDocumentation",
										"src": "53788:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 2769,
									"name": "OwnableInvalidOwner",
									"nameLocation": "53881:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "53909:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "53901:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53900:15:0"
									},
									"src": "53875:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 2775,
									"name": "OwnershipTransferred",
									"nameLocation": "53928:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "53965:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "53949:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2773,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "53996:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "53980:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53948:57:0"
									},
									"src": "53922:84:0"
								},
								{
									"body": {
										"id": 2800,
										"nodeType": "Block",
										"src": "54166:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2781,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2778,
														"src": "54180:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54204:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54196:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2782,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54196:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54196:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54180:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2795,
												"nodeType": "IfStatement",
												"src": "54176:95:0",
												"trueBody": {
													"id": 2794,
													"nodeType": "Block",
													"src": "54208:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54257:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "54249:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2788,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "54249:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54249:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2787,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2769,
																	"src": "54229:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54229:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2793,
															"nodeType": "RevertStatement",
															"src": "54222:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2797,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2778,
															"src": "54299:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2796,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "54280:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54280:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2799,
												"nodeType": "ExpressionStatement",
												"src": "54280:32:0"
											}
										]
									},
									"documentation": {
										"id": 2776,
										"nodeType": "StructuredDocumentation",
										"src": "54012:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 2801,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "54152:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "54144:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54143:22:0"
									},
									"returnParameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54166:0:0"
									},
									"scope": 2898,
									"src": "54132:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "54428:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2804,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2835,
														"src": "54438:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54438:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2806,
												"nodeType": "ExpressionStatement",
												"src": "54438:13:0"
											},
											{
												"id": 2807,
												"nodeType": "PlaceholderStatement",
												"src": "54461:1:0"
											}
										]
									},
									"documentation": {
										"id": 2802,
										"nodeType": "StructuredDocumentation",
										"src": "54325:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2809,
									"name": "onlyOwner",
									"nameLocation": "54416:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54425:2:0"
									},
									"src": "54407:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2817,
										"nodeType": "Block",
										"src": "54600:30:0",
										"statements": [
											{
												"expression": {
													"id": 2815,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2759,
													"src": "54617:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2814,
												"id": 2816,
												"nodeType": "Return",
												"src": "54610:13:0"
											}
										]
									},
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "54475:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "54554:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54559:2:0"
									},
									"returnParameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "54591:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54590:9:0"
									},
									"scope": 2898,
									"src": "54545:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "54748:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2822,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2818,
															"src": "54762:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54762:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2824,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "54773:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54773:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54762:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2833,
												"nodeType": "IfStatement",
												"src": "54758:101:0",
												"trueBody": {
													"id": 2832,
													"nodeType": "Block",
													"src": "54787:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2828,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 178,
																			"src": "54835:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54835:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2827,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2764,
																	"src": "54808:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54808:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2831,
															"nodeType": "RevertStatement",
															"src": "54801:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2819,
										"nodeType": "StructuredDocumentation",
										"src": "54636:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 2835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "54712:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54723:2:0"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54748:0:0"
									},
									"scope": 2898,
									"src": "54703:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2848,
										"nodeType": "Block",
										"src": "55254:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55291:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55283:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2842,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "55283:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55283:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2841,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "55264:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55264:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "55264:30:0"
											}
										]
									},
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "54871:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2849,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2839,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2838,
												"name": "onlyOwner",
												"nameLocations": [
													"55244:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2809,
												"src": "55244:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55244:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "55209:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55226:2:0"
									},
									"returnParameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55254:0:0"
									},
									"scope": 2898,
									"src": "55200:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2876,
										"nodeType": "Block",
										"src": "55520:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2857,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2852,
														"src": "55534:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55554:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55546:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2858,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "55546:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55546:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55534:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2871,
												"nodeType": "IfStatement",
												"src": "55530:91:0",
												"trueBody": {
													"id": 2870,
													"nodeType": "Block",
													"src": "55558:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "55607:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "55599:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2864,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "55599:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55599:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2863,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2769,
																	"src": "55579:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55579:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2869,
															"nodeType": "RevertStatement",
															"src": "55572:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2873,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2852,
															"src": "55649:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2872,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "55630:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55630:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2875,
												"nodeType": "ExpressionStatement",
												"src": "55630:28:0"
											}
										]
									},
									"documentation": {
										"id": 2850,
										"nodeType": "StructuredDocumentation",
										"src": "55307:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2877,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2855,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2854,
												"name": "onlyOwner",
												"nameLocations": [
													"55510:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2809,
												"src": "55510:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55510:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "55459:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "55485:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "55477:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55476:18:0"
									},
									"returnParameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55520:0:0"
									},
									"scope": 2898,
									"src": "55450:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "55882:124:0",
										"statements": [
											{
												"assignments": [
													2884
												],
												"declarations": [
													{
														"constant": false,
														"id": 2884,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "55900:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2896,
														"src": "55892:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2883,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "55892:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2886,
												"initialValue": {
													"id": 2885,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2759,
													"src": "55911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55892:25:0"
											},
											{
												"expression": {
													"id": 2889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2887,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2759,
														"src": "55927:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2888,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2880,
														"src": "55936:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55927:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2890,
												"nodeType": "ExpressionStatement",
												"src": "55927:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2892,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2884,
															"src": "55980:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2893,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2880,
															"src": "55990:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2891,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2775,
														"src": "55959:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55959:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2895,
												"nodeType": "EmitStatement",
												"src": "55954:45:0"
											}
										]
									},
									"documentation": {
										"id": 2878,
										"nodeType": "StructuredDocumentation",
										"src": "55671:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "55828:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "55855:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "55847:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55846:18:0"
									},
									"returnParameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55882:0:0"
									},
									"scope": 2898,
									"src": "55819:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2947,
							"src": "53570:2438:0",
							"usedErrors": [
								2764,
								2769
							],
							"usedEvents": [
								2775
							]
						},
						{
							"id": 2899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "56038:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2900,
										"name": "ERC721",
										"nameLocations": [
											"56091:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2753,
										"src": "56091:6:0"
									},
									"id": 2901,
									"nodeType": "InheritanceSpecifier",
									"src": "56091:6:0"
								},
								{
									"baseName": {
										"id": 2902,
										"name": "Ownable",
										"nameLocations": [
											"56099:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2898,
										"src": "56099:7:0"
									},
									"id": 2903,
									"nodeType": "InheritanceSpecifier",
									"src": "56099:7:0"
								}
							],
							"canonicalName": "VolunteerNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2946,
							"linearizedBaseContracts": [
								2946,
								2898,
								2753,
								1713,
								167,
								125,
								1624,
								11,
								196
							],
							"name": "VolunteerNFT",
							"nameLocation": "56075:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2905,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "56129:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2946,
									"src": "56113:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2904,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "56113:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2917,
										"nodeType": "Block",
										"src": "56254:2:0",
										"statements": []
									},
									"id": 2918,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "566f6c756e746565724e4654",
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "56197:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7d2206c4194f58c2d0d63f3bed711fbbaf00ae6e43e0334b3535ab8ffdf8f10d",
														"typeString": "literal_string \"VolunteerNFT\""
													},
													"value": "VolunteerNFT"
												},
												{
													"hexValue": "564c4e",
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "56213:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ff4cfc987d8723f6900035f7cbf63f7dc99c24f064b3b23efec6ba7584ce1b9e",
														"typeString": "literal_string \"VLN\""
													},
													"value": "VLN"
												}
											],
											"id": 2912,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2909,
												"name": "ERC721",
												"nameLocations": [
													"56190:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2753,
												"src": "56190:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56190:29:0"
										},
										{
											"arguments": [
												{
													"id": 2914,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2907,
													"src": "56236:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2915,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2913,
												"name": "Ownable",
												"nameLocations": [
													"56228:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2898,
												"src": "56228:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56228:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "56168:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "56160:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56159:22:0"
									},
									"returnParameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56254:0:0"
									},
									"scope": 2946,
									"src": "56148:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1949
									],
									"body": {
										"id": 2926,
										"nodeType": "Block",
										"src": "56329:44:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f676f6f676c652e636f6d",
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "56346:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3f6641678587becf2fdc0c727b4cd606785df87278b6b9b208cd3948be7499db",
														"typeString": "literal_string \"https://google.com\""
													},
													"value": "https://google.com"
												},
												"functionReturnParameters": 2923,
												"id": 2925,
												"nodeType": "Return",
												"src": "56339:27:0"
											}
										]
									},
									"id": 2927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "56271:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2920,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "56296:8:0"
									},
									"parameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56279:2:0"
									},
									"returnParameters": {
										"id": 2923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "56314:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "56314:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56313:15:0"
									},
									"scope": 2946,
									"src": "56262:111:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2944,
										"nodeType": "Block",
										"src": "56426:81:0",
										"statements": [
											{
												"assignments": [
													2935
												],
												"declarations": [
													{
														"constant": false,
														"id": 2935,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "56444:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2944,
														"src": "56436:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2934,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "56436:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2938,
												"initialValue": {
													"id": 2937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "56454:14:0",
													"subExpression": {
														"id": 2936,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2905,
														"src": "56454:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56436:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2929,
															"src": "56488:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2941,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2935,
															"src": "56492:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2939,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2375,
															2401
														],
														"referencedDeclaration": 2375,
														"src": "56478:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56478:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2943,
												"nodeType": "ExpressionStatement",
												"src": "56478:22:0"
											}
										]
									},
									"functionSelector": "40d097c3",
									"id": 2945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2932,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2931,
												"name": "onlyOwner",
												"nameLocations": [
													"56416:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2809,
												"src": "56416:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56416:9:0"
										}
									],
									"name": "safeMint",
									"nameLocation": "56388:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "56405:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "56397:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56396:12:0"
									},
									"returnParameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56426:0:0"
									},
									"scope": 2946,
									"src": "56379:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2947,
							"src": "56066:443:0",
							"usedErrors": [
								1671,
								1676,
								1685,
								1690,
								1695,
								1702,
								1707,
								1712,
								2764,
								2769
							],
							"usedEvents": [
								24,
								33,
								42,
								2775
							]
						}
					],
					"src": "182:56327:0"
				},
				"id": 0
			}
		}
	}
}